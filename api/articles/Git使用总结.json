{"title":"Git使用学习","uid":"8f6e64efe3110f584471bcfd49c073a9","slug":"Git使用总结","date":"2023-08-20T02:25:12.000Z","updated":"2024-03-08T08:21:29.944Z","comments":true,"path":"api/articles/Git使用总结.json","keywords":"博客、橙汁蒸鱼、Orangefish、Oranfish","cover":"/medias/19.png","content":"<h2 id=\"1-引入\"><a href=\"#1-引入\" class=\"headerlink\" title=\"1.引入\"></a>1.引入</h2><h3 id=\"1-1-版本管理工具概念\"><a href=\"#1-1-版本管理工具概念\" class=\"headerlink\" title=\"1.1 版本管理工具概念\"></a>1.1 版本管理工具概念</h3><p>如果有一个软件能记录我们对文档的所有修改,所有版本,那么上面的问题讲迎刃而解.而这类软件我们一般叫做版本控制工具</p>\n<p>版本管理工具一般具有如下特性:</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">1) 能够记录历史版本,回退历史版本</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">2) 团队开发,方便代码合并</span></span></code></pre></div><h3 id=\"1-2-版本管理工具介绍\"><a href=\"#1-2-版本管理工具介绍\" class=\"headerlink\" title=\"1.2 版本管理工具介绍\"></a>1.2 版本管理工具介绍</h3><p>现在比较流行的版本管理工具是git ,但是实际上git 是近几年才发展起来的,可能有一些老的项目,还在用一些老的软件,比如svn</p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240306223938402.png\" alt=\"image-20240306223938402\"></p>\n<h4 id=\"1-2-1-SVN\"><a href=\"#1-2-1-SVN\" class=\"headerlink\" title=\"1.2.1 SVN\"></a>1.2.1 SVN</h4><p>工作流程</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SVN是集中式版本控制系统，版本库是集中放在中央服务器的.</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">工作流程如下:</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1.从中央服务器远程仓库下载代码</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    2.修改后将代码提交到中央服务器远程仓库</span></span></code></pre></div><p>优缺点:</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\"> 优点: 简单,易操作</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"> 缺点:所有代码必须放在中央服务器  </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">         1.服务器一旦宕机无法提交代码,即容错性较差</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">       2.离线无法提交代码,无法及时记录我们的提交行为</span></span></code></pre></div><p>svn流程图</p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/svn.jpg\"></p>\n<h4 id=\"1-2-2-Git\"><a href=\"#1-2-2-Git\" class=\"headerlink\" title=\"1.2.2 Git\"></a>1.2.2 Git</h4><p>工作流程</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">Git是分布式版本控制系统（Distributed Version Control System，简称 DVCS），分为两种类型的仓库：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">本地仓库和远程仓库</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">工作流程如下</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1．从远程仓库中克隆或拉取代码到本地仓库(clone/pull)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    2．从本地进行代码修改</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    3．在提交前先将代码提交到暂存区</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    4．提交到本地仓库。本地仓库中保存修改的各个历史版本</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    5．修改完成后，需要和团队成员共享代码时，将代码push到远程仓库</span></span></code></pre></div><p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/git.png\"></p>\n<p>总结:git和svn的区别</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">1. svn 是集中式版本控制工具,git 是分布式版本控制工具</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">2. svn 不支持离线提交,git 支持离线提交代码</span></span></code></pre></div><p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308104054199.png\" alt=\"image-20240308104054199\"></p>\n<p>命令如下： </p>\n<ol>\n<li>clone（克隆）: 从远程仓库中克隆代码到本地仓库 </li>\n<li>checkout （检出）:从本地仓库中检出一个仓库分支然后进行修订 </li>\n<li>add（添加）: 在提交前先将代码提交到暂存区 </li>\n<li>commit（提交）: 提交到本地仓库。本地仓库中保存修改的各个历史版本 </li>\n<li>fetch (抓取) ： 从远程库，抓取到本地仓库，不进行任何的合并动作，一般操作比较少。 </li>\n<li>pull (拉取) ： 从远程库拉到本地库，自动进行合并(merge)，然后放到到工作区，相当于 fetch+merge </li>\n<li>push（推送） : 修改完成后，需要和团队成员共享代码时，将代码推送到远程仓库</li>\n</ol>\n<h3 id=\"1-3-Git发展简史\"><a href=\"#1-3-Git发展简史\" class=\"headerlink\" title=\"1.3 Git发展简史\"></a>1.3 Git发展简史</h3><p>Linus  本人 花了10天的时间Git 出来了,一个月之内，Linux系统的源码已经由Git管理了！</p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/1571988966446.png\" alt=\"Linus 采访记录\"></p>\n<p>Git 出来以后毕竟是一个人做的,开始并不好用(刚开始只能用勉强可以用来形容), 还是很多人抱怨,发展了很多年都没有干过其他软件.</p>\n<p>直到 2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub,从此git 迎来了飞速发展,当下git 已经成为了最流行的版本控制工具</p>\n<h2 id=\"2-Git-的安装和常用命令\"><a href=\"#2-Git-的安装和常用命令\" class=\"headerlink\" title=\"2.Git 的安装和常用命令\"></a>2.Git 的安装和常用命令</h2><p>本教程里的git命令例子都是在Git Bash中演示的，会用到一些基本的linux命令，在此为大家提前列举：</p>\n<ul>\n<li>ls&#x2F;ll 查看当前目录 </li>\n<li>cat 查看文件内容 </li>\n<li>touch 创建文件 </li>\n<li>vi vi编辑器（使用vi编辑器是为了方便展示效果，学员可以记事本、editPlus、notPad++等其它编 辑器）</li>\n</ul>\n<h3 id=\"2-1-Git环境配置\"><a href=\"#2-1-Git环境配置\" class=\"headerlink\" title=\"2.1 Git环境配置\"></a>2.1 Git环境配置</h3><h4 id=\"2-1-1-下载与安装\"><a href=\"#2-1-1-下载与安装\" class=\"headerlink\" title=\"2.1.1 下载与安装\"></a>2.1.1 下载与安装</h4><p>下载地址： <a href=\"https://git-scm.com/download\">https://git-scm.com/download</a></p>\n<p><strong><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308104326822.png\" alt=\"image-20240308104326822\"></strong></p>\n<p>下载完成后可以得到如下安装文件：</p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308104345047.png\" alt=\"image-20240308104345047\"></p>\n<p>双击下载的安装文件来安装Git。安装完成后在电脑桌面（也可以是其他目录）点击右键，如果能够看 到如下两个菜单则说明Git安装成功。</p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308104404827.png\" alt=\"image-20240308104404827\"></p>\n<p>备注： </p>\n<ul>\n<li>Git GUI：Git提供的图形界面工具 </li>\n<li>Git Bash：Git提供的命令行工具 </li>\n<li>当安装Git后首先要做的事情是设置用户名称和email地址。这是非常重要的，因为每次Git提交都会使用 该用户信息</li>\n</ul>\n<h4 id=\"2-1-2-Git基本配置\"><a href=\"#2-1-2-Git基本配置\" class=\"headerlink\" title=\"2.1.2 Git基本配置\"></a>2.1.2 Git基本配置</h4><p>1.打开Git Bash </p>\n<p>2.设置用户信息 </p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">config</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--global</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">user.name</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">“itcast”</span><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">这里是设置用户名</span></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">config</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--global</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">user.email</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">“</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hello@itcast.cn”</span><span style=\"color: #BABED8\">     </span><span style=\"color: #C3E88D\">这里是设置自己的email地址</span></span></code></pre></div><p>查看配置信息 </p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">config</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--global</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">user.name</span></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">config</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--global</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">user.email</span></span></code></pre></div><h4 id=\"2-1-3-为常用指令配置别名（可选）\"><a href=\"#2-1-3-为常用指令配置别名（可选）\" class=\"headerlink\" title=\"2.1.3 为常用指令配置别名（可选）\"></a>2.1.3 为常用指令配置别名（可选）</h4><p>有些常用的指令参数非常多，每次都要输入好多参数，我们可以使用别名。 </p>\n<p>1.打开用户目录，创建 .bashrc 文件 </p>\n<p>部分windows系统不允许用户创建点号开头的文件，可以打开gitBash,执行  <code>touch ~/.bashrc</code> </p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308105750316.png\" alt=\"image-20240308105750316\"></p>\n<p>2.在 .bashrc 文件中输入如下内容：</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#用于输出git提交日志</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">alias</span><span style=\"color: #BABED8\"> git-log</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">git log --pretty=oneline --all --graph --abbrev-commit</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#用于输出当前目录所有文件及基本信息</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">alias</span><span style=\"color: #BABED8\"> ll</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">ls -al</span></span></code></pre></div><p>3.打开gitBash，执行 <code>source ~/.bashrc</code></p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308110054495.png\" alt=\"image-20240308110054495\"></p>\n<h4 id=\"2-1-4-解决GitBash乱码问题\"><a href=\"#2-1-4-解决GitBash乱码问题\" class=\"headerlink\" title=\"2.1.4 解决GitBash乱码问题\"></a>2.1.4 解决GitBash乱码问题</h4><p>1.打开GitBash执行下面命令</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">config</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--global</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">core.quotepath</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">false</span></span></code></pre></div><p>2.<code>$&#123;git_home&#125;/etc/bash.bashrc</code>\t 文件最后加入下面两行 </p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">export</span><span style=\"color: #BABED8\"> LANG</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">zh_CN.UTF-8</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">export</span><span style=\"color: #BABED8\"> LC_ALL</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">zh_CN.UTF-8</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span></span></code></pre></div><h3 id=\"2-2-获取本地仓库\"><a href=\"#2-2-获取本地仓库\" class=\"headerlink\" title=\"2.2 获取本地仓库\"></a>2.2 获取本地仓库</h3><p>要使用Git对我们的代码进行版本控制，首先需要获得本地仓库 </p>\n<p>1）在电脑的任意位置创建一个空目录（例如test）作为我们的本地Git仓库 </p>\n<p>2）进入这个目录中，点击右键打开Git bash窗口 </p>\n<p>3）执行命令git init </p>\n<p>4）如果创建成功后可在文件夹下看到隐藏的.git目录。</p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308110459089.png\" alt=\"image-20240308110459089\"></p>\n<h3 id=\"2-3-基础操作指令\"><a href=\"#2-3-基础操作指令\" class=\"headerlink\" title=\"2.3 基础操作指令\"></a>2.3 基础操作指令</h3><p>Git工作目录下对于文件的修改(增加、删除、更新)会存在几个状态，这些修改的状态会随着我们执行Git 的命令而发生变化。</p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308110802022.png\" alt=\"image-20240308110802022\"></p>\n<p>本章节主要讲解如何使用命令来控制这些状态之间的转换： </p>\n<ol>\n<li>git add (工作区 –&gt; 暂存区) </li>\n<li>git commit (暂存区 –&gt; 本地仓库)</li>\n</ol>\n<h4 id=\"2-3-1-查看修改的状态（status）\"><a href=\"#2-3-1-查看修改的状态（status）\" class=\"headerlink\" title=\"2.3.1 查看修改的状态（status）\"></a>2.3.1 查看修改的状态（status）</h4><ul>\n<li>作用：查看的修改的状态（暂存区、工作区）</li>\n<li>命令形式：git status</li>\n</ul>\n<h4 id=\"2-3-2-添加工作区到暂存区（add）\"><a href=\"#2-3-2-添加工作区到暂存区（add）\" class=\"headerlink\" title=\"2.3.2 添加工作区到暂存区（add）\"></a>2.3.2 添加工作区到暂存区（add）</h4><ul>\n<li>作用：添加工作区一个或多个文件的修改到暂存区</li>\n<li>命令行事：git add 单个文件名|通配符</li>\n<li>将所有修改加入暂存区：git add .</li>\n</ul>\n<h4 id=\"2-3-3-提交暂存区到本地仓库（commit）\"><a href=\"#2-3-3-提交暂存区到本地仓库（commit）\" class=\"headerlink\" title=\"2.3.3 提交暂存区到本地仓库（commit）\"></a>2.3.3 提交暂存区到本地仓库（commit）</h4><ul>\n<li>作用：提交暂存区内容到本地仓库的当前分支</li>\n<li>命令形式：git commit -m ‘注释内容’</li>\n</ul>\n<h4 id=\"2-3-4-查看提交日志（log）\"><a href=\"#2-3-4-查看提交日志（log）\" class=\"headerlink\" title=\"2.3.4 查看提交日志（log）\"></a>2.3.4 查看提交日志（log）</h4><ul>\n<li>作用：查看提交记录</li>\n<li>命令形式：git log [option]</li>\n<li>options<ul>\n<li>–all 显示所有分支</li>\n<li>–pretty&#x3D;oneline 将提交信息显示为一行</li>\n<li>–abbrev-commit 使得输出的commitld更简短</li>\n<li>–graph以图的形式显示</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-3-5-版本回退\"><a href=\"#2-3-5-版本回退\" class=\"headerlink\" title=\"2.3.5 版本回退\"></a>2.3.5 版本回退</h4><ul>\n<li>作用：版本切换</li>\n<li>命令形式：git reset –hard commitID<ul>\n<li>commitID 可以使用 git-log 或者 git log指令查看</li>\n</ul>\n</li>\n<li>如何查看已经删除的记录？<ul>\n<li>git reflog</li>\n<li>这个指令可以看到已经删除的提交记录</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-3-6-添加文件至忽略列表\"><a href=\"#2-3-6-添加文件至忽略列表\" class=\"headerlink\" title=\"2.3.6 添加文件至忽略列表\"></a>2.3.6 添加文件至忽略列表</h4><p>一般我们总会有些文件无需纳入Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动 生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以在工作目录 中创建一个名为 .gitignore 的文件（文件名称固定），列出要忽略的文件模式。下面是一个示例：</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># no .a files</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">*.a</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># but do track lib.a, even though you&#39;re ignoring .a files above</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!</span><span style=\"color: #FFCB6B\">lib.a</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># only ignore the TODO file in the current directory, not subdir/TODO</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">/TODO</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># ignore all files in the build/ directory</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">build/</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># ignore doc/notes.txt, but not doc/server/arch.txt</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">doc/*.txt</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># ignore all .pdf files in the doc/ directory</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">doc/**/*.pdf</span></span></code></pre></div><p><strong>基础操作：</strong></p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#####################仓库初始化######################</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 创建目录（git_test01）并在目录下打开gitbash</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">略</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 初始化git仓库</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">init</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#####################创建文件并提交#####################</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 目录下创建文件 file01.txt</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">略</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 将修改加入暂存区</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">add</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">.</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 将修改提交到本地仓库，提交记录内容为：commit 001</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">commit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-m</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">commit 001</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 查看日志</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">log</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">####################修改文件并提交######################</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 修改file01的内容为：count=1</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">略</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 将修改加入暂存区</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">add</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">.</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># # 将修改提交到本地仓库，提交记录内容为：update file01</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">commit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--m</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">update file01</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 查看日志</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">log</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 以精简的方式显示提交记录</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git-log</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">####################将最后一次修改还原##################</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 查看提交记录</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git-log</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 找到倒数第2次提交的commitID</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">略</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 版本回退</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">reset</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">commitID</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--hard</span></span></code></pre></div><h3 id=\"2-4-分支\"><a href=\"#2-4-分支\" class=\"headerlink\" title=\"2.4 分支\"></a>2.4 分支</h3><p>几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离 开来进行重大的Bug修改、开发新的功能，以免影响开发主线。</p>\n<h4 id=\"2-4-1-查看本地分支\"><a href=\"#2-4-1-查看本地分支\" class=\"headerlink\" title=\"2.4.1 查看本地分支\"></a>2.4.1 查看本地分支</h4><ul>\n<li>命令：<code>git branch</code></li>\n</ul>\n<h4 id=\"2-4-2-创建本地分支\"><a href=\"#2-4-2-创建本地分支\" class=\"headerlink\" title=\"2.4.2 创建本地分支\"></a>2.4.2 创建本地分支</h4><ul>\n<li>命令：<code>git branch 分支名</code></li>\n</ul>\n<h4 id=\"2-4-3-切换分支\"><a href=\"#2-4-3-切换分支\" class=\"headerlink\" title=\"2.4.3 切换分支\"></a>2.4.3 切换分支</h4><ul>\n<li>命令：<code>git checkout 分支名</code></li>\n</ul>\n<p>我们还可以直接切换到一个不存在的分支（创建并切换）</p>\n<ul>\n<li>命令：<code>git checkout -b 分支名</code></li>\n</ul>\n<h4 id=\"2-4-4-合并分支\"><a href=\"#2-4-4-合并分支\" class=\"headerlink\" title=\"2.4.4 合并分支\"></a>2.4.4 合并分支</h4><p>一个分支上的提交可以合并到另一个分支</p>\n<ul>\n<li>命令：<code>git merge 分支名称</code></li>\n</ul>\n<h4 id=\"2-4-5-删除分支\"><a href=\"#2-4-5-删除分支\" class=\"headerlink\" title=\"2.4.5 删除分支\"></a>2.4.5 删除分支</h4><p><strong>不能删除当前分支，只能删除其他分支</strong></p>\n<p><code>git branch -d b1</code> 删除分支时，需要做各种检查</p>\n<p><code>git branch -D b1</code> 不做任何检查，强制删除</p>\n<h4 id=\"2-4-6-解决冲突\"><a href=\"#2-4-6-解决冲突\" class=\"headerlink\" title=\"2.4.6 解决冲突\"></a>2.4.6 解决冲突</h4><p>当两个分支上对文件的修改可能会存在冲突，例如同时修改了同一个文件的同一行，这时就需要手动解 决冲突，解决冲突步骤如下： </p>\n<p>1.处理文件中冲突的地方 </p>\n<p>2.将解决完冲突的文件加入暂存区(add) </p>\n<p>3.提交到仓库(commit) </p>\n<p>冲突部分的内容处理如下所示： </p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308112529148.png\" alt=\"image-20240308112529148\"></p>\n<h4 id=\"2-4-7-开发中分支使用原则和流程\"><a href=\"#2-4-7-开发中分支使用原则和流程\" class=\"headerlink\" title=\"2.4.7 开发中分支使用原则和流程\"></a>2.4.7 开发中分支使用原则和流程</h4><p>几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离 开来进行重大的Bug修改、开发新的功能，以免影响开发主线。 </p>\n<p>在开发中，一般有如下分支使用原则与流程： </p>\n<ul>\n<li><p>master （生产） 分支 </p>\n<p>线上分支，主分支，中小规模项目作为线上运行的应用对应的分支； </p>\n</li>\n<li><p>develop（开发）分支 </p>\n<p>是从master创建的分支，一般作为开发部门的主要开发分支，如果没有其他并行开发不同期上线 要求，都可以在此版本进行开发，阶段开发完成后，需要是合并到master分支,准备上线。 </p>\n</li>\n<li><p>feature&#x2F;xxxx分支 </p>\n<p>从develop创建的分支，一般是同期并行开发，但不同期上线时创建的分支，分支上的研发任务完 成后合并到develop分支。 </p>\n</li>\n<li><p>hotfix&#x2F;xxxx分支 </p>\n<p>从master派生的分支，一般作为线上bug修复使用，修复完成后需要合并到master、test、 develop分支。 </p>\n</li>\n<li><p>还有一些其他分支，在此不再详述，例如test分支（用于代码测试）、pre分支（预上线分支）等 等。 黑马程序员 北京昌</p>\n</li>\n</ul>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308112722628.png\" alt=\"image-20240308112722628\"></p>\n<p><strong>分支操作：</strong></p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">###########################创建并切换到dev01分支，在dev01分支提交</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># [master]创建分支dev01</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">branch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">dev01</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># [master]切换到dev01</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">checkout</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">dev01</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># [dev01]创建文件file02.txt</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">略</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># [dev01]将修改加入暂存区并提交到仓库,提交记录内容为：add file02 on dev</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">add</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">.</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">commit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-m</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">add file02 on dev</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># [dev01]以精简的方式显示提交记录</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git-log</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">###########################切换到master分支，将dev01合并到master分支</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># [dev01]切换到master分支</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">checkout</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">master</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># [master]合并dev01到master分支</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">merge</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">dev01</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># [master]以精简的方式显示提交记录</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git-log</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># [master]查看文件变化(目录下也出现了file02.txt)</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">略</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">##########################删除dev01分支</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># [master]删除dev01分支</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">branch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-d</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">dev01</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># [master]以精简的方式显示提交记录</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git-log</span></span></code></pre></div><h2 id=\"3-Git远程仓库\"><a href=\"#3-Git远程仓库\" class=\"headerlink\" title=\"3.Git远程仓库\"></a>3.Git远程仓库</h2><h3 id=\"3-1-常用的托管服务-远程仓库\"><a href=\"#3-1-常用的托管服务-远程仓库\" class=\"headerlink\" title=\"3.1 常用的托管服务[远程仓库]\"></a>3.1 常用的托管服务[远程仓库]</h3><p>前面我们已经知道了Git中存在两种类型的仓库，即本地仓库和远程仓库。那么我们如何搭建Git远程仓库 呢？我们可以借助互联网上提供的一些代码托管服务来实现，其中比较常用的有GitHub、码云、GitLab等。 gitHub（ 地址：<a href=\"https://github.com/\">https://github.com/</a> ）是一个面向开源及私有软件项目的托管平台，因为只支持 Git 作为唯一的版本库格式进行托管，故名gitHub 码云（地址： <a href=\"https://gitee.com/\">https://gitee.com/</a> ）是国内的一个代码托管平台，由于服务器在国内，所以相比于 GitHub，码云速度会更快 GitLab （地址： <a href=\"https://about.gitlab.com/\">https://about.gitlab.com/</a> ）是一个用于仓库管理系统的开源项目，使用Git作 为代码管理工具，并在此基础上搭建起来的web服务,一般用于在企业、学校等内部网络搭建git私服。</p>\n<h3 id=\"3-2-注册码云gitee\"><a href=\"#3-2-注册码云gitee\" class=\"headerlink\" title=\"3.2 注册码云gitee\"></a>3.2 注册码云gitee</h3><p>要想使用码云的相关服务，需要注册账号（地址：  <a href=\"https://gitee.com/signup\">https://gitee.com/signup</a> ）</p>\n<h3 id=\"3-3-创建远程仓库\"><a href=\"#3-3-创建远程仓库\" class=\"headerlink\" title=\"3.3 创建远程仓库\"></a>3.3 创建远程仓库</h3><p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308113701817.png\" alt=\"image-20240308113701817\"></p>\n<p>仓库创建完成之后就可以看到仓库地址</p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308113725036.png\" alt=\"image-20240308113725036\"></p>\n<h3 id=\"3-4-配置SSH公钥\"><a href=\"#3-4-配置SSH公钥\" class=\"headerlink\" title=\"3.4 配置SSH公钥\"></a>3.4 配置SSH公钥</h3><ul>\n<li><p>生成SSH公钥</p>\n<ul>\n<li>ssh-key-gen-t rsa</li>\n<li>不断回车，如果公钥已经存在，则自动覆盖</li>\n</ul>\n</li>\n<li><p>Gitee设置账户公钥</p>\n<ul>\n<li>获取公钥<ul>\n<li>cat ~&#x2F;.ssh&#x2F;id_rsa.pub</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308114017973.png\" alt=\"image-20240308114017973\"></p>\n</li>\n<li><p>验证是否配置成功</p>\n<ul>\n<li>ssh -T <a href=\"mailto:&#x67;&#x69;&#x74;&#x40;&#103;&#105;&#x74;&#101;&#x65;&#46;&#x63;&#111;&#109;\">&#x67;&#x69;&#x74;&#x40;&#103;&#105;&#x74;&#101;&#x65;&#46;&#x63;&#111;&#109;</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-5-操作远程仓库\"><a href=\"#3-5-操作远程仓库\" class=\"headerlink\" title=\"3.5 操作远程仓库\"></a>3.5 操作远程仓库</h3><h4 id=\"3-5-1-添加远程仓库\"><a href=\"#3-5-1-添加远程仓库\" class=\"headerlink\" title=\"3.5.1 添加远程仓库\"></a>3.5.1 添加远程仓库</h4><p><strong>此操作是先初始化本地库，然后与已创建的远程库进行对接。</strong></p>\n<ul>\n<li>命令： git remote add &lt;远端名称&gt; &lt;仓库路径&gt; </li>\n<li>远端名称，默认是origin，取决于远端服务器设置 </li>\n<li>仓库路径，从远端服务器获取此URL </li>\n<li>例如: git remote add origin  <a href=\"mailto:&#103;&#105;&#116;&#x40;&#103;&#105;&#116;&#x65;&#x65;&#46;&#x63;&#111;&#109;\">&#103;&#105;&#116;&#x40;&#103;&#105;&#116;&#x65;&#x65;&#46;&#x63;&#111;&#109;</a>:czbk_zhang_meng&#x2F;git_test.git</li>\n</ul>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308114542272.png\" alt=\"image-20240308114542272\"></p>\n<h4 id=\"3-5-2-查看远程仓库\"><a href=\"#3-5-2-查看远程仓库\" class=\"headerlink\" title=\"3.5.2 查看远程仓库\"></a>3.5.2 查看远程仓库</h4><ul>\n<li>命令：<code>git remote</code></li>\n</ul>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308114621441.png\" alt=\"image-20240308114621441\"></p>\n<h4 id=\"3-5-3-推送到远程仓库\"><a href=\"#3-5-3-推送到远程仓库\" class=\"headerlink\" title=\"3.5.3 推送到远程仓库\"></a>3.5.3 推送到远程仓库</h4><ul>\n<li><p>命令：git push [-f] [–set-upstream] [远端名称 [本地分支名][:远端分支名] ] </p>\n<ul>\n<li>如果远程分支名和本地分支名称相同，则可以只写本地分支 </li>\n<li><code>git push origin master</code></li>\n<li><code>-f</code> 表示强制覆盖</li>\n<li><code>--set-upstream</code> 推送到远端的同时并且建立起和远端分支的关联关系。 </li>\n<li><code>git push --set-upstream origin master</code> </li>\n<li>如果当前分支已经和远端分支关联，则可以省略分支名和远端名。</li>\n<li><code> git push</code> 将master分支推送到已关联的远端分支。</li>\n</ul>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308114801413.png\" alt=\"image-20240308114801413\"></p>\n</li>\n</ul>\n<p>查询远程仓库</p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308114817282.png\" alt=\"image-20240308114817282\"></p>\n<h4 id=\"3-5-4-本地分支与远程分支的关联关系\"><a href=\"#3-5-4-本地分支与远程分支的关联关系\" class=\"headerlink\" title=\"3.5.4 本地分支与远程分支的关联关系\"></a>3.5.4 本地分支与远程分支的关联关系</h4><ul>\n<li>查看关联关系我们可以使用 <code>git branch -vv</code>命令</li>\n</ul>\n<h4 id=\"3-5-5-从远程仓库克隆\"><a href=\"#3-5-5-从远程仓库克隆\" class=\"headerlink\" title=\"3.5.5 从远程仓库克隆\"></a>3.5.5 从远程仓库克隆</h4><p>如果已经有一个远端仓库，我们可以直接clone到本地。 </p>\n<ul>\n<li>命令: git clone &lt;仓库路径&gt; [本地目录] </li>\n<li>本地目录可以省略，会自动生成一个目录</li>\n</ul>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308114934066.png\" alt=\"image-20240308114934066\"></p>\n<h4 id=\"3-5-6-从远程仓库中抓取和拉取\"><a href=\"#3-5-6-从远程仓库中抓取和拉取\" class=\"headerlink\" title=\"3.5.6 从远程仓库中抓取和拉取\"></a>3.5.6 从远程仓库中抓取和拉取</h4><p>远程分支和本地的分支一样，我们可以进行merge操作，只是需要先把远端仓库里的更新都下载到本 地，再进行操作。</p>\n<ul>\n<li><p>抓取 命令：git fetch [remote name] [branch name] </p>\n</li>\n<li><p>抓取指令就是将仓库里的更新都抓取到本地，不会进行合并</p>\n</li>\n<li><p>如果不指定远端名称和分支名，则抓取所有分支。</p>\n</li>\n<li><p>拉取 命令：git pull [remote name] [branch name]</p>\n</li>\n<li><p>拉取指令就是将远端仓库的修改拉到本地并自动进行合并，等同于fetch+merge </p>\n</li>\n<li><p>如果不指定远端名称和分支名，则抓取所有并更新当前分支。</p>\n</li>\n</ul>\n<p>1.在test01这个本地仓库进行一次提交并推送到远程仓库</p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308115209511.png\" alt=\"image-20240308115209511\"></p>\n<p>2.在另一个仓库将远程提交的代码拉取到本地仓库</p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308115244375.png\" alt=\"image-20240308115244375\"></p>\n<h4 id=\"3-5-7-解决合并冲突\"><a href=\"#3-5-7-解决合并冲突\" class=\"headerlink\" title=\"3.5.7 解决合并冲突\"></a>3.5.7 解决合并冲突</h4><p>在一段时间，A、B用户修改了同一个文件，且修改了同一行位置的代码，此时会发生合并冲突。 </p>\n<p>A用户在本地修改代码后优先推送到远程仓库，此时B用户在本地修订代码，提交到本地仓库后，也需要 推送到远程仓库，此时B用户晚于A用户，故需要先拉取远程仓库的提交，经过合并后才能推送到远端分 支,如下图所示。</p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308115321066.png\" alt=\"image-20240308115321066\"></p>\n<p>在B用户拉取代码时，因为A、B用户同一段时间修改了同一个文件的相同位置代码，故会发生合并冲突。</p>\n<p>远程分支也是分支，所以合并时冲突的解决方式也和解决本地分支冲突相同相同，在此不再赘述。</p>\n<p><strong>远程仓库操作：</strong></p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">##########################1-将本地仓库推送到远程仓库</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 完成4.1、4.2、4.3、4.4的操作</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">略</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># [git_test01]添加远程仓库</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">remote</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">add</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">origin</span><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">git@gitee.com/</span><span style=\"color: #BABED8\">**</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #BABED8\">**</span><span style=\"color: #C3E88D\">.git</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># [git_test01]将master分支推送到远程仓库,并与远程仓库的master分支绑定关联关系</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">push</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--set-upstream</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">origin</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">master</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">###########################2-将远程仓库克隆到本地</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 将远程仓库克隆到本地git_test02目录下</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">clone</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">git@gitee.com/</span><span style=\"color: #BABED8\">**</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #BABED8\">**</span><span style=\"color: #C3E88D\">.git</span><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">git_test02</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># [git_test02]以精简的方式显示提交记录</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git-log</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">###########################3-将本地修改推送到远程仓库</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># [git_test01]创建文件file03.txt</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">略</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># [git_test01]将修改加入暂存区并提交到仓库,提交记录内容为：add file03</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">add</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">.</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">commit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-m</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">add file03</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># [git_test01]将master分支的修改推送到远程仓库</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">push</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">origin</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">master</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">###########################4-将远程仓库的修改更新到本地</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># [git_test02]将远程仓库修改再拉取到本地</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">pull</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 以精简的方式显示提交记录</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git-log</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 查看文件变化(目录下也出现了file03.txt)</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">略</span></span></code></pre></div><h2 id=\"4-在Idea中使用Git\"><a href=\"#4-在Idea中使用Git\" class=\"headerlink\" title=\"4.在Idea中使用Git\"></a>4.在Idea中使用Git</h2><h3 id=\"4-1-在Idea中配置Git\"><a href=\"#4-1-在Idea中配置Git\" class=\"headerlink\" title=\"4.1 在Idea中配置Git\"></a>4.1 在Idea中配置Git</h3><p>安装好IntelliJ IDEA后，如果Git安装在默认路径下，那么idea会自动找到git的位置，如果更改了Git的安 装位置则需要手动配置下Git的路径。选择File→Settings打开设置窗口，找到Version Control下的git选项：</p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308125159514.png\" alt=\"image-20240308125159514\"></p>\n<p>点击Test按钮,现在执行成功，配置完成</p>\n<h3 id=\"4-2-在Idea中操作Git\"><a href=\"#4-2-在Idea中操作Git\" class=\"headerlink\" title=\"4.2 在Idea中操作Git\"></a>4.2 在Idea中操作Git</h3><p>场景：本地已经有一个项目，但是并不是git项目，我们需要将这个放到码云的仓库里，和其他开发人员继续一起协作开发。</p>\n<h4 id=\"4-2-1-创建项目远程仓库\"><a href=\"#4-2-1-创建项目远程仓库\" class=\"headerlink\" title=\"4.2.1 创建项目远程仓库\"></a>4.2.1 创建项目远程仓库</h4><p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308125358967.png\" alt=\"image-20240308125358967\"></p>\n<h4 id=\"4-2-2-初始化本地仓库\"><a href=\"#4-2-2-初始化本地仓库\" class=\"headerlink\" title=\"4.2.2 初始化本地仓库\"></a>4.2.2 初始化本地仓库</h4><p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308125417476.png\" alt=\"image-20240308125417476\"></p>\n<h4 id=\"4-2-3-设置远程仓库\"><a href=\"#4-2-3-设置远程仓库\" class=\"headerlink\" title=\"4.2.3 设置远程仓库\"></a>4.2.3 设置远程仓库</h4><p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308125437939.png\" alt=\"image-20240308125437939\"></p>\n<h4 id=\"4-2-4-提交到本地仓库\"><a href=\"#4-2-4-提交到本地仓库\" class=\"headerlink\" title=\"4.2.4 提交到本地仓库\"></a>4.2.4 提交到本地仓库</h4><p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308125455485.png\" alt=\"image-20240308125455485\"></p>\n<h4 id=\"4-2-5-推送到远程仓库\"><a href=\"#4-2-5-推送到远程仓库\" class=\"headerlink\" title=\"4.2.5 推送到远程仓库\"></a>4.2.5 推送到远程仓库</h4><p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308125518470.png\" alt=\"image-20240308125518470\"></p>\n<h4 id=\"4-2-6-克隆远程仓库到本地\"><a href=\"#4-2-6-克隆远程仓库到本地\" class=\"headerlink\" title=\"4.2.6 克隆远程仓库到本地\"></a>4.2.6 克隆远程仓库到本地</h4><p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308125538014.png\" alt=\"image-20240308125538014\"></p>\n<h4 id=\"4-2-7-创建分支\"><a href=\"#4-2-7-创建分支\" class=\"headerlink\" title=\"4.2.7 创建分支\"></a>4.2.7 创建分支</h4><p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308125604512.png\" alt=\"image-20240308125604512\"></p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308125617048.png\" alt=\"image-20240308125617048\"></p>\n<h4 id=\"4-2-8-切换分支及其他分支相关操作\"><a href=\"#4-2-8-切换分支及其他分支相关操作\" class=\"headerlink\" title=\"4.2.8 切换分支及其他分支相关操作\"></a>4.2.8 切换分支及其他分支相关操作</h4><p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308125639133.png\" alt=\"image-20240308125639133\"></p>\n<h4 id=\"4-2-9-解决冲突\"><a href=\"#4-2-9-解决冲突\" class=\"headerlink\" title=\"4.2.9 解决冲突\"></a>4.2.9 解决冲突</h4><p>1.执行merge或pull操作时，可能发生冲突</p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308125749252.png\" alt=\"image-20240308125749252\"></p>\n<p>2.冲突解决后加入暂存区</p>\n<p>3.提交到本地仓库</p>\n<p>4.推送到远程仓库</p>\n<h3 id=\"4-3-Idea常用Git操作入口\"><a href=\"#4-3-Idea常用Git操作入口\" class=\"headerlink\" title=\"4.3 Idea常用Git操作入口\"></a>4.3 Idea常用Git操作入口</h3><p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308125826947.png\" alt=\"image-20240308125826947\"></p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308125831746.png\" alt=\"image-20240308125831746\"></p>\n<h2 id=\"5-附录\"><a href=\"#5-附录\" class=\"headerlink\" title=\"5.附录\"></a>5.附录</h2><h3 id=\"5-1-windows下看不到隐藏的文件（-bashrc、-gitignore）\"><a href=\"#5-1-windows下看不到隐藏的文件（-bashrc、-gitignore）\" class=\"headerlink\" title=\"5.1 windows下看不到隐藏的文件（.bashrc、.gitignore）\"></a>5.1 windows下看不到隐藏的文件（.bashrc、.gitignore）</h3><p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308125943815.png\" alt=\"image-20240308125943815\"></p>\n<h3 id=\"5-2-windows下无法创建-ignore-bashrc文件\"><a href=\"#5-2-windows下无法创建-ignore-bashrc文件\" class=\"headerlink\" title=\"5.2 windows下无法创建.ignore|.bashrc文件\"></a>5.2 windows下无法创建.ignore|.bashrc文件</h3><p>这里以创建 .ignore 文件为例： </p>\n<p>在git目录下打开gitbash </p>\n<p>执行指令 touch .gitignore </p>\n<p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308130006999.png\" alt=\"image-20240308130006999\"></p>\n<h3 id=\"5-3-IDEA集成GitBash作为Terminal\"><a href=\"#5-3-IDEA集成GitBash作为Terminal\" class=\"headerlink\" title=\"5.3 IDEA集成GitBash作为Terminal\"></a>5.3 IDEA集成GitBash作为Terminal</h3><p><img src=\"/oranfish.github.io/posts/0/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/image-20240308130026973.png\" alt=\"image-20240308130026973\"></p>\n<h3 id=\"5-4-命令\"><a href=\"#5-4-命令\" class=\"headerlink\" title=\"5.4 命令\"></a>5.4 命令</h3><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#设置用户信息 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">config</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--global</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">user.name</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">“itcast”</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">config</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--global</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">user.email</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">“itcast@itcast.cn”</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#查看配置信息</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">config</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--list</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">config</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">user.name</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#通过上面的命令设置的信息会保存在~/.gitconfig文件中</span></span>\n<span class=\"line\"></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 初始化仓库带工作区</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">init</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 初始化仓库不带工作区</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">init</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--bare</span><span style=\"color: #BABED8\">  </span></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 从远程仓库克隆</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">clone</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">远程Git仓库地址</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">例如:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">clone</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">https://gitee.com/itcast/gittest.git</span></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 查看状态</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">status</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#查看状态 使输出信息更加简洁</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">status</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">–s</span><span style=\"color: #BABED8\"> </span></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 将未跟踪的文件加入暂存区</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">add</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">文件</span><span style=\"color: #BABED8\">名</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">  </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 将暂存区的文件取消暂存 (取消 add )</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">reset</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">文件</span><span style=\"color: #BABED8\">名</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">  </span></span>\n<span class=\"line\"></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># git commit 将暂存区的文件修改提交到本地仓库</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">commit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-m</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">日志信息</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">文件</span><span style=\"color: #BABED8\">名</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">  </span></span>\n<span class=\"line\"></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 从本地工作区 删除文件</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">rm</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">文件</span><span style=\"color: #BABED8\">名</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">  </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 如果本工作区库误删, 想要回退</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">checkout</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">head</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">文件</span><span style=\"color: #BABED8\">名</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">  </span></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 查看远程  列出指定的每一个远程服务器的简写</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">remote</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 查看远程 , 列出 简称和地址</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">remote</span><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-v</span><span style=\"color: #BABED8\">  </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 查看远程仓库详细地址</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">remote</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">show</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">仓库简</span><span style=\"color: #BABED8\">称</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 添加远程仓库</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">remote</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">add</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">shortnam</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">ur</span><span style=\"color: #BABED8\">l</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 移除远程仓库和本地仓库的关系(只是从本地移除远程仓库的关联关系，并不会真正影响到远程仓库)</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">remote</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">rm</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">shortnam</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 从远程仓库克隆</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">clone</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">ur</span><span style=\"color: #BABED8\">l</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 从远程仓库拉取 (拉取到.git 目录,不会合并到工作区,工作区发生变化)</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">fetch</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">shortnam</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">分支名</span><span style=\"color: #BABED8\">称</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 手动合并  把某个版本的某个分支合并到当前工作区</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">merge</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">shortnam</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">分支名</span><span style=\"color: #BABED8\">称</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 从远程仓库拉取 (拉取到.git 目录,合并到工作区,工作区不发生变化) = fetch+merge</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">pull</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">shortnam</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">分支名</span><span style=\"color: #BABED8\">称</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">pull</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">shortnam</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">分支名</span><span style=\"color: #BABED8\">称</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">--allow-unrelated-histories</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\">#  强制拉取合并</span></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 将本地仓库推送至远程仓库的某个分支</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">push</span><span style=\"color: #BABED8\"> [remote-name] </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">branch-name</span><span style=\"color: #89DDFF\">]</span></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 默认 分支名称为 master</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 列出所有本地分支</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">branch</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 列出所有远程分支</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">branch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-r</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 列出所有本地分支和远程分支</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">branch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-a</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 创建分支</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">branch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">分支</span><span style=\"color: #BABED8\">名</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 切换分支 </span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">checkout</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">分支</span><span style=\"color: #BABED8\">名</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 删除分支(如果分支已经修改过,则不允许删除)</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">branch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-d</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">分支</span><span style=\"color: #BABED8\">名</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 强制删除分支</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">branch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-D</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">分支</span><span style=\"color: #BABED8\">名</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 提交分支至远程仓库</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">push</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">仓库简</span><span style=\"color: #BABED8\">称</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">分支名</span><span style=\"color: #BABED8\">称</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">\t</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 合并分支 将其他分支合并至当前工作区</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">merge</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C3E88D\">分支名</span><span style=\"color: #BABED8\">称</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 删除远程仓库分支</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">push</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">origin</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">–d</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">branchName</span></span></code></pre></div><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 列出所有tag</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">tag</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 查看tag详细信息 </span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">show</span><span style=\"color: #BABED8\"> [tagName]</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 新建一个tag</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">tag</span><span style=\"color: #BABED8\"> [tagName]</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 提交指定tag</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">$</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">push</span><span style=\"color: #BABED8\"> [仓库简称] </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">tagName</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 新建一个分支，指向某个tag</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">$</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">checkout</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-b</span><span style=\"color: #BABED8\"> [branch] </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">tag</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 删除本地tag</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">$</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">tag</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-d</span><span style=\"color: #BABED8\"> [tag]</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 删除远程tag (注意 空格)</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">$</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">push</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">origin</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">:refs/tags/[tag]</span></span></code></pre></div>","text":"Git的安装及其使用，常见的git命令总结...","permalink":"/post/Git使用总结","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Study","slug":"Study","count":30,"path":"api/categories/Study.json"}],"tags":[{"name":"开发工具","slug":"开发工具","count":3,"path":"api/tags/开发工具.json"},{"name":"Git","slug":"Git","count":1,"path":"api/tags/Git.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">1.引入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">1.1 版本管理工具概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">1.2 版本管理工具介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-1-SVN\"><span class=\"toc-text\">1.2.1 SVN</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-2-Git\"><span class=\"toc-text\">1.2.2 Git</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-Git%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2\"><span class=\"toc-text\">1.3 Git发展简史</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-Git-%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2.Git 的安装和常用命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-Git%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.1 Git环境配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-1-%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">2.1.1 下载与安装</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-2-Git%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.1.2 Git基本配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-3-%E4%B8%BA%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E9%85%8D%E7%BD%AE%E5%88%AB%E5%90%8D%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89\"><span class=\"toc-text\">2.1.3 为常用指令配置别名（可选）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-4-%E8%A7%A3%E5%86%B3GitBash%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">2.1.4 解决GitBash乱码问题</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">2.2 获取本地仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">2.3 基础操作指令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-1-%E6%9F%A5%E7%9C%8B%E4%BF%AE%E6%94%B9%E7%9A%84%E7%8A%B6%E6%80%81%EF%BC%88status%EF%BC%89\"><span class=\"toc-text\">2.3.1 查看修改的状态（status）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-2-%E6%B7%BB%E5%8A%A0%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%88%B0%E6%9A%82%E5%AD%98%E5%8C%BA%EF%BC%88add%EF%BC%89\"><span class=\"toc-text\">2.3.2 添加工作区到暂存区（add）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-3-%E6%8F%90%E4%BA%A4%E6%9A%82%E5%AD%98%E5%8C%BA%E5%88%B0%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%EF%BC%88commit%EF%BC%89\"><span class=\"toc-text\">2.3.3 提交暂存区到本地仓库（commit）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-4-%E6%9F%A5%E7%9C%8B%E6%8F%90%E4%BA%A4%E6%97%A5%E5%BF%97%EF%BC%88log%EF%BC%89\"><span class=\"toc-text\">2.3.4 查看提交日志（log）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-5-%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80\"><span class=\"toc-text\">2.3.5 版本回退</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-6-%E6%B7%BB%E5%8A%A0%E6%96%87%E4%BB%B6%E8%87%B3%E5%BF%BD%E7%95%A5%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">2.3.6 添加文件至忽略列表</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E5%88%86%E6%94%AF\"><span class=\"toc-text\">2.4 分支</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4-1-%E6%9F%A5%E7%9C%8B%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF\"><span class=\"toc-text\">2.4.1 查看本地分支</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4-2-%E5%88%9B%E5%BB%BA%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF\"><span class=\"toc-text\">2.4.2 创建本地分支</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4-3-%E5%88%87%E6%8D%A2%E5%88%86%E6%94%AF\"><span class=\"toc-text\">2.4.3 切换分支</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4-4-%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF\"><span class=\"toc-text\">2.4.4 合并分支</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4-5-%E5%88%A0%E9%99%A4%E5%88%86%E6%94%AF\"><span class=\"toc-text\">2.4.5 删除分支</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4-6-%E8%A7%A3%E5%86%B3%E5%86%B2%E7%AA%81\"><span class=\"toc-text\">2.4.6 解决冲突</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4-7-%E5%BC%80%E5%8F%91%E4%B8%AD%E5%88%86%E6%94%AF%E4%BD%BF%E7%94%A8%E5%8E%9F%E5%88%99%E5%92%8C%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">2.4.7 开发中分支使用原则和流程</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-Git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">3.Git远程仓库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E5%B8%B8%E7%94%A8%E7%9A%84%E6%89%98%E7%AE%A1%E6%9C%8D%E5%8A%A1-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">3.1 常用的托管服务[远程仓库]</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E6%B3%A8%E5%86%8C%E7%A0%81%E4%BA%91gitee\"><span class=\"toc-text\">3.2 注册码云gitee</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">3.3 创建远程仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-4-%E9%85%8D%E7%BD%AESSH%E5%85%AC%E9%92%A5\"><span class=\"toc-text\">3.4 配置SSH公钥</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-5-%E6%93%8D%E4%BD%9C%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">3.5 操作远程仓库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-5-1-%E6%B7%BB%E5%8A%A0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">3.5.1 添加远程仓库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-5-2-%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">3.5.2 查看远程仓库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-5-3-%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">3.5.3 推送到远程仓库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-5-4-%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF%E4%B8%8E%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF%E7%9A%84%E5%85%B3%E8%81%94%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">3.5.4 本地分支与远程分支的关联关系</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-5-5-%E4%BB%8E%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%85%8B%E9%9A%86\"><span class=\"toc-text\">3.5.5 从远程仓库克隆</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-5-6-%E4%BB%8E%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E4%B8%AD%E6%8A%93%E5%8F%96%E5%92%8C%E6%8B%89%E5%8F%96\"><span class=\"toc-text\">3.5.6 从远程仓库中抓取和拉取</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-5-7-%E8%A7%A3%E5%86%B3%E5%90%88%E5%B9%B6%E5%86%B2%E7%AA%81\"><span class=\"toc-text\">3.5.7 解决合并冲突</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%9C%A8Idea%E4%B8%AD%E4%BD%BF%E7%94%A8Git\"><span class=\"toc-text\">4.在Idea中使用Git</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E5%9C%A8Idea%E4%B8%AD%E9%85%8D%E7%BD%AEGit\"><span class=\"toc-text\">4.1 在Idea中配置Git</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E5%9C%A8Idea%E4%B8%AD%E6%93%8D%E4%BD%9CGit\"><span class=\"toc-text\">4.2 在Idea中操作Git</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-1-%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">4.2.1 创建项目远程仓库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-2-%E5%88%9D%E5%A7%8B%E5%8C%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">4.2.2 初始化本地仓库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-3-%E8%AE%BE%E7%BD%AE%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">4.2.3 设置远程仓库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-4-%E6%8F%90%E4%BA%A4%E5%88%B0%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">4.2.4 提交到本地仓库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-5-%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">4.2.5 推送到远程仓库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-6-%E5%85%8B%E9%9A%86%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%88%B0%E6%9C%AC%E5%9C%B0\"><span class=\"toc-text\">4.2.6 克隆远程仓库到本地</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-7-%E5%88%9B%E5%BB%BA%E5%88%86%E6%94%AF\"><span class=\"toc-text\">4.2.7 创建分支</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-8-%E5%88%87%E6%8D%A2%E5%88%86%E6%94%AF%E5%8F%8A%E5%85%B6%E4%BB%96%E5%88%86%E6%94%AF%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">4.2.8 切换分支及其他分支相关操作</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-9-%E8%A7%A3%E5%86%B3%E5%86%B2%E7%AA%81\"><span class=\"toc-text\">4.2.9 解决冲突</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-Idea%E5%B8%B8%E7%94%A8Git%E6%93%8D%E4%BD%9C%E5%85%A5%E5%8F%A3\"><span class=\"toc-text\">4.3 Idea常用Git操作入口</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E9%99%84%E5%BD%95\"><span class=\"toc-text\">5.附录</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-windows%E4%B8%8B%E7%9C%8B%E4%B8%8D%E5%88%B0%E9%9A%90%E8%97%8F%E7%9A%84%E6%96%87%E4%BB%B6%EF%BC%88-bashrc%E3%80%81-gitignore%EF%BC%89\"><span class=\"toc-text\">5.1 windows下看不到隐藏的文件（.bashrc、.gitignore）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-2-windows%E4%B8%8B%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA-ignore-bashrc%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">5.2 windows下无法创建.ignore|.bashrc文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-3-IDEA%E9%9B%86%E6%88%90GitBash%E4%BD%9C%E4%B8%BATerminal\"><span class=\"toc-text\">5.3 IDEA集成GitBash作为Terminal</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-4-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">5.4 命令</span></a></li></ol></li></ol>","author":{"name":"Fioransh","slug":"blog-author","avatar":"/medias/2.jpg","link":"/","description":"<p> 学而无知，无知而学 <p> <p> Anime is trash and so am I. <p>","socials":{"github":"https://github.com/orangefish1118","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/14481775?spm_id_from=333.1007.0.0"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/Orangefish-cyc"},"mail":{"icon":"/svg/email.svg","link":"mailto:1263938020@qq.com"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"校园课表微信小程序接口文档示例","uid":"1a206922638b47b5382f6efd345cd840","slug":"基于uni-app框架开发的校园课表微信小程序","date":"2023-11-06T05:28:12.000Z","updated":"2024-02-04T07:12:32.937Z","comments":true,"path":"api/articles/基于uni-app框架开发的校园课表微信小程序.json","keywords":"博客、橙汁蒸鱼、Orangefish、Oranfish","cover":"/medias/3.jpg","text":"校园课表项目开发所使用的前后端接口文档，仅供参考...","permalink":"/post/基于uni-app框架开发的校园课表微信小程序","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"Program","slug":"Program","count":1,"path":"api/categories/Program.json"}],"tags":[{"name":"学习","slug":"学习","count":20,"path":"api/tags/学习.json"},{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"author":{"name":"Fioransh","slug":"blog-author","avatar":"/medias/2.jpg","link":"/","description":"<p> 学而无知，无知而学 <p> <p> Anime is trash and so am I. <p>","socials":{"github":"https://github.com/orangefish1118","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/14481775?spm_id_from=333.1007.0.0"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/Orangefish-cyc"},"mail":{"icon":"/svg/email.svg","link":"mailto:1263938020@qq.com"}}}}},"next_post":{"title":"SCAU软件工程经济学知识点","uid":"a5170803adaf724d5767bb183841fa47","slug":"SCAU软件工程经济学","date":"2023-06-28T18:28:12.000Z","updated":"2024-02-04T07:12:38.512Z","comments":true,"path":"api/articles/SCAU软件工程经济学.json","keywords":"博客、橙汁蒸鱼、Orangefish、Oranfish","cover":"/medias/9.jpg","text":"2023SCAU软件工程经济学期末自用部分知识点的总结...","permalink":"/post/SCAU软件工程经济学","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Study","slug":"Study","count":30,"path":"api/categories/Study.json"}],"tags":[{"name":"学习","slug":"学习","count":20,"path":"api/tags/学习.json"}],"author":{"name":"Fioransh","slug":"blog-author","avatar":"/medias/2.jpg","link":"/","description":"<p> 学而无知，无知而学 <p> <p> Anime is trash and so am I. <p>","socials":{"github":"https://github.com/orangefish1118","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/14481775?spm_id_from=333.1007.0.0"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/Orangefish-cyc"},"mail":{"icon":"/svg/email.svg","link":"mailto:1263938020@qq.com"}}}}}}