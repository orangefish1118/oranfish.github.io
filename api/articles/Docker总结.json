{"title":"Docker使用学习","uid":"06d1fc8de80210c7c2d63f6de4354843","slug":"Docker总结","date":"2024-04-12T02:51:12.000Z","updated":"2024-05-07T15:16:20.852Z","comments":true,"path":"api/articles/Docker总结.json","keywords":"博客、橙汁蒸鱼、Orangefish、Oranfish","cover":"/medias/21.jpg","content":"<h2 id=\"1-Docker安装\"><a href=\"#1-Docker安装\" class=\"headerlink\" title=\"1.Docker安装\"></a>1.Docker安装</h2><p>前置条件：配置好本地虚拟机或者云端虚拟机并安装好CentOS7版本的Linux系统。</p>\n<h3 id=\"1-1-卸载旧版\"><a href=\"#1-1-卸载旧版\" class=\"headerlink\" title=\"1.1 卸载旧版\"></a>1.1 卸载旧版</h3><p>首先如果系统中已经存在旧的Docker，则先卸载：</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">yum</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">remove</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">docker</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">docker-client</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">docker-client-latest</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">docker-common</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">docker-latest</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">docker-latest-logrotate</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">docker-logrotate</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">docker-engine</span></span></code></pre></div><h3 id=\"1-2-配置Docker的yum库\"><a href=\"#1-2-配置Docker的yum库\" class=\"headerlink\" title=\"1.2 配置Docker的yum库\"></a>1.2 配置Docker的yum库</h3><p>首先要安装一个yum工具</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">yum</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-y</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">yum-utils</span></span></code></pre></div><p>安装成功后，执行命令，配置Docker的yum源：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">yum-config-manager</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--add-repo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">https://download.docker.com/linux/centos/docker-ce.repo</span></span></code></pre></div><h3 id=\"1-3-安装Docker\"><a href=\"#1-3-安装Docker\" class=\"headerlink\" title=\"1.3 安装Docker\"></a>1.3 安装Docker</h3><p>最后，执行命令，安装Docker</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">yum</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-y</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">docker-ce</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">docker-ce-cli</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">containerd.io</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">docker-buildx-plugin</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">docker-compose-plugin</span></span></code></pre></div><h3 id=\"1-4-启动和校验\"><a href=\"#1-4-启动和校验\" class=\"headerlink\" title=\"1.4 启动和校验\"></a>1.4 启动和校验</h3><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 启动Docker</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">systemctl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">start</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">docker</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 停止Docker</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">systemctl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">stop</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">docker</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 重启</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">systemctl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">restart</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">docker</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 设置开机自启</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">systemctl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">enable</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">docker</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 执行docker ps命令，如果不报错，说明安装启动成功</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ps</span></span></code></pre></div><h3 id=\"1-5-配置镜像加速\"><a href=\"#1-5-配置镜像加速\" class=\"headerlink\" title=\"1.5 配置镜像加速\"></a>1.5 配置镜像加速</h3><p>这里以阿里云镜像加速为例。</p>\n<h4 id=\"1-5-1-注册阿里云账号\"><a href=\"#1-5-1-注册阿里云账号\" class=\"headerlink\" title=\"1.5.1 注册阿里云账号\"></a>1.5.1 注册阿里云账号</h4><p>首先访问阿里云网站:</p>\n<p><a href=\"https://www.aliyun.com/\">https://www.aliyun.com/</a></p>\n<p>注册一个账号。</p>\n<h4 id=\"1-5-2-开通镜像服务\"><a href=\"#1-5-2-开通镜像服务\" class=\"headerlink\" title=\"1.5.2 开通镜像服务\"></a>1.5.2 开通镜像服务</h4><p>在首页的产品中，找到阿里云的<strong>容器镜像服务</strong>：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17125060534832.png\" alt=\"img\"></p>\n<p>点击后进入控制台：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17125060534831.png\" alt=\"img\"></p>\n<p>首次可能需要选择立刻开通，然后进入控制台。</p>\n<h4 id=\"1-5-3-配置镜像加速\"><a href=\"#1-5-3-配置镜像加速\" class=\"headerlink\" title=\"1.5.3 配置镜像加速\"></a>1.5.3 配置镜像加速</h4><p>找到<strong>镜像工具</strong>下的<strong>镜像加速器</strong>：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17125060846805.png\" alt=\"img\"></p>\n<p>页面向下滚动，即可找到配置的文档说明：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17125060846806.png\" alt=\"img\"></p>\n<p>具体命令如下：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 创建目录</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">mkdir</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-p</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/etc/docker</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 复制内容，注意把其中的镜像加速地址改成你自己的</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">tee</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/etc/docker/daemon.json</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;-</span><span style=\"color: #BABED8\">&#39;</span><span style=\"color: #89DDFF\">EOF</span><span style=\"color: #BABED8\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  &quot;registry-mirrors&quot;: [&quot;https://xxxx.mirror.aliyuncs.com&quot;]</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">EOF</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 重新加载配置</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">systemctl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">daemon-reload</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 重启Docker</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">systemctl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">restart</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">docker</span></span></code></pre></div><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注：遇到多行命令的时候可以使用反斜杠进行换行，然后继续输入命令。</p>\n<p>若要结束命令则可以输入EOF或者done终止多行</p></blockquote>\n<h2 id=\"2-Docker快速入门\"><a href=\"#2-Docker快速入门\" class=\"headerlink\" title=\"2.Docker快速入门\"></a>2.Docker快速入门</h2><h3 id=\"2-1-Docker引入\"><a href=\"#2-1-Docker引入\" class=\"headerlink\" title=\"2.1 Docker引入\"></a>2.1 Docker引入</h3><p>Linux原生安装环境缺点核心体现在三点：</p>\n<ul>\n<li>命令太多了，记不住</li>\n<li>软件安装包名字复杂，不知道去哪里找</li>\n<li>安装和部署步骤复杂，容易出错</li>\n</ul>\n<p>其实上述问题不仅仅是新手，即便是运维在安装、部署的时候一样会觉得麻烦、容易出错。</p>\n<p>特别是我们即将进入微服务阶段学习，微服务项目动辄就是几十台、上百台服务需要部署，有些大型项目甚至达到数万台服务。而<strong>由于每台服务器的运行环境不同，你写好的安装流程、部署脚本并不一定在每个服务器都能正常运行</strong>，经常会出错。这就给系统的部署运维带来了很多困难。</p>\n<p>那么，有没有一种技术能够避免部署对服务器环境的依赖，减少复杂的部署流程呢？</p>\n<p>答案是肯定的，这就是<strong>Docker</strong>技术。你会发现，有了Docker以后项目的部署如丝般顺滑，大大减少了运维工作量。</p>\n<p>即便你对Linux不熟悉，你也能<strong>轻松部署各种常见软件、Java项目</strong>。</p>\n<h3 id=\"2-2-部署MySQL例\"><a href=\"#2-2-部署MySQL例\" class=\"headerlink\" title=\"2.2 部署MySQL例\"></a>2.2 部署MySQL例</h3><p>首先，我们利用Docker来安装一个MySQL软件，大家可以对比一下之前传统的安装方式，看看哪个效率更高一些。</p>\n<p>如果是利用传统方式部署MySQL，大概的步骤有：</p>\n<ul>\n<li>搜索并下载MySQL安装包</li>\n<li>上传至Linux环境</li>\n<li>编译和配置环境</li>\n<li>安装</li>\n</ul>\n<p>而使用Docker安装，仅仅需要一步即可，在命令行输入下面的命令：</p>\n<div class=\"language-powershell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">powershell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">docker run </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">d \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #BABED8\">name mysql \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">p </span><span style=\"color: #F78C6C\">3306</span><span style=\"color: #BABED8\">:</span><span style=\"color: #F78C6C\">3306</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">e TZ</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">Asia</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">Shanghai \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">e MYSQL_ROOT_PASSWORD</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">123</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  mysql</span></span></code></pre></div><p>运行效果如图：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17125063447639.png\" alt=\"img\"></p>\n<p>MySQL安装完毕，通过任意客户端工具即可连接到MySQL.</p>\n<p>我们执行命令后，Docker做的第一件事情，是去自动搜索并下载了MySQL，然后会自动运行MySQL</p>\n<p>这种安装方式你完全不用考虑运行的操作系统环境，它不仅仅在CentOS系统是这样，在Ubuntu系统、macOS系统、甚至是装了WSL的Windows下，都可以使用这条命令来安装MySQL。</p>\n<p>要知道，<strong>不同操作系统下其安装包、运行环境是都不相同的</strong>！如果是<strong>手动安装，必须手动解决安装包不同、环境不同的、配置不同的问题</strong>！</p>\n<p>而使用Docker，这些完全不用考虑。就是因为Docker会自动搜索并下载MySQL。注意：这里下载的不是安装包，而是<strong>镜像。</strong>镜像中不仅包含了MySQL本身，还包含了其运行所需要的环境、配置、系统级函数库。因此它在运行时就有自己独立的环境，就可以跨系统运行，也不需要手动再次配置环境了。这套独立运行的隔离环境我们称为<strong>容器</strong>。</p>\n<p>说明：</p>\n<ul>\n<li>镜像：英文是image</li>\n<li>容器：英文是container</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>因此，Docker安装软件的过程，就是自动搜索下载镜像，然后创建并运行容器的过程。</p></blockquote>\n<p>Docker官方提供了一个专门管理、存储镜像的网站，并对外开放了镜像上传、下载的权利。Docker官方提供了一些基础镜像，然后各大软件公司又在基础镜像基础上，制作了自家软件的镜像，全部都存放在这个网站。这个网站就成了Docker镜像交流的社区：</p>\n<p><a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></p>\n<p>基本上我们常用的各种软件都能在这个网站上找到，我们甚至可以自己制作镜像上传上去。</p>\n<p>像这种提供存储、管理Docker镜像的服务器，被称为DockerRegistry，可以翻译为镜像仓库。DockerHub网站是官方仓库，阿里云、华为云会提供一些第三方仓库，我们也可以自己搭建私有的镜像仓库。</p>\n<p>官方仓库在国外，下载速度较慢，一般我们都会使用第三方仓库提供的镜像加速功能，提高下载速度。而企业内部的机密项目，往往会采用私有镜像仓库。</p>\n<p>总之，镜像的来源有两种：</p>\n<ul>\n<li>基于官方基础镜像自己制作</li>\n<li>直接去DockerRegistry下载</li>\n</ul>\n<p><strong>总结</strong>：</p>\n<p>Docker本身包含一个后台服务，我们可以利用Docker命令告诉Docker服务，帮助我们快速部署指定的应用。Docker服务部署应用时，首先要去搜索并下载应用对应的镜像，然后根据镜像创建并允许容器，应用就部署完成了。</p>\n<p>用一幅图标示如下：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/image-20240408001353403.png\" alt=\"image-20240408001353403\"></p>\n<h3 id=\"2-3-命令解读\"><a href=\"#2-3-命令解读\" class=\"headerlink\" title=\"2.3 命令解读\"></a>2.3 命令解读</h3><div class=\"language-powershell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">powershell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">docker run </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">d \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #BABED8\">name mysql \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">p </span><span style=\"color: #F78C6C\">3306</span><span style=\"color: #BABED8\">:</span><span style=\"color: #F78C6C\">3306</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">e TZ</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">Asia</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">Shanghai \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">e MYSQL_ROOT_PASSWORD</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">123</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  mysql</span></span></code></pre></div><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>解读：</p>\n<ul>\n<li><code>docker run -d</code> ：创建并运行一个容器，<code>-d</code>则是让容器以后台进程运行</li>\n<li><code>--name mysql </code> : 给容器起个名字叫<code>mysql</code>，你可以叫别的</li>\n<li><code>-p 3306:3306</code> : 设置端口映射。<ul>\n<li><strong>容器是隔离环境</strong>，外界不可访问。但是可以<strong>将<strong><strong>宿主机</strong></strong>端口****映射容器内到端口</strong>，当访问宿主机指定端口时，就是在访问容器内的端口了。</li>\n<li>容器内端口往往是由容器内的进程决定，例如MySQL进程默认端口是3306，因此容器内端口一定是3306；而宿主机端口则可以任意指定，一般与容器内保持一致。</li>\n<li>格式： <code>-p 宿主机端口:容器内端口</code>，示例中就是将宿主机的3306映射到容器内的3306端口</li>\n</ul>\n</li>\n<li><code>-e TZ=Asia/Shanghai</code> : 配置容器内进程运行时的一些参数<ul>\n<li>格式：<code>-e KEY=VALUE</code>，KEY和VALUE都由容器内进程决定</li>\n<li>案例中，<code>TZ=Asia/Shanghai</code>是设置时区；<code>MYSQL_ROOT_PASSWORD=123</code>是设置MySQL默认密码</li>\n</ul>\n</li>\n<li><code>mysql</code> : 设置<strong>镜像</strong>名称，Docker会根据这个名字搜索并下载镜像<ul>\n<li>格式：<code>REPOSITORY:TAG</code>，例如<code>mysql:8.0</code>，其中<code>REPOSITORY</code>可以理解为镜像名，<code>TAG</code>是版本号</li>\n<li>在未指定<code>TAG</code>的情况下，默认是最新版本，也就是<code>mysql:latest</code></li>\n</ul>\n</li>\n</ul></blockquote>\n<p>镜像的名称不是随意的，而是要到DockerRegistry中寻找，镜像运行时的配置也不是随意的，要参考镜像的帮助文档，这些在DockerHub网站或者软件的官方网站中都能找到。</p>\n<p>如果我们要安装其它软件，也可以到DockerRegistry中寻找对应的镜像名称和版本，阅读相关配置即可。</p>\n<h2 id=\"3-Docker基础\"><a href=\"#3-Docker基础\" class=\"headerlink\" title=\"3.Docker基础\"></a>3.Docker基础</h2><h3 id=\"3-1-常见命令\"><a href=\"#3-1-常见命令\" class=\"headerlink\" title=\"3.1 常见命令\"></a>3.1 常见命令</h3><p>可以参考官方文档：</p>\n<p><a href=\"https://docs.docker.com/engine/reference/commandline/cli/\">https://docs.docker.com/engine/reference/commandline/cli/</a></p>\n<h4 id=\"3-1-1-命令介绍\"><a href=\"#3-1-1-命令介绍\" class=\"headerlink\" title=\"3.1.1 命令介绍\"></a>3.1.1 命令介绍</h4><table>\n<thead>\n<tr>\n<th align=\"left\"><strong>命令</strong></th>\n<th align=\"left\"><strong>说明</strong></th>\n<th align=\"left\"><strong>文档地址</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">docker pull</td>\n<td align=\"left\">拉取镜像</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/pull/\">docker pull</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker push</td>\n<td align=\"left\">推送镜像到DockerRegistry</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/push/\">docker push</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker images</td>\n<td align=\"left\">查看本地镜像</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/images/\">docker images</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker rmi</td>\n<td align=\"left\">删除本地镜像</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/rmi/\">docker rmi</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker run</td>\n<td align=\"left\">创建并运行容器（不能重复创建）</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/run/\">docker run</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker stop</td>\n<td align=\"left\">停止指定容器</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/stop/\">docker stop</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker start</td>\n<td align=\"left\">启动指定容器</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/start/\">docker start</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker restart</td>\n<td align=\"left\">重新启动容器</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/restart/\">docker restart</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker rm</td>\n<td align=\"left\">删除指定容器</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/rm/\">docs.docker.com</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker ps</td>\n<td align=\"left\">查看容器</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/ps/\">docker ps</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker logs</td>\n<td align=\"left\">查看容器运行日志</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/logs/\">docker logs</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker exec</td>\n<td align=\"left\">进入容器</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/exec/\">docker exec</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker save</td>\n<td align=\"left\">保存镜像到本地压缩文件</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/save/\">docker save</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker load</td>\n<td align=\"left\">加载本地压缩文件到镜像</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/load/\">docker load</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker inspect</td>\n<td align=\"left\">查看容器详细信息</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/inspect/\">docker inspect</a></td>\n</tr>\n</tbody></table>\n<p>用一副图来表示这些命令的关系：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/image-20240408122232444.png\" alt=\"image-20240408122232444\"></p>\n<p><strong>注：</strong><code>docker run</code>每次执行都会创建一个新的容器，如果我们原本就已经执行过创建了一个容器，然后在下次启动的时候直接使用<code>docker start</code>就能够启动容器，在关闭的时候使用<code>docker stop</code>即可停止，无需再输入<code>docker run</code>来启动容器，否则每次都会创建新容器，导致内存占用等一系列问题。</p>\n<p>补充：</p>\n<p>默认情况下，每次重启虚拟机我们都需要手动启动Docker和Docker中的容器。通过命令可以实现开机自启：</p>\n<div class=\"language-powershell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">powershell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># Docker开机自启</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">systemctl enable docker</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># Docker容器开机自启</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker update </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #BABED8\">restart</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">always </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #C792EA\">容器名</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #C792EA\">容器id</span><span style=\"color: #89DDFF\">]</span></span></code></pre></div><h4 id=\"3-1-2-演示\"><a href=\"#3-1-2-演示\" class=\"headerlink\" title=\"3.1.2 演示\"></a>3.1.2 演示</h4><p>教学环节说明：我们以Nginx为例给大家演示上述命令。</p>\n<div class=\"language-powershell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">powershell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 第1步，去DockerHub查看nginx镜像仓库及相关信息</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 第2步，拉取Nginx镜像</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker pull nginx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 第3步，查看镜像</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker images</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果如下：</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">REPOSITORY   TAG       IMAGE ID       CREATED         SIZE</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">nginx        latest    605c77e624dd   </span><span style=\"color: #F78C6C\">16</span><span style=\"color: #BABED8\"> months ago   </span><span style=\"color: #F78C6C\">141MB</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">mysql        latest    3218b38490ce   </span><span style=\"color: #F78C6C\">17</span><span style=\"color: #BABED8\"> months ago   </span><span style=\"color: #F78C6C\">516MB</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 第4步，创建并允许Nginx容器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker run </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">d </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #BABED8\">name nginx </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">p </span><span style=\"color: #F78C6C\">80</span><span style=\"color: #BABED8\">:</span><span style=\"color: #F78C6C\">80</span><span style=\"color: #BABED8\"> nginx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 第5步，查看运行中容器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker ps</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 也可以加格式化方式访问，格式会更加清爽</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker ps </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #BABED8\">format </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">table &#123;&#123;.ID&#125;&#125;\\t&#123;&#123;.Image&#125;&#125;\\t&#123;&#123;.Ports&#125;&#125;\\t&#123;&#123;.Status&#125;&#125;\\t&#123;&#123;.Names&#125;&#125;</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 第6步，访问网页，地址：http://虚拟机地址</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 第7步，停止容器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker stop nginx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 第8步，查看所有容器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker ps </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">a </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #BABED8\">format </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">table &#123;&#123;.ID&#125;&#125;\\t&#123;&#123;.Image&#125;&#125;\\t&#123;&#123;.Ports&#125;&#125;\\t&#123;&#123;.Status&#125;&#125;\\t&#123;&#123;.Names&#125;&#125;</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 第9步，再次启动nginx容器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker start nginx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 第10步，再次查看容器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker ps </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #BABED8\">format </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">table &#123;&#123;.ID&#125;&#125;\\t&#123;&#123;.Image&#125;&#125;\\t&#123;&#123;.Ports&#125;&#125;\\t&#123;&#123;.Status&#125;&#125;\\t&#123;&#123;.Names&#125;&#125;</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 第11步，查看容器详细信息</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker inspect nginx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 第12步，进入容器,查看容器内目录</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker exec </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">it nginx bash</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 或者，可以进入MySQL</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker exec </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">it mysql mysql </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">uroot </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">p</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 第13步，删除容器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker rm nginx</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 发现无法删除，因为容器运行中，强制删除容器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker rm </span><span style=\"color: #89DDFF\">-f</span><span style=\"color: #BABED8\"> nginx</span></span></code></pre></div><h4 id=\"3-1-3-命令别名\"><a href=\"#3-1-3-命令别名\" class=\"headerlink\" title=\"3.1.3 命令别名\"></a>3.1.3 命令别名</h4><p>给常用Docker命令起别名，方便我们访问：</p>\n<div class=\"language-powershell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">powershell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 修改/root/.bashrc文件</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">vi </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">root</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">.bashrc</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">内容如下：</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># .bashrc</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># User specific aliases and functions</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">//</span><span style=\"color: #BABED8\">在此处添加别名代表的命令</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">alias rm</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">rm -i</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">alias cp</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">cp -i</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">alias mv</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">mv -i</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">alias dps</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">docker ps --format &quot;table &#123;&#123;.ID&#125;&#125;\\t&#123;&#123;.Image&#125;&#125;\\t&#123;&#123;.Ports&#125;&#125;\\t&#123;&#123;.Status&#125;&#125;\\t&#123;&#123;.Names&#125;&#125;&quot;</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">alias dis</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">docker images</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># Source global definitions</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-f</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #C792EA\">etc</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #C792EA\">bashrc</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">];</span><span style=\"color: #BABED8\"> then</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">etc</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">bashrc</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">fi</span></span></code></pre></div><p>然后，执行命令使别名生效</p>\n<div class=\"language-powershell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">powershell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">source </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">root</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">.bashrc</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">或 source ~</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">.bashrc</span></span></code></pre></div><h3 id=\"3-2-数据卷\"><a href=\"#3-2-数据卷\" class=\"headerlink\" title=\"3.2 数据卷\"></a>3.2 数据卷</h3><p>容器是隔离环境，容器内程序的文件、配置、运行时产生的容器都在容器内部，我们要读写容器内的文件非常不方便。大家思考几个问题：</p>\n<ul>\n<li>如果要升级MySQL版本，需要销毁旧容器，那么数据岂不是跟着被销毁了？</li>\n<li>MySQL、Nginx容器运行后，如果我要修改其中的某些配置该怎么办？</li>\n<li>我想要让Nginx代理我的静态资源怎么办？</li>\n</ul>\n<p>因此，容器提供程序的运行环境，但是<strong>程序运行产生的数据、程序运行依赖的配置都应该与容器解耦</strong>。</p>\n<h4 id=\"3-2-1-什么是数据卷\"><a href=\"#3-2-1-什么是数据卷\" class=\"headerlink\" title=\"3.2.1 什么是数据卷\"></a>3.2.1 什么是数据卷</h4><p><strong>数据卷（volume）</strong>是一个虚拟目录，是<strong>容器内目录</strong>与<strong>宿主机目录</strong>之间映射的桥梁。</p>\n<p>以Nginx为例，我们知道Nginx中有两个关键的目录： </p>\n<ul>\n<li><code>html</code>：放置一些静态资源</li>\n<li><code>conf</code>：放置配置文件</li>\n</ul>\n<p>如果我们要让Nginx代理我们的静态资源，最好是放到<code>html</code>目录；如果我们要修改Nginx的配置，最好是找到<code>conf</code>下的<code>nginx.conf</code>文件。</p>\n<p>但遗憾的是，容器运行的Nginx所有的文件都在容器内部。所以我们必须利用数据卷将两个目录与宿主机目录关联，方便我们操作。如图：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/image-20240408221048065.png\" alt=\"image-20240408221048065\"></p>\n<p>在上图中：</p>\n<ul>\n<li>我们创建了两个数据卷：<code>conf</code>、<code>html</code></li>\n<li>Nginx容器内部的<code>conf</code>目录和<code>html</code>目录分别与两个数据卷关联。</li>\n<li>而数据卷conf和html分别指向了宿主机的<code>/var/lib/docker/volumes/conf/_data</code>目录和<code>/var/lib/docker/volumes/html/_data</code>目录</li>\n</ul>\n<p>这样以来，容器内的<code>conf</code>和<code>html</code>目录就 与宿主机的<code>conf</code>和<code>html</code>目录关联起来，我们称为<strong>挂载</strong>。此时，我们操作宿主机的<code>/var/lib/docker/volumes/html/_data</code>就是在操作容器内的<code>/usr/share/nginx/html/_data</code>目录。只要我们将静态资源放入宿主机对应目录，就可以被Nginx代理了。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>小提示</strong>：</p>\n<p><code>/var/lib/docker/volumes</code>这个目录就是默认的存放所有容器数据卷的目录，其下再根据数据卷名称创建新目录，格式为<code>/数据卷名/_data</code>。</p>\n<p><strong>为什么不让容器目录直接指向宿主机目录呢</strong>？</p>\n<ul>\n<li>因为直接指向宿主机目录就与宿主机强耦合了，如果切换了环境，宿主机目录就可能发生改变了。由于容器一旦创建，目录挂载就无法修改，这样容器就无法正常工作了。</li>\n<li>但是容器指向数据卷，一个逻辑名称，而数据卷再指向宿主机目录，就不存在强耦合。如果宿主机目录发生改变，只要改变数据卷与宿主机目录之间的映射关系即可。</li>\n</ul>\n<p>不过，我们通过由于数据卷目录比较深，不好寻找，通常我们也**允许让容器直接与宿主机目录挂载而不使用数据卷。</p></blockquote>\n<h4 id=\"3-2-2-数据卷命令\"><a href=\"#3-2-2-数据卷命令\" class=\"headerlink\" title=\"3.2.2 数据卷命令\"></a>3.2.2 数据卷命令</h4><p>数据卷的相关命令有：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"><strong>命令</strong></th>\n<th align=\"left\"><strong>说明</strong></th>\n<th align=\"left\"><strong>文档地址</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">docker volume create</td>\n<td align=\"left\">创建数据卷</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/volume_create/\">docker volume create</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker volume ls</td>\n<td align=\"left\">查看所有数据卷</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/volume_ls/\">docs.docker.com</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker volume rm</td>\n<td align=\"left\">删除指定数据卷</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/volume_prune/\">docs.docker.com</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker volume inspect</td>\n<td align=\"left\">查看某个数据卷的详情</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/volume_inspect/\">docs.docker.com</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker volume prune</td>\n<td align=\"left\">清除数据卷</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/volume_prune/\">docker volume prune</a></td>\n</tr>\n</tbody></table>\n<p>注意：容器与数据卷的挂载要在创建容器时配置，对于创建好的容器，是不能设置数据卷的。而且<strong>创建容器的过程中如果挂载了数据卷且数据卷不存在，数据卷会自动创建</strong>。</p>\n<p>在<code>docker run命令</code>的时候，使用**<code>-v数据卷：容器内</code>**目录可以完成挂载</p>\n<p>演示nginx的html目录挂载</p>\n<div class=\"language-powershell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">powershell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 1.首先创建容器并指定数据卷，注意通过 -v 参数来指定数据卷</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker run </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">d </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #BABED8\">name nginx </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">p </span><span style=\"color: #F78C6C\">80</span><span style=\"color: #BABED8\">:</span><span style=\"color: #F78C6C\">80</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">v html:</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">usr</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">share</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">nginx</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">html nginx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 2.然后查看数据卷</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker volume ls</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DRIVER    VOLUME NAME</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">local     29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">local     html</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 3.查看数据卷详情</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker volume inspect html</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">[</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">CreatedAt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">: </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2024-05-17T19:57:08+08:00</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Driver</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">: </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">local</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Labels</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">: null</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Mountpoint</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">: </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">/var/lib/docker/volumes/html/_data</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Name</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">: </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">html</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Options</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">: null</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Scope</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">: </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">local</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 4.查看/var/lib/docker/volumes/html/_data目录</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ll </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #89DDFF; font-style: italic\">var</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">lib</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">docker</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">volumes</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">html</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">_data</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 可以看到与nginx的html目录内容一样，结果如下：</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">总用量 </span><span style=\"color: #F78C6C\">8</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">rw</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">--</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">--.</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> root root </span><span style=\"color: #F78C6C\">497</span><span style=\"color: #BABED8\"> 12月 </span><span style=\"color: #F78C6C\">28</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2021</span><span style=\"color: #BABED8\"> 50x.html</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">rw</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">--</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">--.</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> root root </span><span style=\"color: #F78C6C\">615</span><span style=\"color: #BABED8\"> 12月 </span><span style=\"color: #F78C6C\">28</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2021</span><span style=\"color: #BABED8\"> index.html</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 5.进入该目录，并随意修改index.html内容</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">cd </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #89DDFF; font-style: italic\">var</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">lib</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">docker</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">volumes</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">html</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">_data</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">vi index.html</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 6.打开页面，查看效果</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 7.进入容器内部，查看/usr/share/nginx/html目录内的文件是否变化</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker exec </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">it nginx bash</span></span></code></pre></div><p>演示MySQL的匿名数据卷</p>\n<div class=\"language-powershell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">powershell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 1.查看MySQL容器详细信息</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">docker inspect mysql</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 关注其中.Config.Volumes部分和.Mounts部分</span></span></code></pre></div><p>我们关注两部分内容，第一是<code>.Config.Volumes</code>部分：</p>\n<div class=\"language-json\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">json</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C792EA\">Config</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// ... 略</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">Volumes</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F78C6C\">/var/lib/mysql</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// ... 略</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>可以发现这个容器声明了一个本地目录，需要挂载数据卷，但是<strong>数据卷未定义</strong>。这就是匿名卷。</p>\n<p>然后，我们再看结果中的<code>.Mounts</code>部分：</p>\n<div class=\"language-json\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">json</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C792EA\">Mounts</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">Type</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">volume</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">Name</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">Source</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">/var/lib/docker/volumes/29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f/_data</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">Destination</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">/var/lib/mysql</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">Driver</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">local</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>可以发现，其中有几个关键属性：</p>\n<ul>\n<li>Name：数据卷名称。由于定义容器未设置容器名，这里的就是匿名卷自动生成的名字，一串hash值。</li>\n<li>Source：宿主机目录</li>\n<li>Destination : 容器内的目录</li>\n</ul>\n<p>上述配置是将容器内的<code>/var/lib/mysql</code>这个目录，与数据卷<code>29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f</code>挂载。于是在宿主机中就有了<code>/var/lib/docker/volumes/29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f/_data</code>这个目录。这就是匿名数据卷对应的目录，其使用方式与普通数据卷没有差别。</p>\n<p>接下来，可以查看该目录下的MySQL的data文件：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">ls</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-l</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/var/lib/docker/volumes/29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f/_data</span></span></code></pre></div><p>注意：每一个不同的镜像，将来创建容器后内部有哪些目录可以挂载，可以参考DockerHub对应的页面</p>\n<h4 id=\"3-2-3-挂载本地目录或文件\"><a href=\"#3-2-3-挂载本地目录或文件\" class=\"headerlink\" title=\"3.2.3 挂载本地目录或文件\"></a>3.2.3 挂载本地目录或文件</h4><p>可以发现，数据卷的目录结构较深，如果我们去操作数据卷目录会不太方便。在很多情况下，我们会直接将容器目录与宿主机指定目录挂载。挂载语法与数据卷类似：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 挂载本地目录</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">-v</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">本地目录:容器内目录</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 挂载本地文件</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">-v</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">本地文件:容器内文件</span></span></code></pre></div><p><strong>注意</strong>：本地目录或文件必须以 <code>/</code> 或 <code>./</code>开头，如果直接以名字开头，会被识别为数据卷名而非本地目录名。</p>\n<p>例如：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">-v</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql:/var/lib/mysql</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 会被识别为一个数据卷叫mysql，运行时会自动创建这个数据卷</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">-v</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">./mysql:/var/lib/mysql</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 会被识别为当前目录下的mysql目录，运行时如果不存在会创建目录</span></span></code></pre></div><p><strong>演示</strong>，删除并重新创建mysql容器，并完成本地目录挂载：</p>\n<ul>\n<li>挂载<code>/root/mysql/data</code>到容器内的<code>/var/lib/mysql</code>目录</li>\n<li>挂载<code>/root/mysql/init</code>到容器内的<code>/docker-entrypoint-initdb.d</code>目录（初始化的SQL脚本目录）</li>\n<li>挂载<code>/root/mysql/conf</code>到容器内的<code>/etc/mysql/conf.d</code>目录（这个是MySQL配置文件目录）</li>\n</ul>\n<p>mysql的<code>init</code>目录和<code>conf</code>目录：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17127609020924.png\" alt=\"img\"></p>\n<p>以及对应的初始化SQL脚本和配置文件：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17127609020921.png\" alt=\"img\"></p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17127609020922.png\" alt=\"img\"></p>\n<p>其中，hm.cnf主要是配置了MySQL的默认编码，改为utf8mb4；而hmall.sql是初始化SQL脚本。</p>\n<p>我们直接将整个mysql目录上传至虚拟机的<code>/root</code>目录下：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17127609020923.png\" alt=\"img\"></p>\n<p>接下来，我们演示本地目录挂载：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 1.删除原来的MySQL容器</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">rm</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-f</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 2.进入root目录</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">cd</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">~</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 3.创建并运行新mysql容器，挂载本地目录</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">run</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-d</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">--name</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-p</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3306</span><span style=\"color: #C3E88D\">:3306</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-e</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">TZ=Asia/Shanghai</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-e</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">MYSQL_ROOT_PASSWORD=</span><span style=\"color: #F78C6C\">123</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-v</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">./mysql/data:/var/lib/mysql</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-v</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">./mysql/conf:/etc/mysql/conf.d</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-v</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">./mysql/init:/docker-entrypoint-initdb.d</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">mysql</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 4.查看root目录，可以发现~/mysql/data目录已经自动创建好了</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ls</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-l</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果：</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">总用量</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">4</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">drwxr-xr-x.</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">root</span><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">root</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">20</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #C3E88D\">月</span><span style=\"color: #BABED8\">  </span><span style=\"color: #F78C6C\">19</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">15</span><span style=\"color: #C3E88D\">:11</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">conf</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">drwxr-xr-x.</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">7</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">polkitd</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">root</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">4096</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #C3E88D\">月</span><span style=\"color: #BABED8\">  </span><span style=\"color: #F78C6C\">19</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">15</span><span style=\"color: #C3E88D\">:11</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">data</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">drwxr-xr-x.</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">root</span><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">root</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">23</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #C3E88D\">月</span><span style=\"color: #BABED8\">  </span><span style=\"color: #F78C6C\">19</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">15</span><span style=\"color: #C3E88D\">:11</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">init</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 查看data目录，会发现里面有大量数据库数据，说明数据库完成了初始化</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ls</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-l</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">data</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 5.查看MySQL容器内数据</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 5.1.进入MySQL</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">exec</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-it</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-uroot</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-p123</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 5.2.查看编码表</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">show</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">variables</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">like</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">%char%</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 5.3.结果，发现编码是utf8mb4没有问题</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">+--------------------------+--------------------------------+</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Variable_name</span><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Value</span><span style=\"color: #BABED8\">                          </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">+--------------------------+--------------------------------+</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">character_set_client</span><span style=\"color: #BABED8\">     </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">utf8mb4</span><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">character_set_connection</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">utf8mb4</span><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">character_set_database</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">utf8mb4</span><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">character_set_filesystem</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">binary</span><span style=\"color: #BABED8\">                         </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">character_set_results</span><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">utf8mb4</span><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">character_set_server</span><span style=\"color: #BABED8\">     </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">utf8mb4</span><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">character_set_system</span><span style=\"color: #BABED8\">     </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">utf8mb3</span><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">character_sets_dir</span><span style=\"color: #BABED8\">       </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">/usr/share/mysql-8.0/charsets/</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">+--------------------------+--------------------------------+</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 6.查看数据</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 6.1.查看数据库</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">show</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">databases</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果，hmall是黑马商城数据库</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">+--------------------+</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Database</span><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">+--------------------+</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">hmall</span><span style=\"color: #BABED8\">              </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">information_schema</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">mysql</span><span style=\"color: #BABED8\">              </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">performance_schema</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">sys</span><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">+--------------------+</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">5</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">rows</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">set</span><span style=\"color: #BABED8\"> (0.00 </span><span style=\"color: #C3E88D\">sec</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 6.2.切换到hmall数据库</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">use</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 6.3.查看表</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">show</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">tables</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果：</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">+-----------------+</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Tables_in_hmall</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">+-----------------+</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">address</span><span style=\"color: #BABED8\">         </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">cart</span><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">item</span><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">order</span><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">order_detail</span><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">order_logistics</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">pay_order</span><span style=\"color: #BABED8\">       </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">user</span><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">+-----------------+</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 6.4.查看address表数据</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">+----+---------+----------+--------+----------+-------------+---------------+-----------+------------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">id</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">user_id</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">province</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">city</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">town</span><span style=\"color: #BABED8\">     </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">mobile</span><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">street</span><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">contact</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">is_default</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">notes</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">+----+---------+----------+--------+----------+-------------+---------------+-----------+------------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">59</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\">       </span><span style=\"color: #FFCB6B\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">北京</span><span style=\"color: #BABED8\">     </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">北京</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">朝阳区</span><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">13900112222</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">金燕龙办公楼</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">李佳诚</span><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">0</span><span style=\"color: #BABED8\">          </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">NULL</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">60</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\">       </span><span style=\"color: #FFCB6B\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">北京</span><span style=\"color: #BABED8\">     </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">北京</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">朝阳区</span><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">13700221122</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">修正大厦</span><span style=\"color: #BABED8\">       </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">李佳红</span><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">0</span><span style=\"color: #BABED8\">          </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">NULL</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">61</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\">       </span><span style=\"color: #FFCB6B\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">上海</span><span style=\"color: #BABED8\">     </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">上海</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">浦东新区</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">13301212233</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">航头镇航头路</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">李佳星</span><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">1</span><span style=\"color: #BABED8\">          </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">NULL</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">63</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\">       </span><span style=\"color: #FFCB6B\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">广东</span><span style=\"color: #BABED8\">     </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">佛山</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">永春</span><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">13301212233</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">永春武馆</span><span style=\"color: #BABED8\">       </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">李晓龙</span><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">0</span><span style=\"color: #BABED8\">          </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">NULL</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">|</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">+----+---------+----------+--------+----------+-------------+---------------+-----------+------------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">4</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">rows</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">set</span><span style=\"color: #BABED8\"> (0.00 </span><span style=\"color: #C3E88D\">sec</span><span style=\"color: #BABED8\">)</span></span></code></pre></div><h3 id=\"3-3-镜像\"><a href=\"#3-3-镜像\" class=\"headerlink\" title=\"3.3 镜像\"></a>3.3 镜像</h3><p>前面我们一直在使用别人准备好的镜像，那如果我要部署一个Java项目，把它打包为一个镜像该怎么做呢？</p>\n<h4 id=\"3-3-1-镜像结构\"><a href=\"#3-3-1-镜像结构\" class=\"headerlink\" title=\"3.3.1 镜像结构\"></a>3.3.1 镜像结构</h4><p>镜像之所以能让我们快速跨操作系统部署应用而忽略其运行环境、配置，就是因为镜像中包含了程序运行需要的系统函数库、环境、配置、依赖。</p>\n<p>因此，自定义镜像本质就是依次准备好程序运行的基础环境、依赖、应用本身、运行配置等文件，并且打包而成。</p>\n<p>我们要从0部署一个Java应用，大概流程是这样：</p>\n<ul>\n<li>准备一个linux服务（CentOS或者Ubuntu均可）</li>\n<li>安装并配置JDK</li>\n<li>上传Jar包</li>\n<li>运行jar包</li>\n</ul>\n<p>我们打包镜像也是分成这么几步：</p>\n<ul>\n<li>准备Linux运行环境（java项目并不需要完整的操作系统，仅仅是基础运行环境即可）</li>\n<li>安装并配置JDK</li>\n<li>拷贝jar包</li>\n<li>配置启动脚本</li>\n</ul>\n<p>上述步骤中的每一次操作其实都是在生产一些文件（系统运行环境、函数库、配置最终都是磁盘文件），所以<strong>镜像就是一堆文件的集合</strong>。</p>\n<p>但需要注意的是，镜像文件不是随意堆放的，而是按照操作的步骤分层叠加而成，每一层形成的文件都会单独打包并标记一个唯一id，称为<strong>Layer</strong>（<strong>层</strong>）。这样，如果我们构建时用到的某些层其他人已经制作过，就可以直接拷贝使用这些层，而不用重复制作。</p>\n<p>例如，第一步中需要的Linux运行环境，通用性就很强，所以Docker官方就制作了这样的只包含Linux运行环境的镜像。我们在制作java镜像时，就无需重复制作，直接使用Docker官方提供的CentOS或Ubuntu镜像作为基础镜像。然后再搭建其它层即可，这样逐层搭建，最终整个Java项目的镜像结构如图所示：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/image-20240411230441304.png\" alt=\"image-20240411230441304\"></p>\n<h4 id=\"3-3-2-Dockerfile\"><a href=\"#3-3-2-Dockerfile\" class=\"headerlink\" title=\"3.3.2 Dockerfile\"></a>3.3.2 Dockerfile</h4><p>由于制作镜像的过程中，需要逐层处理和打包，比较复杂，所以Docker就提供了自动打包镜像的功能。我们只需要将打包的过程，每一层要做的事情用固定的语法写下来，交给Docker去执行即可。</p>\n<p>而这种记录镜像结构的文件就称为<strong>Dockerfile</strong>，其对应的语法可以参考官方文档：</p>\n<p><a href=\"https://docs.docker.com/engine/reference/builder/\">https://docs.docker.com/engine/reference/builder/</a></p>\n<p>其中的语法比较多，比较常用的有：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"><strong>指令</strong></th>\n<th align=\"left\"><strong>说明</strong></th>\n<th align=\"left\"><strong>示例</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><strong>FROM</strong></td>\n<td align=\"left\">指定基础镜像</td>\n<td align=\"left\"><code>FROM centos:6</code></td>\n</tr>\n<tr>\n<td align=\"left\"><strong>ENV</strong></td>\n<td align=\"left\">设置环境变量，可在后面指令使用</td>\n<td align=\"left\"><code>ENV key value</code></td>\n</tr>\n<tr>\n<td align=\"left\"><strong>COPY</strong></td>\n<td align=\"left\">拷贝本地文件到镜像的指定目录</td>\n<td align=\"left\"><code>COPY ./xx.jar /tmp/app.jar</code></td>\n</tr>\n<tr>\n<td align=\"left\"><strong>RUN</strong></td>\n<td align=\"left\">执行Linux的shell命令，一般是安装过程的命令</td>\n<td align=\"left\"><code>RUN yum install gcc</code></td>\n</tr>\n<tr>\n<td align=\"left\"><strong>EXPOSE</strong></td>\n<td align=\"left\">指定容器运行时监听的端口，是给镜像使用者看的</td>\n<td align=\"left\">EXPOSE 8080</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>ENTRYPOINT</strong></td>\n<td align=\"left\">镜像中应用的启动命令，容器运行时调用</td>\n<td align=\"left\">ENTRYPOINT java -jar xx.jar</td>\n</tr>\n</tbody></table>\n<p>例如，要基于Ubuntu镜像来构建一个Java应用，其Dockerfile内容如下：</p>\n<div class=\"language-dockerfile\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">dockerfile</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 指定基础镜像</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> ubuntu:16.04</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 配置环境变量，JDK的安装目录、容器内时区</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ENV</span><span style=\"color: #BABED8\"> JAVA_DIR=/usr/local</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ENV</span><span style=\"color: #BABED8\"> TZ=Asia/Shanghai</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 拷贝jdk和java项目的包</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">COPY</span><span style=\"color: #BABED8\"> ./jdk8.tar.gz $JAVA_DIR/</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">COPY</span><span style=\"color: #BABED8\"> ./docker-demo.jar /tmp/app.jar</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 设定时区</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">RUN</span><span style=\"color: #BABED8\"> ln -snf /usr/share/zoneinfo/$TZ /etc/localtime &amp;&amp; echo $TZ &gt; /etc/timezone</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 安装JDK</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">RUN</span><span style=\"color: #BABED8\"> cd $JAVA_DIR \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> &amp;&amp; tar -xf ./jdk8.tar.gz \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> &amp;&amp; mv ./jdk1.8.0_144 ./java8</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 配置环境变量</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ENV</span><span style=\"color: #BABED8\"> JAVA_HOME=$JAVA_DIR/java8</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ENV</span><span style=\"color: #BABED8\"> PATH=$PATH:$JAVA_HOME/bin</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 指定项目监听的端口</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">EXPOSE</span><span style=\"color: #BABED8\"> 8080</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 入口，java项目的启动命令</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ENTRYPOINT</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #C3E88D\">&quot;java&quot;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #C3E88D\">&quot;-jar&quot;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #C3E88D\">&quot;/app.jar&quot;</span><span style=\"color: #BABED8\">]</span></span></code></pre></div><p>会有很多java项目需要打包为镜像，他们都需要Linux系统环境、JDK环境这两层，只有上面的3层不同（因为jar包不同）。如果每次制作java镜像都重复制作前两层镜像会很麻烦。 </p>\n<p>所以，就有人提供了基础的系统加JDK环境，我们在此基础上制作java镜像，就可以省去JDK的配置了：</p>\n<div class=\"language-dockerfile\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">dockerfile</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 基础镜像</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> openjdk:11.0-jre-buster</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 设定时区</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ENV</span><span style=\"color: #BABED8\"> TZ=Asia/Shanghai</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">RUN</span><span style=\"color: #BABED8\"> ln -snf /usr/share/zoneinfo/$TZ /etc/localtime &amp;&amp; echo $TZ &gt; /etc/timezone</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 拷贝jar包</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">COPY</span><span style=\"color: #BABED8\"> docker-demo.jar /app.jar</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 入口</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ENTRYPOINT</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #C3E88D\">&quot;java&quot;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #C3E88D\">&quot;-jar&quot;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #C3E88D\">&quot;/app.jar&quot;</span><span style=\"color: #BABED8\">]</span></span></code></pre></div><h4 id=\"3-3-3-构建镜像\"><a href=\"#3-3-3-构建镜像\" class=\"headerlink\" title=\"3.3.3 构建镜像\"></a>3.3.3 构建镜像</h4><p>当Dockerfile文件写好以后，就可以利用命令来构建镜像了。</p>\n<p>首先，将<code>docker-demo.jar</code>包以及<code>Dockerfile</code>拷贝到虚拟机的<code>/root/demo</code>目录：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17128483986701.png\" alt=\"img\"></p>\n<p>然后，执行命令，构建镜像：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 进入镜像目录</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">cd</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/root/demo</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 开始构建</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">build</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-t</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">docker-demo:1.0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">.</span></span></code></pre></div><p>命令说明：</p>\n<ul>\n<li><code>docker build </code>: 就是构建一个docker镜像</li>\n<li><code>-t docker-demo:1.0</code> ：<code>-t</code>参数是指定镜像的名称（<code>repository</code>和<code>tag</code>）</li>\n<li><code>.</code> : 最后的点是指构建时Dockerfile所在路径，由于我们进入了demo目录，所以指定的是<code>.</code>代表当前目录，也可以直接指定Dockerfile目录：<ul>\n<li><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 直接指定Dockerfile目录</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">build</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-t</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">docker-demo:1.0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/root/demo</span></span></code></pre></div></li>\n</ul>\n</li>\n</ul>\n<p>结果：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17128483986712.png\" alt=\"img\"></p>\n<p>查看镜像列表：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 查看镜像列表：</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">images</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">REPOSITORY</span><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">TAG</span><span style=\"color: #BABED8\">       </span><span style=\"color: #C3E88D\">IMAGE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ID</span><span style=\"color: #BABED8\">       </span><span style=\"color: #C3E88D\">CREATED</span><span style=\"color: #BABED8\">          </span><span style=\"color: #C3E88D\">SIZE</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker-demo</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">1.0</span><span style=\"color: #BABED8\">       </span><span style=\"color: #C3E88D\">d6ab0b9e64b9</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">27</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">minutes</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ago</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">327</span><span style=\"color: #C3E88D\">MB</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">nginx</span><span style=\"color: #BABED8\">         </span><span style=\"color: #C3E88D\">latest</span><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">605</span><span style=\"color: #C3E88D\">c77e624dd</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">16</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">months</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ago</span><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">141</span><span style=\"color: #C3E88D\">MB</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">mysql</span><span style=\"color: #BABED8\">         </span><span style=\"color: #C3E88D\">latest</span><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">3218</span><span style=\"color: #C3E88D\">b38490ce</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">17</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">months</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ago</span><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">516</span><span style=\"color: #C3E88D\">MB</span></span></code></pre></div><p>然后尝试运行该镜像：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 1.创建并运行容器</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">run</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-d</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--name</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">dd</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-p</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">8080</span><span style=\"color: #C3E88D\">:8080</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">docker-demo:1.0</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 2.查看容器</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">dps</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">CONTAINER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ID</span><span style=\"color: #BABED8\">   </span><span style=\"color: #C3E88D\">IMAGE</span><span style=\"color: #BABED8\">             </span><span style=\"color: #C3E88D\">PORTS</span><span style=\"color: #BABED8\">                                                  </span><span style=\"color: #C3E88D\">STATUS</span><span style=\"color: #BABED8\">         </span><span style=\"color: #C3E88D\">NAMES</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">78a000447b49</span><span style=\"color: #BABED8\">   </span><span style=\"color: #C3E88D\">docker-demo:1.0</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">0.0</span><span style=\"color: #C3E88D\">.0.0:8080</span><span style=\"color: #BABED8\">-</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #C3E88D\">8080/tcp,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">:::8090</span><span style=\"color: #BABED8\">-</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #C3E88D\">8090/tcp</span><span style=\"color: #BABED8\">              </span><span style=\"color: #C3E88D\">Up</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">seconds</span><span style=\"color: #BABED8\">   </span><span style=\"color: #C3E88D\">dd</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">f63cfead8502</span><span style=\"color: #BABED8\">   </span><span style=\"color: #C3E88D\">mysql</span><span style=\"color: #BABED8\">             </span><span style=\"color: #F78C6C\">0.0</span><span style=\"color: #C3E88D\">.0.0:3306</span><span style=\"color: #BABED8\">-</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #C3E88D\">3306/tcp,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">:::3306</span><span style=\"color: #BABED8\">-</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #C3E88D\">3306/tcp,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">33060</span><span style=\"color: #C3E88D\">/tcp</span><span style=\"color: #BABED8\">   </span><span style=\"color: #C3E88D\">Up</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hours</span><span style=\"color: #BABED8\">     </span><span style=\"color: #C3E88D\">mysql</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 3.访问</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">curl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">localhost:8080/hello/count</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果：</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">h</span><span style=\"color: #89DDFF\">5&gt;</span><span style=\"color: #BABED8\">欢迎访问黑马商城, 这是您第1次访问</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">h</span><span style=\"color: #89DDFF\">5&gt;</span></span></code></pre></div><h3 id=\"3-4-网络\"><a href=\"#3-4-网络\" class=\"headerlink\" title=\"3.4 网络\"></a>3.4 网络</h3><p>上我们创建了一个Java项目的容器，而Java项目往往需要访问其它各种中间件，例如MySQL、Redis等。现在，我们的容器之间能否互相访问？我们来测试一下</p>\n<p>首先，我们查看下MySQL容器的详细信息，重点关注其中的网络IP地址：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 1.用基本命令，寻找Networks.bridge.IPAddress属性</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">inspect</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 也可以使用format过滤结果</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">inspect</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--format=</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;println .IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 得到IP地址如下：</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">172.17.0.2</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 2.然后通过命令进入dd容器</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">exec</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-it</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">dd</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 3.在容器内，通过ping命令测试网络</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ping</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">172.17</span><span style=\"color: #C3E88D\">.0.2</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">PING</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">172.17</span><span style=\"color: #C3E88D\">.0.2</span><span style=\"color: #BABED8\"> (172.17.0.2) 56</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">84</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> bytes of data.</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">64</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">bytes</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">from</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">172.17</span><span style=\"color: #C3E88D\">.0.2:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">icmp_seq=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ttl=</span><span style=\"color: #F78C6C\">64</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">time=</span><span style=\"color: #F78C6C\">0.053</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ms</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">64</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">bytes</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">from</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">172.17</span><span style=\"color: #C3E88D\">.0.2:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">icmp_seq=</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ttl=</span><span style=\"color: #F78C6C\">64</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">time=</span><span style=\"color: #F78C6C\">0.059</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ms</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">64</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">bytes</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">from</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">172.17</span><span style=\"color: #C3E88D\">.0.2:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">icmp_seq=</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ttl=</span><span style=\"color: #F78C6C\">64</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">time=</span><span style=\"color: #F78C6C\">0.058</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ms</span></span></code></pre></div><p>发现可以互联，没有问题。</p>\n<p>但是，容器的网络IP其实是一个虚拟的IP，其值并不固定与某一个容器绑定，如果我们在开发时写死某个IP，而在部署时很可能MySQL容器的IP会发生变化，连接会失败。</p>\n<p>所以，我们必须借助于docker的网络功能来解决这个问题，官方文档：</p>\n<p><a href=\"https://docs.docker.com/engine/reference/commandline/network/\">https://docs.docker.com/engine/reference/commandline/network/</a></p>\n<p>常见命令有：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"><strong>命令</strong></th>\n<th align=\"left\"><strong>说明</strong></th>\n<th align=\"left\"><strong>文档地址</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">docker network create</td>\n<td align=\"left\">创建一个网络</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/network_create/\">docker network create</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker network ls</td>\n<td align=\"left\">查看所有网络</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/network_ls/\">docs.docker.com</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker network rm</td>\n<td align=\"left\">删除指定网络</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/network_rm/\">docs.docker.com</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker network prune</td>\n<td align=\"left\">清除未使用的网络</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/network_prune/\">docs.docker.com</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker network connect</td>\n<td align=\"left\">使指定容器连接加入某网络</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/network_connect/\">docs.docker.com</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker network disconnect</td>\n<td align=\"left\">使指定容器连接离开某网络</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/network_disconnect/\">docker network disconnect</a></td>\n</tr>\n<tr>\n<td align=\"left\">docker network inspect</td>\n<td align=\"left\">查看网络详细信息</td>\n<td align=\"left\"><a href=\"https://docs.docker.com/engine/reference/commandline/network_inspect/\">docker network inspect</a></td>\n</tr>\n</tbody></table>\n<p>演示：自定义网络</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 1.首先通过命令创建一个网络</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">network</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">create</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 2.然后查看网络</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">network</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ls</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果：</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">NETWORK</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ID</span><span style=\"color: #BABED8\">     </span><span style=\"color: #C3E88D\">NAME</span><span style=\"color: #BABED8\">      </span><span style=\"color: #C3E88D\">DRIVER</span><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">SCOPE</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">639bc44d0a87</span><span style=\"color: #BABED8\">   </span><span style=\"color: #C3E88D\">bridge</span><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">bridge</span><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">local</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">403f16ec62a2</span><span style=\"color: #BABED8\">   </span><span style=\"color: #C3E88D\">hmall</span><span style=\"color: #BABED8\">     </span><span style=\"color: #C3E88D\">bridge</span><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">local</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">0dc0f72a0fbb</span><span style=\"color: #BABED8\">   </span><span style=\"color: #C3E88D\">host</span><span style=\"color: #BABED8\">      </span><span style=\"color: #C3E88D\">host</span><span style=\"color: #BABED8\">      </span><span style=\"color: #C3E88D\">local</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">cd8d3e8df47b</span><span style=\"color: #BABED8\">   </span><span style=\"color: #C3E88D\">none</span><span style=\"color: #BABED8\">      </span><span style=\"color: #C3E88D\">null</span><span style=\"color: #BABED8\">      </span><span style=\"color: #C3E88D\">local</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 其中，除了hmall以外，其它都是默认的网络</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 3.让dd和mysql都加入该网络，注意，在加入网络时可以通过--alias给容器起别名</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 这样该网络内的其它容器可以用别名互相访问！</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 3.1.mysql容器，指定别名为db，另外每一个容器都有一个别名是容器名</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">network</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">connect</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--alias</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">db</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 3.2.db容器，也就是我们的java项目</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">network</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">connect</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">dd</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 4.进入dd容器，尝试利用别名访问db</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 4.1.进入容器</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">exec</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-it</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">dd</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">bash</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 4.2.用db别名访问</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ping</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">db</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">PING</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">db</span><span style=\"color: #BABED8\"> (172.18.0.2) 56</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">84</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> bytes of data.</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">64</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">bytes</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">from</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql.hmall</span><span style=\"color: #BABED8\"> (172.18.0.2): icmp_seq=1 ttl=64 time=0.070 ms</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">64</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">bytes</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">from</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql.hmall</span><span style=\"color: #BABED8\"> (172.18.0.2): icmp_seq=2 ttl=64 time=0.056 ms</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 4.3.用容器名访问</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ping</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果：</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">PING</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span><span style=\"color: #BABED8\"> (172.18.0.2) 56</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">84</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> bytes of data.</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">64</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">bytes</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">from</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql.hmall</span><span style=\"color: #BABED8\"> (172.18.0.2): icmp_seq=1 ttl=64 time=0.044 ms</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">64</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">bytes</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">from</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql.hmall</span><span style=\"color: #BABED8\"> (172.18.0.2): icmp_seq=2 ttl=64 time=0.054 ms</span></span></code></pre></div><p>现在无需记住IP地址也可以实现容器互联了。</p>\n<p><strong>总结</strong>：</p>\n<ul>\n<li>在自定义网络中，可以给容器起多个别名，默认的别名是容器名本身</li>\n<li>在同一个自定义网络中的容器，可以通过别名互相访问</li>\n</ul>\n<h2 id=\"4-项目部署演示\"><a href=\"#4-项目部署演示\" class=\"headerlink\" title=\"4.项目部署演示\"></a>4.项目部署演示</h2><p>好了，我们已经熟悉了Docker的基本用法，接下来可以尝试部署项目了。</p>\n<p>演示项目说明：</p>\n<ul>\n<li>hmall：商城的后端代码</li>\n<li>hmall-portal：商城用户端的前端代码</li>\n<li>hmall-admin：商城管理端的前端代码</li>\n</ul>\n<p>部署的容器及端口说明：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"><strong>项目</strong></th>\n<th align=\"left\"><strong>容器名</strong></th>\n<th align=\"left\"><strong>端口</strong></th>\n<th align=\"left\"><strong>备注</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">hmall</td>\n<td align=\"left\">hmall</td>\n<td align=\"left\">8080</td>\n<td align=\"left\">商城后端API入口</td>\n</tr>\n<tr>\n<td align=\"left\">hmall-portal</td>\n<td align=\"left\">nginx</td>\n<td align=\"left\">18080</td>\n<td align=\"left\">商城用户端入口</td>\n</tr>\n<tr>\n<td align=\"left\">hmall-admin</td>\n<td align=\"left\">18081</td>\n<td align=\"left\">商城管理端入口</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">mysql</td>\n<td align=\"left\">mysql</td>\n<td align=\"left\">3306</td>\n<td align=\"left\">数据库</td>\n</tr>\n</tbody></table>\n<p>在正式部署前，我们先删除之前的nginx、dd两个容器：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">rm</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-f</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">nginx</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">dd</span></span></code></pre></div><p>mysql容器中已经准备好了商城的数据，所以就不再删除了。</p>\n<h3 id=\"4-1-部署Java项目\"><a href=\"#4-1-部署Java项目\" class=\"headerlink\" title=\"4.1 部署Java项目\"></a>4.1 部署Java项目</h3><p><code>hmall</code>项目是一个maven聚合项目，使用IDEA打开<code>hmall</code>项目，查看项目结构如图：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17128890022917.png\" alt=\"img\"></p>\n<p>我们要部署的就是其中的<code>hm-service</code>，其中的配置文件采用了多环境的方式：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17128890022901.png\" alt=\"img\"></p>\n<p>其中的<code>application-dev.yaml</code>是部署到开发环境的配置，<code>application-local.yaml</code>是本地运行时的配置。</p>\n<p>查看application.yaml，你会发现其中的JDBC地址并未写死，而是读取变量：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17128890022902.png\" alt=\"img\"></p>\n<p>这两个变量在<code>application-dev.yaml</code>和<code>application-local.yaml</code>中并不相同：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17128890022903.png\" alt=\"img\"></p>\n<p>在dev开发环境（也就是Docker部署时）采用了mysql作为地址，刚好是我们的mysql容器名，只要两者在一个网络，就一定能互相访问。</p>\n<p>我们将项目打包：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17128890022904.png\" alt=\"img\"></p>\n<p>结果：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17128890022905.png\" alt=\"img\"></p>\n<p>将<code>hm-service</code>目录下的<code>Dockerfile</code>和<code>hm-service/target</code>目录下的<code>hm-service.jar</code>一起上传到虚拟机的<code>root</code>目录：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-17128890022906.png\" alt=\"img\"></p>\n<p>部署项目：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 1.构建项目镜像，不指定tag，则默认为latest</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">build</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-t</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">.</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 2.查看镜像</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">images</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">REPOSITORY</span><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">TAG</span><span style=\"color: #BABED8\">       </span><span style=\"color: #C3E88D\">IMAGE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ID</span><span style=\"color: #BABED8\">       </span><span style=\"color: #C3E88D\">CREATED</span><span style=\"color: #BABED8\">          </span><span style=\"color: #C3E88D\">SIZE</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">hmall</span><span style=\"color: #BABED8\">         </span><span style=\"color: #C3E88D\">latest</span><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #C3E88D\">bb07b2c34b9</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">43</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">seconds</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ago</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">362</span><span style=\"color: #C3E88D\">MB</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker-demo</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">1.0</span><span style=\"color: #BABED8\">       </span><span style=\"color: #F78C6C\">49743484</span><span style=\"color: #C3E88D\">da68</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">24</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hours</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ago</span><span style=\"color: #BABED8\">     </span><span style=\"color: #F78C6C\">327</span><span style=\"color: #C3E88D\">MB</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">nginx</span><span style=\"color: #BABED8\">         </span><span style=\"color: #C3E88D\">latest</span><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">605</span><span style=\"color: #C3E88D\">c77e624dd</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">16</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">months</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ago</span><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">141</span><span style=\"color: #C3E88D\">MB</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">mysql</span><span style=\"color: #BABED8\">         </span><span style=\"color: #C3E88D\">latest</span><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">3218</span><span style=\"color: #C3E88D\">b38490ce</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">17</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">months</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ago</span><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">516</span><span style=\"color: #C3E88D\">MB</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 3.创建并运行容器，并通过--network将其加入hmall网络，这样才能通过容器名访问mysql</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">run</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-d</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--name</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--network</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-p</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">8080</span><span style=\"color: #C3E88D\">:8080</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span></span></code></pre></div><p>测试，通过浏览器访问：http:&#x2F;&#x2F;你的虚拟机地址:8080&#x2F;search&#x2F;list</p>\n<h3 id=\"4-2-部署前端\"><a href=\"#4-2-部署前端\" class=\"headerlink\" title=\"4.2 部署前端\"></a>4.2 部署前端</h3><p><code>hmall-portal</code>和<code>hmall-admin</code>是前端代码，需要基于nginx部署。nginx的部署目录：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-171288903523015.png\" alt=\"img\"></p>\n<p>其中：</p>\n<ul>\n<li><code>html</code>是静态资源目录，我们需要把<code>hmall-portal</code>以及<code>hmall-admin</code>都复制进去</li>\n<li><code>nginx.conf</code>是nginx的配置文件，主要是完成对<code>html</code>下的两个静态资源目录做代理，注意api的修改容器名称的对应。</li>\n</ul>\n<p>把整个nginx目录上传到虚拟机的<code>/root</code>目录下：</p>\n<p><img src=\"/orangefish1118.github.io/Docker%E6%80%BB%E7%BB%93/-171288903523016.png\" alt=\"img\"></p>\n<p>然后创建nginx容器并完成两个挂载：</p>\n<ul>\n<li>把<code>/root/nginx/nginx.conf</code>挂载到<code>/etc/nginx/nginx.conf</code></li>\n<li>把<code>/root/nginx/html</code>挂载到<code>/usr/share/nginx/html</code></li>\n</ul>\n<p>由于需要让nginx同时代理hmall-portal和hmall-admin两套前端资源，因此我们需要暴露两个端口：</p>\n<ul>\n<li>18080：对应hmall-portal</li>\n<li>18081：对应hmall-admin</li>\n</ul>\n<p>命令如下：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">run</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-d</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">--name</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">nginx</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-p</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">18080</span><span style=\"color: #C3E88D\">:18080</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-p</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">18081</span><span style=\"color: #C3E88D\">:18081</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-v</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/root/nginx/html:/usr/share/nginx/html</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-v</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/root/nginx/nginx.conf:/etc/nginx/nginx.conf</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">--network</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">nginx</span></span></code></pre></div><p>测试，通过浏览器访问：http:&#x2F;&#x2F;你的虚拟机ip:18080</p>\n<h3 id=\"4-3-DockerCompose\"><a href=\"#4-3-DockerCompose\" class=\"headerlink\" title=\"4.3 DockerCompose\"></a>4.3 DockerCompose</h3><p>大家可以看到，我们部署一个简单的java项目，其中包含3个容器：</p>\n<ul>\n<li>MySQL</li>\n<li>Nginx</li>\n<li>Java项目</li>\n</ul>\n<p>而稍微复杂的项目，其中还会有各种各样的其它中间件，需要部署的东西远不止3个。如果还像之前那样手动的逐一部署，就太麻烦了。</p>\n<p>而Docker Compose就可以帮助我们实现<strong>多个相互关联的Docker容器的快速部署</strong>。它允许用户通过一个单独的 docker-compose.yml 模板文件（YAML 格式）来定义一组相关联的应用容器。</p>\n<h4 id=\"4-3-1-基本语法\"><a href=\"#4-3-1-基本语法\" class=\"headerlink\" title=\"4.3.1 基本语法\"></a>4.3.1 基本语法</h4><p>docker-compose.yml文件的基本语法可以参考官方文档：</p>\n<p><a href=\"https://docs.docker.com/compose/compose-file/compose-file-v3/\">https://docs.docker.com/compose/compose-file/compose-file-v3/</a></p>\n<p>docker-compose文件中可以定义多个相互关联的应用容器，每一个应用容器被称为一个服务（service）。由于service就是在定义某个应用的运行时参数，因此与<code>docker run</code>参数非常相似。</p>\n<p>举例来说，用docker run部署MySQL的命令如下：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">run</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-d</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">--name</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-p</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3306</span><span style=\"color: #C3E88D\">:3306</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-e</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">TZ=Asia/Shanghai</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-e</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">MYSQL_ROOT_PASSWORD=</span><span style=\"color: #F78C6C\">123</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-v</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">./mysql/data:/var/lib/mysql</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-v</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">./mysql/conf:/etc/mysql/conf.d</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">-v</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">./mysql/init:/docker-entrypoint-initdb.d</span><span style=\"color: #BABED8\"> \\</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">--network</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #FFCB6B\">mysql</span></span></code></pre></div><p>如果用<code>docker-compose.yml</code>文件来定义，就是这样：</p>\n<div class=\"language-yaml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">yaml</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F07178\">version</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">3.8</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">services</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">mysql</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">image</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">container_name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">ports</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">3306:3306</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">environment</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #F07178\">TZ</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">Asia/Shanghai</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #F07178\">MYSQL_ROOT_PASSWORD</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">123</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">volumes</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">./mysql/conf:/etc/mysql/conf.d</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">./mysql/data:/var/lib/mysql</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">networks</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">new</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">networks</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">new</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span></span></code></pre></div><p>对比如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"><strong>docker run 参数</strong></th>\n<th align=\"left\"><strong>docker compose 指令</strong></th>\n<th align=\"left\"><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">–name</td>\n<td align=\"left\">container_name</td>\n<td align=\"left\">容器名称</td>\n</tr>\n<tr>\n<td align=\"left\">-p</td>\n<td align=\"left\">ports</td>\n<td align=\"left\">端口映射</td>\n</tr>\n<tr>\n<td align=\"left\">-e</td>\n<td align=\"left\">environment</td>\n<td align=\"left\">环境变量</td>\n</tr>\n<tr>\n<td align=\"left\">-v</td>\n<td align=\"left\">volumes</td>\n<td align=\"left\">数据卷配置</td>\n</tr>\n<tr>\n<td align=\"left\">–network</td>\n<td align=\"left\">networks</td>\n<td align=\"left\">网络</td>\n</tr>\n</tbody></table>\n<p>明白了其中的对应关系，相信编写<code>docker-compose</code>文件应该难不倒大家。</p>\n<p>演示商城部署文件：</p>\n<div class=\"language-yaml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">yaml</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F07178\">version</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">3.8</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">services</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">mysql</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">image</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">container_name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">ports</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">3306:3306</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">environment</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #F07178\">TZ</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">Asia/Shanghai</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #F07178\">MYSQL_ROOT_PASSWORD</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">123</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">volumes</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">./mysql/conf:/etc/mysql/conf.d</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">./mysql/data:/var/lib/mysql</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">./mysql/init:/docker-entrypoint-initdb.d</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">networks</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hm-net</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">hmall</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">build</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #F07178\">context</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">.</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #F07178\">dockerfile</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">Dockerfile</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">container_name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">ports</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">8080:8080</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">networks</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hm-net</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">depends_on</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">nginx</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">image</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">nginx</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">container_name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">nginx</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">ports</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">18080:18080</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">18081:18081</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">volumes</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">./nginx/nginx.conf:/etc/nginx/nginx.conf</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">./nginx/html:/usr/share/nginx/html</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">depends_on</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">networks</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hm-net</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">networks</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">hm-net</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span></span></code></pre></div><h4 id=\"4-3-2-基础命令\"><a href=\"#4-3-2-基础命令\" class=\"headerlink\" title=\"4.3.2 基础命令\"></a>4.3.2 基础命令</h4><p>编写好docker-compose.yml文件，就可以部署项目了。常见的命令：</p>\n<p><a href=\"https://docs.docker.com/compose/reference/\">https://docs.docker.com/compose/reference/</a></p>\n<p>基本语法如下：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">compose</span><span style=\"color: #BABED8\"> [OPTIONS] </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">COMMAND</span><span style=\"color: #89DDFF\">]</span></span></code></pre></div><p>其中，OPTIONS和COMMAND都是可选参数，比较常见的有：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"><strong>类型</strong></th>\n<th align=\"left\"><strong>参数或指令</strong></th>\n<th align=\"left\"><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Options</td>\n<td align=\"left\">-f</td>\n<td align=\"left\">指定compose文件的路径和名称</td>\n</tr>\n<tr>\n<td align=\"left\">-p</td>\n<td align=\"left\">指定project名称。project就是当前compose文件中设置的多个service的集合，是逻辑概念</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Commands</td>\n<td align=\"left\">up</td>\n<td align=\"left\">创建并启动所有service容器</td>\n</tr>\n<tr>\n<td align=\"left\">down</td>\n<td align=\"left\">停止并移除所有容器、网络</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">ps</td>\n<td align=\"left\">列出所有启动的容器</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">logs</td>\n<td align=\"left\">查看指定容器的日志</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">stop</td>\n<td align=\"left\">停止容器</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">start</td>\n<td align=\"left\">启动容器</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">restart</td>\n<td align=\"left\">重启容器</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">top</td>\n<td align=\"left\">查看运行的进程</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">exec</td>\n<td align=\"left\">在指定的运行中容器中执行命令</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<p>教学演示：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 1.进入root目录</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">cd</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/root</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 2.删除旧容器</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">rm</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-f</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">$(</span><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #C3E88D\"> ps -qa</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 3.删除hmall镜像</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">rmi</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 4.清空MySQL数据</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">rm</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-rf</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql/data</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 5.启动所有, -d 参数是后台启动</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">compose</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">up</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-d</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果：</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">+</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> Building 15.5s </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">8/8</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> FINISHED</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> =&gt; [internal] load build definition from Dockerfile                                    0.0s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> =&gt; =</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">transferring</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">dockerfile:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">358</span><span style=\"color: #C3E88D\">B</span><span style=\"color: #BABED8\">                                                    </span><span style=\"color: #F78C6C\">0.0</span><span style=\"color: #C3E88D\">s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> =&gt; [internal] load .dockerignore                                                       0.0s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> =&gt; =</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">transferring</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">context:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #C3E88D\">B</span><span style=\"color: #BABED8\">                                                         </span><span style=\"color: #F78C6C\">0.0</span><span style=\"color: #C3E88D\">s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> =&gt; [internal] load metadata </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> docker.io/library/openjdk:11.0-jre-buster             15.4s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> =&gt; [1/3] FROM docker.io/library/openjdk:11.0-jre-buster@sha256:3546a17e6fb4ff4fa681c3  0.0s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> =&gt; [internal] load build context                                                       0.0s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> =&gt; =</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">transferring</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">context:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">98</span><span style=\"color: #C3E88D\">B</span><span style=\"color: #BABED8\">                                                        </span><span style=\"color: #F78C6C\">0.0</span><span style=\"color: #C3E88D\">s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> =&gt; </span><span style=\"color: #C3E88D\">CACHED</span><span style=\"color: #BABED8\"> [2/3] RUN ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">echo</span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">0.0</span><span style=\"color: #C3E88D\">s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> =&gt; </span><span style=\"color: #C3E88D\">CACHED</span><span style=\"color: #BABED8\"> [3/3] COPY hm-service.jar /app.jar                                           0.0s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> =&gt; </span><span style=\"color: #C3E88D\">exporting</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">to</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">image</span><span style=\"color: #BABED8\">                                                                  </span><span style=\"color: #F78C6C\">0.0</span><span style=\"color: #C3E88D\">s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> =&gt; =</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">exporting</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">layers</span><span style=\"color: #BABED8\">                                                                 </span><span style=\"color: #F78C6C\">0.0</span><span style=\"color: #C3E88D\">s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> =&gt; =</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">writing</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">image</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">sha256:32eebee16acde22550232f2eb80c69d2ce813ed099640e4cfed2193f71</span><span style=\"color: #BABED8\">  </span><span style=\"color: #F78C6C\">0.0</span><span style=\"color: #C3E88D\">s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> =&gt; =</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">naming</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">to</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">docker.io/library/root-hmall</span><span style=\"color: #BABED8\">                                           </span><span style=\"color: #F78C6C\">0.0</span><span style=\"color: #C3E88D\">s</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">+</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> Running 4/4</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">✔</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">Network</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span><span style=\"color: #BABED8\">    </span><span style=\"color: #C3E88D\">Created</span><span style=\"color: #BABED8\">                                                             </span><span style=\"color: #F78C6C\">0.2</span><span style=\"color: #C3E88D\">s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">✔</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">Container</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mysql</span><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">Started</span><span style=\"color: #BABED8\">                                                             </span><span style=\"color: #F78C6C\">0.5</span><span style=\"color: #C3E88D\">s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">✔</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">Container</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hmall</span><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">Started</span><span style=\"color: #BABED8\">                                                             </span><span style=\"color: #F78C6C\">0.9</span><span style=\"color: #C3E88D\">s</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">✔</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">Container</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">nginx</span><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">Started</span><span style=\"color: #BABED8\">                                                             </span><span style=\"color: #F78C6C\">1.5</span><span style=\"color: #C3E88D\">s</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 6.查看镜像</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">compose</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">images</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">CONTAINER</span><span style=\"color: #BABED8\">           </span><span style=\"color: #C3E88D\">REPOSITORY</span><span style=\"color: #BABED8\">          </span><span style=\"color: #C3E88D\">TAG</span><span style=\"color: #BABED8\">                 </span><span style=\"color: #C3E88D\">IMAGE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ID</span><span style=\"color: #BABED8\">            </span><span style=\"color: #C3E88D\">SIZE</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">hmall</span><span style=\"color: #BABED8\">               </span><span style=\"color: #C3E88D\">root-hmall</span><span style=\"color: #BABED8\">          </span><span style=\"color: #C3E88D\">latest</span><span style=\"color: #BABED8\">              </span><span style=\"color: #F78C6C\">32</span><span style=\"color: #C3E88D\">eebee16acd</span><span style=\"color: #BABED8\">        </span><span style=\"color: #F78C6C\">362</span><span style=\"color: #C3E88D\">MB</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">mysql</span><span style=\"color: #BABED8\">               </span><span style=\"color: #C3E88D\">mysql</span><span style=\"color: #BABED8\">               </span><span style=\"color: #C3E88D\">latest</span><span style=\"color: #BABED8\">              </span><span style=\"color: #F78C6C\">3218</span><span style=\"color: #C3E88D\">b38490ce</span><span style=\"color: #BABED8\">        </span><span style=\"color: #F78C6C\">516</span><span style=\"color: #C3E88D\">MB</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">nginx</span><span style=\"color: #BABED8\">               </span><span style=\"color: #C3E88D\">nginx</span><span style=\"color: #BABED8\">               </span><span style=\"color: #C3E88D\">latest</span><span style=\"color: #BABED8\">              </span><span style=\"color: #F78C6C\">605</span><span style=\"color: #C3E88D\">c77e624dd</span><span style=\"color: #BABED8\">        </span><span style=\"color: #F78C6C\">141</span><span style=\"color: #C3E88D\">MB</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 7.查看容器</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">docker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">compose</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ps</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 结果</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">NAME</span><span style=\"color: #BABED8\">                </span><span style=\"color: #C3E88D\">IMAGE</span><span style=\"color: #BABED8\">               </span><span style=\"color: #C3E88D\">COMMAND</span><span style=\"color: #BABED8\">                  </span><span style=\"color: #C3E88D\">SERVICE</span><span style=\"color: #BABED8\">             </span><span style=\"color: #C3E88D\">CREATED</span><span style=\"color: #BABED8\">             </span><span style=\"color: #C3E88D\">STATUS</span><span style=\"color: #BABED8\">              </span><span style=\"color: #C3E88D\">PORTS</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">hmall</span><span style=\"color: #BABED8\">               </span><span style=\"color: #C3E88D\">root-hmall</span><span style=\"color: #BABED8\">          </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">java -jar /app.jar</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">     </span><span style=\"color: #C3E88D\">hmall</span><span style=\"color: #BABED8\">               </span><span style=\"color: #F78C6C\">54</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">seconds</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ago</span><span style=\"color: #BABED8\">      </span><span style=\"color: #C3E88D\">Up</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">52</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">seconds</span><span style=\"color: #BABED8\">       </span><span style=\"color: #F78C6C\">0.0</span><span style=\"color: #C3E88D\">.0.0:8080</span><span style=\"color: #BABED8\">-</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #C3E88D\">8080/tcp,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">:::8080</span><span style=\"color: #BABED8\">-</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #C3E88D\">8080/tcp</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">mysql</span><span style=\"color: #BABED8\">               </span><span style=\"color: #C3E88D\">mysql</span><span style=\"color: #BABED8\">               </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">docker-entrypoint.s…</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">   </span><span style=\"color: #C3E88D\">mysql</span><span style=\"color: #BABED8\">               </span><span style=\"color: #F78C6C\">54</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">seconds</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ago</span><span style=\"color: #BABED8\">      </span><span style=\"color: #C3E88D\">Up</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">53</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">seconds</span><span style=\"color: #BABED8\">       </span><span style=\"color: #F78C6C\">0.0</span><span style=\"color: #C3E88D\">.0.0:3306</span><span style=\"color: #BABED8\">-</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #C3E88D\">3306/tcp,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">:::3306</span><span style=\"color: #BABED8\">-</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #C3E88D\">3306/tcp,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">33060</span><span style=\"color: #C3E88D\">/tcp</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">nginx</span><span style=\"color: #BABED8\">               </span><span style=\"color: #C3E88D\">nginx</span><span style=\"color: #BABED8\">               </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">/docker-entrypoint.…</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">   </span><span style=\"color: #C3E88D\">nginx</span><span style=\"color: #BABED8\">               </span><span style=\"color: #F78C6C\">54</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">seconds</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ago</span><span style=\"color: #BABED8\">      </span><span style=\"color: #C3E88D\">Up</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">52</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">seconds</span><span style=\"color: #BABED8\">       </span><span style=\"color: #F78C6C\">80</span><span style=\"color: #C3E88D\">/tcp,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0.0</span><span style=\"color: #C3E88D\">.0.0:18080-18081</span><span style=\"color: #BABED8\">-</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #C3E88D\">18080-18081/tcp,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">:::18080-18081</span><span style=\"color: #BABED8\">-</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #C3E88D\">18080-18081/tcp</span></span></code></pre></div><p>打开浏览器，访问：<a href=\"http://yourip:8080/\">http://yourIp:8080</a></p>\n","text":"Docker的安装及其使用，常见的docker命令总结，docker基本用法...","permalink":"/post/Docker总结","photos":[],"count_time":{"symbolsCount":"28k","symbolsTime":"26 mins."},"categories":[{"name":"Study","slug":"Study","count":30,"path":"api/categories/Study.json"}],"tags":[{"name":"Docker","slug":"Docker","count":1,"path":"api/tags/Docker.json"},{"name":"开发工具","slug":"开发工具","count":3,"path":"api/tags/开发工具.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-Docker%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">1.Docker安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E5%8D%B8%E8%BD%BD%E6%97%A7%E7%89%88\"><span class=\"toc-text\">1.1 卸载旧版</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E9%85%8D%E7%BD%AEDocker%E7%9A%84yum%E5%BA%93\"><span class=\"toc-text\">1.2 配置Docker的yum库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-%E5%AE%89%E8%A3%85Docker\"><span class=\"toc-text\">1.3 安装Docker</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-4-%E5%90%AF%E5%8A%A8%E5%92%8C%E6%A0%A1%E9%AA%8C\"><span class=\"toc-text\">1.4 启动和校验</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-5-%E9%85%8D%E7%BD%AE%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F\"><span class=\"toc-text\">1.5 配置镜像加速</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-5-1-%E6%B3%A8%E5%86%8C%E9%98%BF%E9%87%8C%E4%BA%91%E8%B4%A6%E5%8F%B7\"><span class=\"toc-text\">1.5.1 注册阿里云账号</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-5-2-%E5%BC%80%E9%80%9A%E9%95%9C%E5%83%8F%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">1.5.2 开通镜像服务</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-5-3-%E9%85%8D%E7%BD%AE%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F\"><span class=\"toc-text\">1.5.3 配置镜像加速</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-Docker%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8\"><span class=\"toc-text\">2.Docker快速入门</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-Docker%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">2.1 Docker引入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E9%83%A8%E7%BD%B2MySQL%E4%BE%8B\"><span class=\"toc-text\">2.2 部署MySQL例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E5%91%BD%E4%BB%A4%E8%A7%A3%E8%AF%BB\"><span class=\"toc-text\">2.3 命令解读</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-Docker%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">3.Docker基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">3.1 常见命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-1-%E5%91%BD%E4%BB%A4%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">3.1.1 命令介绍</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-2-%E6%BC%94%E7%A4%BA\"><span class=\"toc-text\">3.1.2 演示</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-3-%E5%91%BD%E4%BB%A4%E5%88%AB%E5%90%8D\"><span class=\"toc-text\">3.1.3 命令别名</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E6%95%B0%E6%8D%AE%E5%8D%B7\"><span class=\"toc-text\">3.2 数据卷</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-1-%E4%BB%80%E4%B9%88%E6%98%AF%E6%95%B0%E6%8D%AE%E5%8D%B7\"><span class=\"toc-text\">3.2.1 什么是数据卷</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-2-%E6%95%B0%E6%8D%AE%E5%8D%B7%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">3.2.2 数据卷命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-3-%E6%8C%82%E8%BD%BD%E6%9C%AC%E5%9C%B0%E7%9B%AE%E5%BD%95%E6%88%96%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">3.2.3 挂载本地目录或文件</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E9%95%9C%E5%83%8F\"><span class=\"toc-text\">3.3 镜像</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-1-%E9%95%9C%E5%83%8F%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">3.3.1 镜像结构</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-2-Dockerfile\"><span class=\"toc-text\">3.3.2 Dockerfile</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-3-%E6%9E%84%E5%BB%BA%E9%95%9C%E5%83%8F\"><span class=\"toc-text\">3.3.3 构建镜像</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-4-%E7%BD%91%E7%BB%9C\"><span class=\"toc-text\">3.4 网络</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E6%BC%94%E7%A4%BA\"><span class=\"toc-text\">4.项目部署演示</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E9%83%A8%E7%BD%B2Java%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">4.1 部署Java项目</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF\"><span class=\"toc-text\">4.2 部署前端</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-DockerCompose\"><span class=\"toc-text\">4.3 DockerCompose</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-3-1-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">4.3.1 基本语法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-3-2-%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">4.3.2 基础命令</span></a></li></ol></li></ol></li></ol>","author":{"name":"Fioransh","slug":"blog-author","avatar":"/medias/2.jpg","link":"/","description":"<p> 学而无知，无知而学 <p> <p> Anime is trash and so am I. <p>","socials":{"github":"https://github.com/orangefish1118","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/14481775?spm_id_from=333.1007.0.0"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/Orangefish-cyc"},"mail":{"icon":"/svg/email.svg","link":"mailto:1263938020@qq.com"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"汇编语言指令","uid":"902b00dac8e53459d584ad64422345db","slug":"汇编语言指令","date":"2024-04-26T07:25:12.000Z","updated":"2024-06-19T07:44:20.339Z","comments":true,"path":"api/articles/汇编语言指令.json","keywords":"博客、橙汁蒸鱼、Orangefish、Oranfish","cover":"/medias/26.jpg","text":"1.通用寄存器简单指令1.1 简单传送指令1.1.1 传送指令MOVMOV DEST,SRC 将源操作数SRC送至目的操作数DEST，即： DEST &lt;&...","permalink":"/post/汇编语言指令","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"Study","slug":"Study","count":30,"path":"api/categories/Study.json"}],"tags":[{"name":"学习","slug":"学习","count":20,"path":"api/tags/学习.json"},{"name":"汇编","slug":"汇编","count":1,"path":"api/tags/汇编.json"}],"author":{"name":"Fioransh","slug":"blog-author","avatar":"/medias/2.jpg","link":"/","description":"<p> 学而无知，无知而学 <p> <p> Anime is trash and so am I. <p>","socials":{"github":"https://github.com/orangefish1118","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/14481775?spm_id_from=333.1007.0.0"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/Orangefish-cyc"},"mail":{"icon":"/svg/email.svg","link":"mailto:1263938020@qq.com"}}}}},"next_post":{"title":"VMware部署Redis","uid":"da5c5f9dfe8d5fb0dab3c41b63c9c534","slug":"VMware部署Redis","date":"2024-04-05T15:48:12.000Z","updated":"2024-05-06T04:32:04.318Z","comments":true,"path":"api/articles/VMware部署Redis.json","keywords":"博客、橙汁蒸鱼、Orangefish、Oranfish","cover":"/medias/22.jpg","text":"在VMware上进行Redis的基本部署...","permalink":"/post/VMware部署Redis","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Study","slug":"Study","count":30,"path":"api/categories/Study.json"}],"tags":[{"name":"Redis","slug":"Redis","count":2,"path":"api/tags/Redis.json"},{"name":"VMware","slug":"VMware","count":1,"path":"api/tags/VMware.json"}],"author":{"name":"Fioransh","slug":"blog-author","avatar":"/medias/2.jpg","link":"/","description":"<p> 学而无知，无知而学 <p> <p> Anime is trash and so am I. <p>","socials":{"github":"https://github.com/orangefish1118","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/14481775?spm_id_from=333.1007.0.0"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/Orangefish-cyc"},"mail":{"icon":"/svg/email.svg","link":"mailto:1263938020@qq.com"}}}}}}