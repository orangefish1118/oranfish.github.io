[{"id":"40b4e77513d2dcdb879ae29656ac6237","title":"SCAU2023CSAPP期末知识点总结","content":"图片由于历史原因难以修改路径，导致本文阅读难度较大，因此不建议观看这篇文章，文章仅供测试。\n\nCSAPP知识点\n进制数转换：十进制转二进制、二进制转十进制、十进制转十六进制、十六进制转十进制、二进制转十六进制、十六进制转二进制。\n\n布尔运算：&amp;与（0&amp;0&#x3D;0 0&amp;1&#x3D;0 1&amp;1&#x3D;1） |或（0|0&#x3D;0 0|1&#x3D;1 1|1&#x3D;1）~非（取反）^异或（0^0&#x3D;0 0^1&#x3D;1 1^1&#x3D;0）\n\n位及运算：获取最低有效字节的值（&amp;0xFF）\n\n逻辑运算（&amp;&amp; || ！）：非0参数都位true（0x01）、参数0表示false(0x00)\n\n移位运算：左移（丢弃左位在最右端补0）逻辑右移（丢弃右位在最左端补0）算数右移（最高位等于0时候与逻辑右移一样、最高位等于1时则是在最高位补1）有符号数为算数右移、无符号数为逻辑右移。\n\n映射(B2U)有符号数无符号数的编码方式：\n\n补码编码映射(B2T)：\n\n有符号数和无符号数的转换：位模式不变、解释位的方式变化。\n\n强制类型转换、影响关系运算的结果：程序运行有符号数会强转成无符号数运算。较大数据类型转较小会损失。\n\n无符号数的转换更大数据类型-扩展：无符号数末尾带有U\n\n有符号数的转换更大数据类型-扩展：\n\n截断的基本规则：\n\n无符号数加法：\n\n有符号数加法：\n\n补码的加法：\n\n使用移位、加法运算的组合代表乘以常数因子：除法无法除尽时候会向0方向舍入、除法为右移\n\n浮点数的权重：\n\n浮点数格式（符号、阶码、尾数）：符号位s（为0时为正数、为1时为负数）阶码exp、尾数M与frac相关\n\n浮点数规格化的值、非规格化的值、特殊值：阶码exp决定了这个数是哪一类\n\n规格化的值和非规格化的值：阶码域全为0的时候E&#x3D;1-bias。M&#x3D;f。\n\n单精度浮点数的二进制表示：\n\n向上舍入、向下舍入、向0舍入、向偶数舍入：\n\nint转化为float不会溢出可能会被舍入、int&#x2F;float转化为double可以保留、double转化为float类型可能会发生溢出转换后可能被舍入、float&#x2F;double转化为int可能向0舍入也可能溢出。\n\n操作数的寄存器：\n\n操作码和操作数以及内存引用：立即数用$表示、内存引用需要加上括号\n\n操作数：\n\n汇编后缀表示：\n\n数据传送指令mov：后缀不同操作的数大小不同，当movq指令的源操作数为立即数时、该立即数只能是32位的补码表示、然后对该数值进行符号位扩展后、讲得到的64位数传送。\n\n压入和弹出栈：\n\n算数和逻辑指令leaq：\n\n通过leaq指令实现算术运算：\n\n一元操作：\n\n二元操作：\n\n移位运算：\n\n其他运算：\n\n常用条件码：CF-进位标志，当CPU最近执行的一条指令最高位产生了进位时，CF会被置1，可以用来检查无符号数的溢出。ZF-零标志，当最近操作的结果为0时，零标志会被置1。SF-符号标志，当最近的操作结果小于0的时候，符号标志会被置1。OF-溢出标志，最近的操作导致正溢出或负溢出时候会被置1。\n\ncmp指令和test指令：\n\n条件控制分支if-else以及条件传送：\n\n循环指令：循环语句是通过条件测试与跳转的结合来实现的。\n\nswitch语句：\n\n理解过程，理解“过程 P 调用过程 Q，Q 执行后返回到 P”包含的三个机制（传递控制、\n传递数据、分配和释放内存）：\n栈帧：当函数执行所需要的存储空间超出寄存器能够存放的大小时，会借助栈上的存储空间，这部分存储空间就叫做栈帧。\n对于函数P调用函数Q的例子，包括较早的帧、调用函数P的帧、还要正在执行函数Q的帧。\n当函数P调用函数Q时，会把返回地址压入栈中，该地址殖知名了函数Q执行结束返回时要从函数P的哪个位置继续进行。这个返回地址的压栈操作并不是由指令push来执行的，而是由函数调用指令call实现的。\n\n数组的分配与访问： short数组2个字节、int数组4个字节、double数组8个字节、指针数组8个字节\n二维数组（嵌套数组）：Xd表示数组的起始地址、L表示数组T的大小、Cij都是常数。\n\n理解内存越界的引用和缓冲区溢出：缓冲区溢出会导致返回时会随机返回到系统的任意位置。对抗缓冲区溢出攻击的方法：栈随机化（ASLR 栈的位置在每次运行时地址都变化）、栈破坏检测（在缓冲区与栈保存的状态值之间存储一个特殊值，这个值被称为金丝雀值、检测金丝雀值是否变化判断是否遭受攻击）、限制可执行代码区域。\n\n消除循环的低效率：CPE表示每个元素执行所需要的周期数（度量效率）。比较操作和分支操作不直接影响程序的数据流，将两个操作以及寄存器rax删除，只保留循环寄存器以及关键操作。将这个视作一个模板重复n次。\n\n减少过程调用（循环展开）：多路并行，10路时接近吞吐界限。\n\n消除不必要的内存引用（加载操作延迟）：加载操作会受存储引用和计算影响。\n\n动态RAM（DRAM）： 电容充电维持信息存储、每个bit位的存储对应一个电容和晶体管，对干扰十分敏感，内存采用DRAM，不断刷新才能保持数据，使用超单元一词来表示DRAM的存储单元，可以通过类似坐标的方式寻址，寻址所需位数关系2的n次方等于行数&#x2F;列数，n即为寻址位数。\n\n磁盘容量和磁盘访问时间的计算：\n\n局部性（时间局部性、空间局部性）：时间局部性（被引用的内存位置在不远的将来还可能被多次引用）、空间局部性（一个内存被引用了一次，程序很可能在不远的将来引用附近的一个内存位置）如两层嵌套的循环遍历二重数组的例子。\n\n高速缓存的参数：基于SRAM，有效位（valid 长1bit 表示当前cache line存储的信息是否有效 1表示有效0表示无效）、标记（tag 确定目标数据是否存在于当前的cache line中） 、数据块（cache block一小部分内存数据的副本，大小用B表示）\n\n高速缓存的三种地址的映射方式：根据每个set所包含的cache line的行数不同，cache被分为不同的类。\n直接缓存（E&#x3D;1 组选择 行匹配 字抽取 根据偏移量来确定目标数据的确切位置，从什么位置开始抽取数据 命中：不命中：cache需要从存储器层次结构的下一层取出被请求的块)\n例子：S表示有几个set、E表示每个set有几行、B表示每个数据块包含几个字节、其中地址m是多少位\n组相联（E&#x3D;2）：字抽取不命中（随机替换、最不常使用、最近最少使用）\n全相联（E&#x3D;C&#x2F;B）：\n\n编写高速缓存友好代码：\n\n理解符号类型和符号解析：全局符号（由该模块定义、同时能被其他模块引用的全局符号）、外部符号（被其他模块定义、同时被该模块引用的全局符号）、局部符号（只能被该模块定义和引用的局部符号 static）\nCOMMON是未初始化的全局变量，注意和.bss区分\n\n强符号和弱符号：强符号（函数和已初始化的全局变量  连接器不允许有多个同名的强符号一起出现）、弱符号（未初始化的全局变量）。\n\n重定位：重定位条目（告诉链接器在合成可执行文件时候应该如何修改这个引用）链接器合并输入模块，并为每个符号分配运行时地址\n重定位相对引用\n绝对地址引用\n\n异常控制流的分类：中断（异步）、陷阱、故障和终止\n\n并发流：一个逻辑流的执行在时间上和另一个流重叠的情况成为并发流，两个流的执行被成为并发运行。（并行是两个进程在不同的处理器核上同时运行）并发是交替运行的，并行是同时运行的。\n\n进程的状态\n\n进程的创建：创建进程时使用的系统函数-fork。父进程调用fork函数创建一个子进程。fork函数一次调用返回两次。父进程和子进程二者并发执行，它们的输出结果都打印出来。\n\n函数execve：调用加载器，在执行可执行程序的main函数之前。\n\nzombie僵死进程：终止运行但是还未回收的进程称为僵死进程，仍在消耗内存。\n\n子进程的回收：父进程通过函数waitpid来等待它的子进程终止或者停止。当第一个参数pid等于0表示等待的进程是一个单独的子进程，pid&#x3D;-1表示等待的进程是由父进程创建的所有子进程组成的集合。statusp是非空，函数waitpid在status上放上导致返回的子进程的状态信息，status就是statusp的值。正常回收返回true，否则未false。\n\n信号所引发事件：\n\n进程组的概念：每个进程都只属于一个进程组，每个进程组都有自己的ID值来唯一标识，通过函数getpgrp来获取当前进程所属的进程组ID值。setpgrp可以进行更改ID\n\n发送信号的方式：\n发送信号的&#x2F;kill方式：通过&#x2F;bin目录中的kill程序可以向其他的进程发送任意的信号。\n从键盘发送信号：当我们在键盘上输入Ctrl+C键会导致内容发送一个中断信号到前台进程组中的所有进程中。\n调用函数kill：调用函数发送信号给其他进程，也包括给自己发送信号。\n使用函数alarm函数：\n\n接收信号：一个待处理信号最多只能接收一次，一种类型的信号最多只能有一次待处理信号。如果一个类型为k的信号有待处理信号，那接下来这个进程中类型为k的信号都不用排队等待，会被简单地丢弃。\n\n虚拟内存：自动完成内存管理的相关工作，可以创建和释放内存空间，将内存空间映射到磁盘文件的某个部分，共享内存。虚拟内存使用不当会使程序产生错误。\n\n物理寻址：\n\n虚拟寻址：将一个虚拟地址转换成物理地址的任务叫做地址翻译\n\n地址空间：地址空间是一个非负整数的有序集合，如果地址空间中的整数是连续的，那么我们说它是一个线性地址空间，一个地址空间的大小是由标识最大地址所需要的位数来描述的。最大可能的虚拟地址是虚拟地址数-1。\n\n虚拟页（存在于磁盘上）和物理页：\n\n页表：是一个页表条目PTE的数组存在于物理内存之中，将虚拟页地址映射到物理页地址。页表条目PTE&#x3D;2的n-p次方，n为虚拟地址大小、页大小P&#x3D;2的p次方。\n\n页命中：虚拟内存中的一个字存在于物理内存中（即DRAM缓存命中）\n\n缺页：引用虚拟内存中的字，不在物理内存中 (DRAM 缓存不命中)\n\n分配页面：分配一个新的虚拟内存页 (VP 5).内核在磁盘上分配VP5， 并且将PTE5指向这个新的位置\n\n使用SRAM缓存来表示CPU与内存之间的L1L2L3这三级高速缓存。DRAM表示虚拟内存系统的缓存。\n\n地址翻译：\n\nP&#x3D;1K&#x3D;2的10次方可以得到p&#x3D;10。虚拟页偏移量VPO&#x3D;物理页偏移量PPO&#x3D;p。虚拟页号VPN&#x3D;虚拟地址空间-虚拟页偏移量VPO。物理页号PPN&#x3D;物理地址-物理页偏移量PPO。\n\n\n","slug":"CSAPP知识点","date":"2024-01-02T05:28:12.000Z","categories_index":"Blog","tags_index":"学习,CSAPP","author_index":"Fioransh"},{"id":"c64df93cb58edc8361b9b55ace6a467f","title":"前端部分知识点","content":"由于历史原因，本文在编写时候出现错误难以修改，因此不建议观看本文章，文章仅供测试。\n\nHTML部分1. html结构1.html：根标签\n2.head： 头部标签\n3.body： 主体标签\n4.title：标题标签\n5.DOCTYPE： 声明文档类型\n6.lang &#x3D; “en”：页面的语言类型\n7.charset&#x3D;“UTF-8”编码格式\n2. html标签\n标题标h：  ~ 不同字号大小\n段落标签p\n水平线标签   单标签\n换行标签  \nspan 文字标签：一行上可以放多个 小盒子\ndiv标签： 一行上只能放一个大盒子 \n加粗标签： 和   前者语义更强烈\n倾斜标签： 和  前者语义更强烈\n删除线： 和    前者语义更强烈\n下划线： 和  前者语义更强烈\n\n3.图片标签\nsrc：当前图片的路径\nalt：当图片错误加载时候显示的文字\ntitle：当鼠标悬停在图片上显示的文字\nheight： 图片的高度\nwidth： 图片的宽度\nborder：图片的边框\n\n4.连接标签\n外部链接    写完整的 协议  域名   网址\n内部链接    直接写文件名即可\nhref:指定跳转的页面\ntitle：鼠标悬停显示的文字\ntarget:  _self(默认会覆盖原来的窗口)   _blank(会以新的窗口打开)    窗口的打开方式\n#：会阻止页面跳转但是会刷新页面\n绝对路径：目录下的绝对位置，通常从盘符开始\n相对路径：在同一个文件夹直接找名字、向上一级  ..&#x2F; 、向下 &#x2F;\n\n5.表格\n表格：是用于定义表格的标签。\n行：标签用于定义表格中的行，必须嵌套在  标签中。\n单元格： 用于定义表格中的单元格，必须嵌套在标签中。\n表头 加粗加黑自动居中。\n表格的标题：表格的标题   写在内部  显示外部  居中\n结构头： 结构头\n结构底：结构底\n结构体：结构体\n表格边框border\n宽度 width\n高度 height\n单元格与单元格之间距离 cellspacing\n单元格与内容之间的距离 cellspadding\n居中 align ： left&#x2F; center&#x2F; right \n列合并 colspan\n行合并 rowspan\n\n6.列表\n无序列表 :  \n有序列表 : \n自定义列表：  \n\n7. 表单1. input属性 \ntext：文本框\npassword：密码框\nradio：单选按钮\ncheckbox：复选框\nbutton：普通按钮\nreset：重置按钮  需要配合form表单才有作用\nsubmit：提交按钮\nimage   属性  src\nfile 文件按钮   上传图片\n\n2.其他属性\nname属性：定义input元素的名称\nvalue：规定input氧元素的值\nchecked：规定input元素首次加载时应当被选中\nmaxlength： 输入字段字符的最大长度\nlabel\ntextarea：用户留言 cols&#x3D;“每行中的字符数” ，rows&#x3D;“显示的行数”\nselect：下拉菜单\nform表单：收集用户信息，action：  提交后台的地址 method&#x3D;”get&#x2F;post”   提交（传输）后台的方式 name &#x3D;“a” 告诉服务器  由哪个表单提交过来的\n\nCSS部分1.css引入方式\n行内样式：&lt;标签 style&#x3D;”属性:属性值;”&gt;&lt;&#x2F;标签&gt;\n内部样式：选择器{属性:属性值;属性：属性值}\n外部样式：通过link引入外部css文件  \nhref与src   href 是引用   src下载资源到当前页面\n\n2.选择器\n标签选择器：标签{属性：属性值}\nclass（类选择器）：html：  css：  .名字{属性：属性值}  .nav{color: red}\nid选择器：html：   css：  #名字{属性：属性值} id与class选择器的区别：  id的名字是唯一的（体现在js里面） class名字可以任意多个  #nav{color： red}\n通配符选择器：选择所有的标签 *{color：red}\n\n3.字体属性\n字体大小：font-size \n字体类型：font-family\n字体粗度：font-weight   normal默认值400（不加粗）bold粗体700（加粗的）\n文本风格：font-style:字体倾斜：italic（倾斜）&#x2F;normal（正常）\n文字阴影： text-shadow  水平距离   垂直距离  模糊程度   阴影颜色   \n字体连写：  font:font-style font-weight font-size&#x2F;line-height font-family\n字体颜色：color\n水平对齐方式：text-align:left&#x2F;center&#x2F;right（注意：1.div  h。。标题会居中   span   em  i。。。。不会居中）\n行高：line-height\n首行缩进：text-indent:  em   1em&#x3D;16px\n去掉a链接默认的下划线 ：text-decoration： none(去掉下划线)&#x2F; undefined(添加下划线)\n\n4.快速生成HTML结构语法\n生成标签 直接输入标签名 按tab键即可   比如  div   然后tab 键， 就可以生成 \n如果想要生成多个相同标签  加上 * 就可以了 比如   div*3  就可以快速生成3个div\n如果有父子级关系的标签，可以用 &gt;  比如   ul &gt; li就可以了\n如果有兄弟关系的标签，用  +  就可以了 比如 div+p  \n如果生成带有类名或者id名字的，  直接写  .demo  或者  #two   tab 键就可以了\n如果生成的div 类名是有顺序的， 可以用 自增符号  $ \n如果想要在生成的标签内部写内容可以用  { }  表示\n\n5.快速生成CSS样式语法CSS 基本采取简写形式即可\n​\t\t比如 w200   按tab  可以 生成  width: 200px;\n​\t\t比如 lh26px   按tab  可以生成  line-height: 26px;‘\n6.复合选择器\n后代选择器：元素1 元素2 {样式}   ul li{color：red} 选择ul里面所有的li标签元素\n子选择器：元素1&gt;元素2 {样式}  div &gt; p {样式声明} 选择div里面所有最近一级的p标签元素\n并集选择器：元素1，元素2 {样式声明}  ul，div{样式}  选择ul和div标签元素\n伪类选择器：     （ :hover）\n链接伪类选择器：给某些选择器增加特殊的效果：\ta:hover\t鼠标经过的那个链接\n:focus 伪类选择器：用于选取获得焦点的表单元素\n\n7.CSS的显示模式\n块元素：~、、、、、  比较霸道，自己独占一行。高度，宽度、外边距以及内边距都可以控制。宽度默认是容器（父级宽度）的100%。是一个容器及盒子，里面可以放行内或者块级元素。\n行内元素：、、、、、、、、、 相邻行内元素在一行上，一行可以显示多个。默认宽度就是它本身内容的宽度。\n行内块元素：、、  同时具有块元素和行内元素的特点。\n元素显示模块转换：转换为块元素：display:block;  转换为行内元素：display:inline;  转换为行内块：display: inline-block;\n让文字的行高等于盒子的高度  就可以让文字在当前盒子内垂直居中\n\n8.CSS的背景\n背景颜色：background-color：颜色值；元素背景颜色默认值是 transparent（透明）\n背景图片：background-image：none | url ；\n背景平铺：background-repeat： repeat在纵向和横向上平铺 | no-repeat不平铺 | repeat-x横向 | repeat-y纵向\n背景图片位置：background-position 属性可以改变图片在背景中的位置\n背景图片固定：\tbackground-attachment    scroll随对象内容滚动  fixed 背景图像固定\n背景样式合写：\tbackground: 背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置;\n背景色半透明：background： rgba（0，0，0，0.3） 最后一个参数是 alpha 透明度，取值范围在 0~1之间\n\n9.优先级\n继承或者* 0，0，0，0\n元素选择器 0，0，0，1\n类选择器，伪类选择器 0，0，1，0\nID选择器  0，1，0，0\n行内样式 style&#x3D;“” 1，0，0，0\n！important 重要的 无穷大\n\n10.盒子模型——边框border\nCSS 盒子模型本质上是一个盒子，封装周围的 HTML 元素，它包括：边框、外边距、内边距、和 实际内容\n定义边框粗细：border-width： 单位是px\n边框的样式：border-style  none：没有边框即忽略所有边框的宽度（默认值）solid：边框为单实线(最为常用的) dashed：边框为虚线   dotted：边框为点线\n表格的细线边框：border-collapse \nborder-collapse: collapse; 表示相邻边框合并在一起\n内边距 padding\n外边距 margin\n圆角边框：border-radius 用于设置元素的外边框圆角。\n盒子阴影： box-shadow: h-shadow水平阴影 v-shadow垂直阴影 blur模糊距离 spread阴影的尺寸 color阴影颜色 inset外部阴影改为内部阴影;\n文字阴影：  text-shadow: h-shadow水平阴影 v-shadow垂直阴影 blur模糊距离 color阴影颜色;\n\n11.浮动\n浮动：float：none不浮动   left向左浮动   right向右浮动\n清除浮动： 选择器{clear:属性值;}   left 不允许左侧有浮动   right 不允许右侧有浮动  both 同时清除左右两侧浮动\n额外标签法清除浮动：例如 ，或者其他标签（如等）。\n父级添加 overflow 属性 （溢出）hidden | auto | scroll\n父级添加after伪元素\n\n12.定位（position）\n边偏移 有 top、bottom、left 和 right  4 个属性。\n\nposition 属性定义元素的定位模式  选择器 { position: 属性值; } static  静态定位 relative  相对定位            absolute  绝对定位fixed  固定定位\n\n静态定位(static) ：无定位\n\n相对定位(relative) ：移动位置的时候相对于自己原来的位置来说的，在原来位置继续占有\n\n绝对定位(absolute)：绝对定位是元素在移动位置的时候，是相对于它祖先元素来说的，完全不占位置，父元素要有定位\n\n子绝父相\n\n固定定位(fixed)：固定于浏览器可视区的位置，不随滚动条滚动，不占位置\n\n粘性定位(sticky) ：相对定位和固定定位的混合，占位置\n\n\n\n定位模式\n是否脱标\n移动位置\n是否常用\n\n\n\nstatic   静态定位\n否\n不能使用边偏移\n很少\n\n\nrelative 相对定位\n否 (占有位置)\n相对于自身位置移动\n基本单独使用\n\n\nabsolute绝对定位\n是（不占有位置）\n带有定位的父级\n要和定位父级元素搭配使用\n\n\nfixed 固定定位\n是（不占有位置）\n浏览器可视区\n单独使用，不需要父级\n\n\nsticky 粘性定位\n否   (占有位置)\n浏览器可视区\n当前阶段少\n\n\n\n堆叠顺序（z-index）：正整数、负整数或 0，默认值是 0，数值越大，盒子越靠上；\n\n绝对定位的盒子居中：left: 50%;  margin-left: -100px;\n\n脱标的盒子不会触发外边距塌陷\n\n绝对定位（固定定位）会完全压住盒子\n\n\n13.元素显示隐藏\n显示display：display: none 隐藏对象  display：block 除了转换为块级元素之外，同时还有显示元素的意思。隐藏后不再占有原本位置\n\n可见性 visibility：visibility：visible ; 　元素可视   visibility：hidden; 　  元素隐藏\n\noverflow 溢出：\n\n\n\n\n属性值\n描述\n\n\n\nvisible\n不剪切内容也不添加滚动条\n\n\nhidden\n不显示超过对象尺寸的内容，超出的部分隐藏掉\n\n\nscroll\n不管超出内容否，总是显示滚动条\n\n\nauto\n超出自动显示滚动条，不超出不显示滚动条\n\n\n\n\n14.精灵图\n精灵技术主要针对于背景图片使用。就是把多个小背景图片整合到一张大图片中。\n这个大图片也称为 sprites  精灵图  或者 雪碧图\n移动背景图片位置， 此时可以使用 background-position 。\n移动的距离就是这个目标图片的 x 和 y 坐标。注意网页中的坐标有所不同\n因为一般情况下都是往上往左移动，所以数值是负值。\n使用精灵图的时候需要精确测量，每个小背景图片的大小和位置。\n\n15.字体应用txt @font-face &#123;\n   font-family: &#39;icomoon&#39;;\n   src:  url(&#39;fonts/icomoon.eot?7kkyc2&#39;);\n   src:  url(&#39;fonts/icomoon.eot?7kkyc2#iefix&#39;) format(&#39;embedded-opentype&#39;),\n     url(&#39;fonts/icomoon.ttf?7kkyc2&#39;) format(&#39;truetype&#39;),\n     url(&#39;fonts/icomoon.woff?7kkyc2&#39;) format(&#39;woff&#39;),\n     url(&#39;fonts/icomoon.svg?7kkyc2#icomoon&#39;) format(&#39;svg&#39;);\n   font-weight: normal;\n   font-style: normal;\n &#125;\n定义字体： span {   font-family: “icomoon”;}\n16.CSS界面样式\n鼠标样式 cursor：default 小白默认 pointer小手 move 移动 text文本 not-allowed禁止\n轮廓线 outline：none 去掉默认蓝色边框\n防止拖拽文本域 resize：none\n文字对齐 vertical-align ：baseline默认，放在父元素基线，top 行中最高元素顶端对齐 middle 放在父元素中部 bottom最低元素的顶端对齐\n单行文本溢出显示省略号：先强制一行内显示文本  white-space: nowrap; 超出的部分隐藏  overflow: hidden;  文字用省略号替代超出的部分  text-overflow: ellipsis;\n\nHTML51.语义化标签\n&lt;header&gt; 头部标签\n&lt;nav&gt; 导航标签\n&lt;article&gt; 内容标签\n&lt;section&gt; 定义文档某个区域\n&lt;aside&gt; 侧边栏标签\n&lt;footer&gt; 尾部标签\n\n2.多媒体标签\n音频 audio 和视频 video 两个标签\nautoplay 视频就绪自动播放\nwidth height\nloop 视频播放完毕是否循环播放\npreload auto预先加载 none不预先\nurl地址\nposter 加载等待的画面图片\nmuted 静音播放\ncontrols 显示控件\n\n3.新增表单元素\nemail  \nurl\ndate\ntime\nmonth\nweek\nnumber\ntel\nsearch\ncolor\n\nCSS31.新增选择器\n\n\n\n\n2.盒子模型\nbox-sizing: content-box  盒子大小为 width + padding + border  （以前默认的）\nbox-sizing: border-box  盒子大小为 width\n如果盒子模型我们改为了box-sizing: border-box  ， 那padding和border就不会撑大盒子了（前提padding和border不会超过width宽度）\n\n3.其他特性\n模糊滤镜filter ：filter:   函数(); –&gt;  例如： filter: blur(5px);  –&gt;  blur模糊处理  数值越大越模糊\n计算盒子宽度 – calc 函数：width: calc(100% - 80px);\n\n4.CSS3过渡\n过渡动画： 是从一个状态 渐渐的过渡到另外一个状态\ntransition: 要过渡的属性  花费时间  运动曲线  何时开始;\n\n5.2D转换\n转换 移动：translate  旋转：rotate  缩放：scale\n旋转 translate：transform：translate（x,y）\n缩放 retate：transform：retate（度数）\n2D转换中心点：transform-origin： x， y；\n缩放 transform：scale（x,y）\n\n6.动画\nkeyframes定义动画  @keyframes动画名称\n\n","slug":"前端部分知识总结","date":"2023-11-23T05:28:12.000Z","categories_index":"Blog","tags_index":"前端,学习","author_index":"Fioransh"},{"id":"1a206922638b47b5382f6efd345cd840","title":"校园课表微信小程序接口文档示例","content":"基于uni-app框架开发的微信小程序接口文档一. 关系型数据库设计1.数据列表1.student 表\n\n\nstudent_id\nreal_student_id\nname\ncollege\nmajor\nclassNum\ngrade\n\n\n\n1\n202225220801\n张三\n数信\n软件工程\n5班\n2022\n\n\n2\n202325310802\n李四\n材能\n材料\n1班\n2023\n\n\n…\n…\n…\n…\n…\n…\n…\n\n\n2. courses表\n\n\ncourse_id\nname\nteacher\ntime\nlocation\nday_of_week\n\n\n\n101\n数据库原理\n王老师\n周一1-2节\n4210\n1\n\n\n102\n数据结构\n张老师\n周三1-2节\n3302\n3\n\n\n103\n面向对象程序设计\n宋老师\n周四3-4节\n4502\n4\n\n\n…\n…\n…\n…\n…\n\n\n\n3.enrollments表\n\n\nenrollment_id\nstudent_id\ncourse_id\n\n\n\n1\n1\n101\n\n\n2\n1\n102\n\n\n3\n2\n101\n\n\n4\n2\n103\n\n\n…\n…\n…\n\n\n4.tasks表\n\n\ntask_id\nreal_student_id\ndescription\nstatus\ncreate_time\nupdate_time\n\n\n\n1\n202225220501\n完成作业\n未完成(0)\n…\n…\n\n\n2\n202325310502\n准备考试\n完成(1)\n…\n…\n\n\n3\n202225310702\n提交报告\n未完成(0)\n…\n…\n\n\n…\n…\n…\n…\n\n\n\n\n生成语句txt-- 学生表格\ncreate table students (\n    student_id int unsigned primary key auto_increment comment &#39;主键学生id&#39;,\n    real_student_id varchar(20) not null comment &#39;学号&#39;,\n    name varchar(10) not null comment &#39;名字&#39;,\n    college varchar(20) not null comment &#39;学院&#39;,\n    major varchar(20) not null comment &#39;专业&#39;,\n    class int not null comment &#39;班级&#39;,\n    grade int not null comment &#39;年级&#39;\n)comment &#39;学生表格&#39;;\nCREATE INDEX idx_real_student_id ON students(real_student_id);\n-- 学生表测试数据\ninsert into students(student_id, real_student_id, name, college, major, class, grade) values(1, &#39;202225220503&#39;, &#39;冯焯炫&#39;, &#39;软件学院&#39;, &#39;软件工程&#39;, 5, 2022),\n                                                                                            (2, &#39;202225220504&#39;, &#39;郭文杰&#39;, &#39;软件学院&#39;, &#39;软件工程&#39;, 5, 2022),\n                                                                                            (3, &#39;202225220901&#39;, &#39;张三&#39;, &#39;软件学院&#39;, &#39;软件工程&#39;, 9, 2022),\n                                                                                            (4, &#39;202325220904&#39;, &#39;李四&#39;, &#39;软件学院&#39;, &#39;软件工程&#39;, 9, 2023),\n                                                                                            (5, &#39;202225310902&#39;, &#39;王五&#39;, &#39;数学与信息学院&#39;, &#39;计算机科学与技术&#39;, 9, 2022);\n\n\n-- 课程表格\ncreate table courses(\n    course_id int unsigned primary key auto_increment comment &#39;主键课程id&#39;,\n    name varchar(20) not null comment &#39;课程名字&#39;,\n    teacher varchar(10) not null comment &#39;教师名字&#39;,\n    time varchar(20) not null comment &#39;上课时间&#39;,\n    location varchar(20) not null comment &#39;上课地点&#39;,\n    day_of_week int not null comment &#39;星期几上课&#39;\n)comment &#39;课程表格&#39;;\n-- 课程表测试数据\ninsert into courses(course_id, name, teacher, time, location, day_of_week) values(101, &#39;数据结构&#39;, &#39;张老师&#39;, &#39;周一第1-2节&#39;, &#39;4201&#39;, 1),\n                                                                                 (102, &#39;数据库&#39;, &#39;陈老师&#39;, &#39;周三第1-2节&#39;, &#39;4311&#39;, 3),\n                                                                                 (103, &#39;面向对象程序设计&#39;, &#39;王老师&#39;, &#39;周四第3-4节&#39;, &#39;4403&#39;, 4),\n                                                                                 (104, &#39;C语言程序设计&#39;, &#39;周老师&#39;, &#39;周二第7-8节&#39;, &#39;4402&#39;, 2),\n                                                                                 (105, &#39;高等数学&#39;, &#39;王老师&#39;, &#39;周四第3-4节&#39;, &#39;3201&#39;, 4),\n                                                                                 (106, &#39;大学英语&#39;, &#39;冯老师&#39;, &#39;周一第7-8节&#39;, &#39;3311&#39;, 1),\n                                                                                 (107, &#39;数据结构&#39;, &#39;张老师&#39;, &#39;周三第1-2节&#39;, &#39;4301&#39;, 3),\n                                                                                 (108, &#39;计算机组成原理&#39;, &#39;黄老师&#39;, &#39;周五第5-6节&#39;, &#39;1502&#39;, 5),\n                                                                                 (109, &#39;数字电路&#39;, &#39;王老师&#39;, &#39;周二第1-2节&#39;, &#39;3301&#39;, 2),\n                                                                                 (110, &#39;近代史纲要&#39;, &#39;陈老师&#39;, &#39;周五第5-6节&#39;, &#39;5c501&#39;, 5),\n                                                                                 (111, &#39;离散结构&#39;, &#39;李老师&#39;, &#39;周四第1-2节&#39;, &#39;5a601&#39;, 4);\n\n\n\n\n-- 选课表格\ncreate table enrollments(\n    enrollment_id int unsigned primary key auto_increment comment &#39;主键选课id&#39;,\n    student_id int unsigned not null comment &#39;学生id&#39;,\n    course_id int unsigned not null comment &#39;课程id&#39;,\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n)comment &#39;选课表格&#39;;\n-- 选课表测试数据\ninsert into enrollments(enrollment_id, student_id, course_id) values(1, 1, 101),\n                                                                    (2, 1, 102),\n                                                                    (3, 1, 103),\n                                                                    (4, 1, 106),\n                                                                    (5, 1, 107),\n                                                                    (6, 1, 109),\n                                                                    (7, 2, 101),\n                                                                    (8, 2, 102),\n                                                                    (9, 2, 103),\n                                                                    (10, 2, 106),\n                                                                    (11, 2, 107),\n                                                                    (12, 2, 109),\n                                                                    (13, 3, 103),\n                                                                    (14, 3, 111),\n                                                                    (15, 3, 101),\n                                                                    (16, 3, 107),\n                                                                    (17, 3, 106),\n                                                                    (18, 3, 102),\n                                                                    (19, 4, 104),\n                                                                    (20, 4, 110),\n                                                                    (21, 4, 109),\n                                                                    (22, 4, 108),\n                                                                    (23, 5, 103),\n                                                                    (24, 5, 108),\n                                                                    (25, 5, 109),\n                                                                    (26, 5, 111),\n                                                                    (27, 5, 106);\n\n\n\n\n\n-- 待办表格\ncreate table tasks(\n    task_id int unsigned primary key auto_increment comment &#39;主键任务id&#39;,\n    real_student_id varchar(20) not null comment &#39;学号&#39;,\n    description varchar(100) not null comment &#39;任务描述&#39;,\n    status tinyint(1) not null comment &#39;任务状态&#39;,\n    create_time datetime not null comment &#39;创建时间&#39;,\n    update_time datetime not null comment &#39;更新时间&#39;,\n    FOREIGN KEY (real_student_id) REFERENCES students(real_student_id)\n)comment &#39;待办表格&#39;;\n-- 待办表测试数据\ninsert into tasks(task_id, real_student_id, description, status, create_time, update_time) values (1, &#39;202225220503&#39;, &#39;完成Java实验任务&#39;, 0, now(), now()),\n                                                                                                  (2, &#39;202225220503&#39;, &#39;完成C语言实验任务&#39;, 1, now(), now()),\n                                                                                                  (3, &#39;202225220504&#39;, &#39;完成数据结构课程设计&#39;, 0, now(), now()),\n                                                                                                  (4, &#39;202225220504&#39;, &#39;完成Java实验任务&#39;, 1, now(), now()),\n                                                                                                  (5, &#39;202225220901&#39;, &#39;完成高等数学周末作业&#39;, 0, now(), now()),\n                                                                                                  (6, &#39;202325220904&#39;, &#39;完成大学英语周末作业&#39;, 0, now(), now()),\n                                                                                                  (7, &#39;202225310902&#39;, &#39;完成数据库实验任务&#39;, 1, now(), now()),\n                                                                                                  (8, &#39;202225310902&#39;, &#39;完成Java实验任务&#39;, 0, now(), now());二.接口文档1.课程管理1.1 课程列表查询1.1.1 基本信息​\t\t| 请求路径：&#x2F;courses&#x2F;{realStudentId}\n​        | 请求方式：GET\n​        | 接口描述：该接口用于根据学号进行学生课表数据查询\n1.1.2 请求参数参数格式：路径参数\n参数说明：\n\n\n\n参数名\n类型\n是否必须\n备注\n\n\n\nrealStudentId\nstring\n必须\n学号\n\n\n请求参数样例：\ntxt/courses/2022252205031.1.3响应数据参数格式： application&#x2F;json\n参数说明：\n\n\n\n参数名\n类型\n是否必须\n备注\n\n\n\ncode\nnumber\n必须\n响应码，1代表成功，0代表失败\n\n\nmsg\nstring\n非必须\n提示信息\n\n\ndata\nobject\n非必须\n返回的数据\n\n\n|- courseId\nnumber\n非必须\n课程id\n\n\n|- name\nstring\n非必须\n课程名称\n\n\n|- teacher\nstring\n非必须\n老师名称\n\n\n|- time\nstring\n非必须\n上课时间\n\n\n|- location\nstring\n非必须\n上课地点\n\n\n|- dayOfWeek\nnumber\n非必须\n上课时间是星期几\n\n\n响应数据样例：\ntxt&#123;\n    &quot;code&quot;: 1,\n    &quot;msg&quot;: &quot;success&quot;,\n    &quot;data&quot;: [\n        &#123;\n            &quot;courseId&quot;: 101,\n            &quot;name&quot;: &quot;数据结构&quot;,\n            &quot;teacher&quot;: &quot;张老师&quot;,\n            &quot;time&quot;: &quot;周一第1-2节&quot;,\n            &quot;location&quot;: &quot;4201&quot;,\n            &quot;dayOfWeek&quot;: 1\n        &#125;,\n        &#123;\n            &quot;courseId&quot;: 102,\n            &quot;name&quot;: &quot;数据库&quot;,\n            &quot;teacher&quot;: &quot;陈老师&quot;,\n            &quot;time&quot;: &quot;周三第1-2节&quot;,\n            &quot;location&quot;: &quot;4311&quot;,\n            &quot;dayOfWeek&quot;: 3\n        &#125;,\n        &#123;\n            &quot;courseId&quot;: 103,\n            &quot;name&quot;: &quot;面向对象程序设计&quot;,\n            &quot;teacher&quot;: &quot;王老师&quot;,\n            &quot;time&quot;: &quot;周四第3-4节&quot;,\n            &quot;location&quot;: &quot;4403&quot;,\n            &quot;dayOfWeek&quot;: 4\n        &#125;,\n        &#123;\n            &quot;courseId&quot;: 106,\n            &quot;name&quot;: &quot;大学英语&quot;,\n            &quot;teacher&quot;: &quot;冯老师&quot;,\n            &quot;time&quot;: &quot;周一第7-8节&quot;,\n            &quot;location&quot;: &quot;3311&quot;,\n            &quot;dayOfWeek&quot;: 1\n        &#125;,\n        &#123;\n            &quot;courseId&quot;: 107,\n            &quot;name&quot;: &quot;数据结构&quot;,\n            &quot;teacher&quot;: &quot;张老师&quot;,\n            &quot;time&quot;: &quot;周三第1-2节&quot;,\n            &quot;location&quot;: &quot;4301&quot;,\n            &quot;dayOfWeek&quot;: 3\n        &#125;,\n        &#123;\n            &quot;courseId&quot;: 109,\n            &quot;name&quot;: &quot;数字电路&quot;,\n            &quot;teacher&quot;: &quot;王老师&quot;,\n            &quot;time&quot;: &quot;周二第1-2节&quot;,\n            &quot;location&quot;: &quot;3301&quot;,\n            &quot;dayOfWeek&quot;: 2\n        &#125;\n    ]\n&#125;2.待办管理1.1查询待办1.1.1基本信息​        | 请求路径：&#x2F;tasks&#x2F;{realStudentId}\n​        | 请求方式：GET\n​        | 接口描述：该接口用于根据学号进行待办事项数据查询\n1.1.2请求参数参数格式：路径参数\n参数说明：\n\n\n\n参数名\n类型\n是否必须\n备注\n\n\n\nrealStudentId\nstring\n必须\n学号\n\n\n请求参数样例：\ntxt/tasks/2022252205031.1.3响应数据参数格式： application&#x2F;json\n参数说明：\n\n\n\n参数名\n类型\n是否必须\n备注\n\n\n\ncode\nnumber\n必须\n响应码，1代表成功，0代表失败\n\n\nmsg\nstring\n非必须\n提示信息\n\n\ndata\nobject\n非必须\n返回的数据\n\n\n|- taskId\nnumber\n非必须\n待办id\n\n\n|- description\nstring\n非必须\n待办内容\n\n\n|- status\nnumber\n非必须\n完成状态，0代表未完成，1代表完成\n\n\n|- createTime\nstring\n非必须\n创建时间\n\n\n|- updateTime\nstring\n非必须\n更新时间\n\n\n响应数据样例：\ntxt&#123;\n    &quot;code&quot;: 1,\n    &quot;msg&quot;: &quot;success&quot;,\n    &quot;data&quot;: [\n        &#123;\n            &quot;taskId&quot;: 1,\n            &quot;description&quot;: &quot;完成Java实验任务&quot;,\n            &quot;status&quot;: 0,\n            &quot;createTime&quot;: &quot;2023-11-05T21:36:43&quot;,\n            &quot;updateTime&quot;: &quot;2023-11-05T21:36:43&quot;\n        &#125;,\n        &#123;\n            &quot;taskId&quot;: 2,\n            &quot;description&quot;: &quot;完成C语言实验任务&quot;,\n            &quot;status&quot;: 1,\n            &quot;createTime&quot;: &quot;2023-11-05T21:36:43&quot;,\n            &quot;updateTime&quot;: &quot;2023-11-05T21:36:43&quot;\n        &#125;\n    ]\n&#125;1.2 删除待办1.2.1 基本信息​\t\t| 请求路径： &#x2F;tasks&#x2F;{taskId}\n​        | 请求方式：DELETE\n​        | 接口描述：该接口用于根据待办事项ID删除待办事项数据\n1.2.2 请求参数参数格式：路径参数\n参数说明：\n\n\n\n参数名\n类型\n是否必须\n备注\n\n\n\ntaskId\nnumber\n必须\n待办事项ID\n\n\n请求参数样例：\ntxt/tasks/91.2.3 响应数据参数格式：application&#x2F;json\n参数说明：\n\n\n\n参数名\n类型\n是否必须\n备注\n\n\n\ncode\nnumber\n必须\n响应码，1代表成功，0代表失败\n\n\nmsg\nstring\n非必须\n提示信息\n\n\ndata\nobject\n非必须\n返回的数据\n\n\n响应数据样例：\ntxt&#123;\n    &quot;code&quot;: 1,\n    &quot;msg&quot;: &quot;success&quot;,\n    &quot;data&quot;: null\n&#125;1.3 添加待办1.3.1 基本信息​\t\t| 请求路径： &#x2F;tasks\n​        | 请求方式：POST\n​        | 接口描述：该接口用于添加待办事项数据\n1.3.2 请求参数参数格式：application&#x2F;json\n参数说明：\n\n\n\n参数名\n类型\n是否必须\n备注\n\n\n\nrealStudentId\nstring\n必须\n学号，必须是student表里有的学号\n\n\ndescription\nstring\n必须\n待办事项\n\n\nstatus\nnumber\n必须\n完成状态，0代表未完成，1代表完成\n\n\n请求参数样例：\ntxt&#123;\n   &quot;realStudentId&quot;: &quot;202225220503&quot;,\n   &quot;description&quot;: &quot;完成Java实验任务&quot;,\n   &quot;status&quot;: 0\n&#125;1.3.3 响应数据参数格式：application&#x2F;json\n参数说明：\n\n\n\n参数名\n类型\n是否必须\n备注\n\n\n\ncode\nnumber\n必须\n响应码，1代表成功，0代表失败\n\n\nmsg\nstring\n非必须\n提示信息\n\n\ndata\nobject\n非必须\n返回的数据\n\n\n响应数据样例：\ntxt&#123;\n    &quot;code&quot;: 1,\n    &quot;msg&quot;: &quot;success&quot;,\n    &quot;data&quot;: null\n&#125;1.4 修改待办1.4.1 基本信息​\t\t| 请求路径： &#x2F;tasks&#x2F;{taskId}\n​        | 请求方式：PUT\n​        | 接口描述：该接口用于修改待办事项数据\n1.4.2 请求参数参数格式：application&#x2F;json\n参数说明：\n\n\n\n参数名\n类型\n是否必须\n备注\n\n\n\nrealStudentId\nstring\n必须\n学号，必须是student表里有的学号\n\n\ndescription\nstring\n必须\n待办事项\n\n\nstatus\nnumber\n必须\n完成状态，0代表未完成，1代表完成\n\n\n请求参数样例：\ntxt&#123;\n   &quot;realStudentId&quot;: &quot;202225220503&quot;,\n   &quot;description&quot;: &quot;完成Java实验任务&quot;,\n   &quot;status&quot;: 0\n&#125;,1.4.3 响应数据参数格式：application&#x2F;json\n参数说明：\n\n\n\n参数名\n类型\n是否必须\n备注\n\n\n\ncode\nnumber\n必须\n响应码，1代表成功，0代表失败\n\n\nmsg\nstring\n非必须\n提示信息\n\n\ndata\nobject\n非必须\n返回的数据\n\n\n响应数据样例：\ntxt&#123;\n    &quot;code&quot;: 1,\n    &quot;msg&quot;: &quot;success&quot;,\n    &quot;data&quot;: null\n&#125;3.学生管理3.1 添加学生3.1.1 基本信息​\t\t| 请求路径： &#x2F;students\n​        | 请求方式：POST\n​        | 接口描述：该接口用于添加待办事项数据\n3.1.2 请求参数参数格式：application&#x2F;json\n参数说明：\n\n\n\n参数名\n类型\n是否必须\n备注\n\n\n\nrealStudentId\nstring\n必须\n学号\n\n\nname\nstring\n必须\n学生姓名\n\n\ncollege\nstring\n必须\n学院\n\n\nmajor\nstring\n必须\n专业\n\n\nclassNum\nnumber\n必须\n班级\n\n\ngrade\nnumber\n必须\n年级\n\n\n请求参数样例：\ntxt&#123;\n   &quot;realStudentId&quot;: &quot;202225220505&quot;,\n   &quot;name&quot;: &quot;何泳泳&quot;,\n   &quot;college&quot;: &quot;软件学院&quot;,\n   &quot;major&quot;: &quot;软件工程&quot;,\n   &quot;classNum&quot;: 5,\n   &quot;grade&quot;: 2022\n&#125;3.1.3响应数据参数格式：application&#x2F;json\n参数说明：\n\n\n\n参数名\n类型\n是否必须\n备注\n\n\n\ncode\nnumber\n必须\n响应码，1代表成功，0代表失败\n\n\nmsg\nstring\n非必须\n提示信息\n\n\ndata\nobject\n非必须\n返回的数据\n\n\n响应数据样例：\ntxt&#123;\n    &quot;code&quot;: 1,\n    &quot;msg&quot;: &quot;success&quot;,\n    &quot;data&quot;: null\n&#125;","slug":"基于uni-app框架开发的校园课表微信小程序","date":"2023-11-06T05:28:12.000Z","categories_index":"Blog","tags_index":"学习,Java","author_index":"Fioransh"},{"id":"452d114e7a0301edf39e3da31eb54488","title":"6神，启动！","content":"本文旨在测试博客图片上传功能，为了解决博客上传图片失败问题努力了几个小时后终于发现了问题所在，在hexo中的 hexo-asset-image 图片模块和 hexo-abbrlink 不兼容导致。\n解决方法：在node_modules&#x2F;hexo-asset-image&#x2F;index.js中将代码中的”var endPos &#x3D; link.length - 1”改为”-5”即可解决。\n\n6神，启动！有一说一是真的可爱吧。\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"6神，启动！","date":"2023-09-09T16:00:00.000Z","categories_index":"Blog","tags_index":"黄怡慈","author_index":"Fioransh"},{"id":"bc926e4a66038b5c73c00f3880f05287","title":"响应状态码","content":"一、状态码大类\n\n\n状态码分类\n说明\n\n\n\n1xx\n响应中——临时状态码，表示请求已经接受，告诉客户端应该继续请求或者如果它已经完成则忽略它\n\n\n2xx\n成功——表示请求已经被成功接收，处理已完成\n\n\n3xx\n重定向——重定向到其它地方：它让客户端再发起一个请求以完成整个处理。\n\n\n4xx\n客户端错误——处理发生错误，责任在客户端，如：客户端的请求一个不存在的资源，客户端未被授权，禁止访问等\n\n\n5xx\n服务器端错误——处理发生错误，责任在服务端，如：服务端抛出异常，路由出错，HTTP版本不支持等\n\n\n二、常见的响应状态码\n\n\n状态码\n英文描述\n解释\n\n\n\n&#x3D;&#x3D;200&#x3D;&#x3D;\nOK\n客户端请求成功，即处理成功，这是我们最想看到的状态码\n\n\n302\nFound\n指示所请求的资源已移动到由Location响应头给定的 URL，浏览器会自动重新访问到这个页面\n\n\n304\nNot Modified\n告诉客户端，你请求的资源至上次取得后，服务端并未更改，你直接用你本地缓存吧。隐式重定向\n\n\n400\nBad Request\n客户端请求有语法错误，不能被服务器所理解\n\n\n403\nForbidden\n服务器收到请求，但是拒绝提供服务，比如：没有权限访问相关资源\n\n\n&#x3D;&#x3D;404&#x3D;&#x3D;\nNot Found\n请求资源不存在，一般是URL输入有误，或者网站资源被删除了\n\n\n405\nMethod Not Allowed\n请求方式有误，比如应该用GET请求方式的资源，用了POST\n\n\n428\nPrecondition Required\n服务器要求有条件的请求，告诉客户端要想访问该资源，必须携带特定的请求头\n\n\n429\nToo Many Requests\n指示用户在给定时间内发送了太多请求（“限速”），配合 Retry-After(多长时间后可以请求)响应头一起使用\n\n\n431\n Request Header Fields Too Large\n请求头太大，服务器不愿意处理请求，因为它的头部字段太大。请求可以在减少请求头域的大小后重新提交。\n\n\n&#x3D;&#x3D;500&#x3D;&#x3D;\nInternal Server Error\n服务器发生不可预期的错误。服务器出异常了，赶紧看日志去吧\n\n\n503\nService Unavailable\n服务器尚未准备好处理请求，服务器刚刚启动，还未初始化好\n\n\n状态码大全：https://cloud.tencent.com/developer/chapter/13553 \n","slug":"响应状态码","date":"2023-03-14T05:28:12.000Z","categories_index":"Blog","tags_index":"学习,网络","author_index":"Fioransh"}]