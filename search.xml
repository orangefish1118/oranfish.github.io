<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<hr><p>abbrlink: ‘0’<br>title: 算法性能分析（更新中<br>tags: </p><ul><li>算法</li><li>学习<br>cover: &#x2F;medias&#x2F;11.jpg<br>date: 2024-1-28 22:25:12<br>categories: Blog<br>abstracts: “参考学习代码随想录,进行算法性能分析学习”<br>title: 算法性能分析（更新中…</li></ul><h2 id="1-时间复杂度"><a href="#1-时间复杂度" class="headerlink" title="1.时间复杂度"></a>1.时间复杂度</h2><h3 id="1-1-什么是时间复杂度"><a href="#1-1-什么是时间复杂度" class="headerlink" title="1.1 什么是时间复杂度"></a>1.1 什么是时间复杂度</h3><p><strong>时间复杂度是一个函数，它定性描述该算法的运行时间</strong>。</p><p>通常会估算算法的操作单元数量来代表程序消耗的时间，这里默认CPU的每个单元运行消耗的时间都是相同的。假设算法的问题规模为n，那么操作单元数量便用函数f(n)来表示，随着数据规模n的增大，算法执行时间的增长率和f(n)的增长率相同，这称作为算法的渐近时间复杂度，简称时间复杂度，记为 O(f(n))。</p><h3 id="1-2什么是大O"><a href="#1-2什么是大O" class="headerlink" title="1.2什么是大O"></a>1.2什么是大O</h3><p>算法导论给出的解释：<strong>大O用来表示上界的</strong>，当用它作为算法的最坏情况运行时间的上界，就是对任意数据输入的运行时间的上界。</p><p>快速排序是O(nlogn)，但是当数据已经有序情况下，快速排序的时间复杂度是O(n^2) 的，**所以严格从大O的定义来讲，快速排序的时间复杂度应该是O(n^2)**。</p><p><strong>但是我们依然说快速排序是O(nlogn)的时间复杂度，这个就是业内的一个默认规定，这里说的O代表的就是一般情况，而不是严格的上界</strong>。</p><h3 id="1-3不同数据规模的差异"><a href="#1-3不同数据规模的差异" class="headerlink" title="1.3不同数据规模的差异"></a>1.3不同数据规模的差异</h3><p><strong>大O就是数据量级突破一个点且数据量级非常大的情况下所表现出的时间复杂度，这个数据量也就是常数项系数已经不起决定性作用的数据量</strong>。</p><p><strong>我们说的时间复杂度都是省略常数项系数的，是因为一般情况下都是默认数据规模足够的大，基于这样的事实，给出的算法时间复杂的的一个排行如下所示</strong>：</p><p>O(1)常数阶 &lt; O(logn)对数阶 &lt; O(n)线性阶 &lt; O(nlogn)线性对数阶 &lt; O(n^2)平方阶 &lt; O(n^3)立方阶 &lt; O(2^n)指数阶</p><h3 id="1-4例子"><a href="#1-4例子" class="headerlink" title="1.4例子"></a>1.4例子</h3><p>题目描述：找出n个字符串中相同的两个字符串（假设这里只有两个相同的字符串）。</p><p>1）可能会忽略了字符串比较的时间消耗，这里并不像int 型数字做比较那么简单，除了n^2 次的遍历次数外，字符串比较依然要消耗m次操作（m也就是字母串的长度），所以时间复杂度是O(m × n × n)。</p><p>2）先排对n个字符串按字典序来排序，排序后n个字符串就是有序的，意味着两个相同的字符串就是挨在一起，然后在遍历一遍n个字符串，这样就找到两个相同的字符串了。</p><p>那看看这种算法的时间复杂度，快速排序时间复杂度为O(nlogn)，依然要考虑字符串的长度是m，那么快速排序每次的比较都要有m次的字符比较的操作，就是O(m × n × log n) 。</p><p>之后还要遍历一遍这n个字符串找出两个相同的字符串，别忘了遍历的时候依然要比较字符串，所以总共的时间复杂度是 O(m × n × logn + n × m)。</p><p>我们对O(m × n × log n + n × m) 进行简化操作，把m × n提取出来变成 O(m × n × (logn + 1))，再省略常数项最后的时间复杂度是 O(m × n × log n)。</p><p>ps：例子仅用于讲解示范时间复杂度。</p><p>参考学习自<a href="https://programmercarl.com/">代码随想录</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+gitee博客搭建流程</title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>本博客只是讲述安装流程，并不是纯面向小白的安装教程，在b站上有许多hexo的安装教程视频，可以参考b站教程进行安装。Hexo可以算是入门门槛最低的一种博客搭建手段了。这篇博客只是防止我以后忘记安装流程而编写，安装如遇到问题可以wx交流一下，不保证能解决。搭建环境开发项目是一件需要耐心的事情，可能会遇到各种各样的问题，要学会灵活网络搜索，你遇到的问题基本上都能解决，保持耐心，说不定马上你的问题就迎刃而解了。</p><hr><h2 id="1-node-js的安装和环境配置"><a href="#1-node-js的安装和环境配置" class="headerlink" title="1.node js的安装和环境配置"></a>1.node js的安装和环境配置</h2><p>（由Ryan Dahl开发，是一个基于<a href="https://baike.baidu.com/item/chrome">Chrome</a><a href="https://baike.baidu.com/item/v8">V8</a>引擎的<a href="https://baike.baidu.com/item/JavaScript/321142">JavaScript</a>运行环境，</p><p>使用了一个事件驱动、非阻塞式I&#x2F;O模型，让JavaScript 运行在服务端的开发平台，</p><p>它让JavaScript成为与<a href="https://baike.baidu.com/item/php">PHP</a>、<a href="https://baike.baidu.com/item/Python">Python</a>、<a href="https://baike.baidu.com/item/perl">Perl</a>、<a href="https://baike.baidu.com/item/Ruby">Ruby</a>等服务端语言平起平坐的<a href="https://baike.baidu.com/item/%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80">脚本语言</a></p><details><summary><font size="5"><b>node 安装过程截图</b></font></summary><img src="/posts/0/node.jpg"><img src="/posts/0/node2.png"><img src="/posts/0/node5-1.jpg"> </details><p><strong>安装可以无脑下一步</strong>，注意安装路径就行，不会有问题，如果不放心的话可以参考原文章的安装过程截图，有详细步骤，由于本文篇幅较长，这里就不再转载了。</p><h3 id="1-1-测试是否安装成功"><a href="#1-1-测试是否安装成功" class="headerlink" title="1.1 测试是否安装成功"></a>1.1 测试是否安装成功</h3><p><code>node -v</code></p><p><code>npm -v</code></p><p><strong>成功截图如下</strong>：<img src="/posts/0/node&npm.png" alt="1"></p><p>解决npm查询不到版本号，方法一：<a href="https://past-taleggio-288.notion.site/node-24b6cf34d5c24186b7ef1ea7028b7fda">https://past-taleggio-288.notion.site/node-24b6cf34d5c24186b7ef1ea7028b7fda</a></p><h3 id="1-2-配置环境变量"><a href="#1-2-配置环境变量" class="headerlink" title="1.2 配置环境变量"></a>1.2 配置环境变量</h3><details><summary><font size="5"><b>详细截图</b></font></summary>在刚才安装nodejs的根目录下，创建node_global，node_cache文件夹<br><img src="/posts/0/node_deploy1.png"><br>以管理员身份打开cmd，配置路径<br><p>`npm config set prefix "E:\develop\nodejs\node_global"`</p><p>`npm config set cache "E:\develop\nodejs\node_cache"`</p>修改全局路径 node_global, 修改缓存路径 node_cache<br><b>内路径需要根据自己实际情况来进行修改</b><br><b>修改全局安装路径后，需要在系统环境变量Path中添加该路径，否则之后使用npm install –global xxx，xxx都报错找不到命令。</b><br> 找到电脑环境配置 <br> win10和win11：右键此电脑-属性-高级系统设置-高级-环境变量<br>win11 还可以：点设置-系统-关于-高级系统设置-高级-环境变量<br><img src="/posts/0/environment1.png"><br>完成以上操作后，在用户变量中创建NODE_PATH变量，变量值为node_modeules路径地址<img src="/posts/0/environment2.png"><br>在系统变量中选择Path添加如下属性：<img src="/posts/0/environment3.png"><br></details><h2 id="2-安装git"><a href="#2-安装git" class="headerlink" title="2.安装git"></a>2.安装git</h2><h3 id="2-1-下载git"><a href="#2-1-下载git" class="headerlink" title="2.1 下载git"></a>2.1 下载git</h3><p>官网<a href="https://git-scm.com/">https://git-scm.com/</a></p><p>找到首页下方的Downloads</p><p>下载对应系统（MAC、Windows、Linux&#x2F;Unix）安装包</p><p><img src="/posts/0/git_downloads.png" alt="git_downloads"></p><h3 id="2-2-安装git"><a href="#2-2-安装git" class="headerlink" title="2.2 安装git"></a>2.2 安装git</h3><details><summary><font size="5"><b>安装git过程</b></font></summary><img src="/posts/0/{51D5EE5D-49F2-4151-80CB-A2581ED1DED3}.png"><br><img src="/posts/0/{C6E6D133-E25A-4e1e-B095-62B66BC1D994}.png"><br><img src="/posts/0/{C9094AA4-D4AB-42a3-BBFB-B54D3D1DE21F}.png"><br><img src="/posts/0/{B5212BB6-71B9-44e8-AC17-245DE8ED861C}.png"><br><img src="/posts/0/{EBE09308-C1B5-4093-A1B9-9141192F04E3}.png"><br><img src="/posts/0/{CE53F588-61C3-48a3-84A6-4FA58C5361C1}.png"><br></details><h2 id="3-hexo下载"><a href="#3-hexo下载" class="headerlink" title="3.hexo下载"></a>3.hexo下载</h2><p><code>npm install hexo-cli -g #安装hexo</code></p><h2 id="4-检查已安装各框架的版本"><a href="#4-检查已安装各框架的版本" class="headerlink" title="4.检查已安装各框架的版本"></a>4.检查已安装各框架的版本</h2><p><strong>git</strong>：</p><p><code>git --version</code></p><p><strong>hexo</strong>:</p><p><code>hexo -v</code></p><p><strong>安装成功效果</strong></p><p><img src="/posts/0/edition.jpg" alt="edition"></p><h2 id="5-创建仓库及配置SSH连接"><a href="#5-创建仓库及配置SSH连接" class="headerlink" title="5.创建仓库及配置SSH连接"></a>5.创建仓库及配置SSH连接</h2><h3 id="5-1-创建gitee仓库（github同理）"><a href="#5-1-创建gitee仓库（github同理）" class="headerlink" title="5.1  创建gitee仓库（github同理）"></a>5.1  创建gitee仓库（github同理）</h3><p>利用gitee仓库，存放静态网站资源，达到挂载网站的目的</p><p><img src="/posts/0/%7B203AB318-6AE2-47b6-B9BC-95E6688E139E%7D.png" alt="{203AB318-6AE2-47b6-B9BC-95E6688E139E}"></p><p>需要注意的是作为网站访问的这个仓库，仓库名称一定是，<strong>拥有者名+gitee.io</strong></p><h3 id="5-2-生成ssh-keys"><a href="#5-2-生成ssh-keys" class="headerlink" title="5.2  生成ssh keys"></a>5.2  生成ssh keys</h3><p>在博客文件夹根目录下，右键，调用<strong>git bash here</strong>功能</p><p><img src="/posts/0/ssh-1.png" alt="ssh-1"></p><p>先输入<code>ssh</code><br>查看是否已经安装<code>ssh</code>，git默认有安装</p><p>本地生成<strong>ssh keys</strong></p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">ssh-keygen -t rsa -C &quot;邮箱地址&quot;</span></span></code></pre></div><p><img src="/posts/0/ssh-2.png" alt="ssh-2"></p><p><strong>在本地电脑中找到.ssh文件夹</strong></p><p><img src="/posts/0/ssh-3.png" alt="ssh-3"></p><p>一般默认都是，C:\Users\用户名.ssh.pub文件</p><p>找到秘钥的位置，并用记事本打开**.pub文件**，复制其内容 (<code>ctrl+a</code>全选，<code>ctrl+c</code>复制，<code>ctrl+v</code>粘贴)</p><p>打开gitee，头像下拉选项设置，找到SSH公钥（新建ssh秘钥）</p><p><img src="/posts/0/%7BC3E82722-4B79-4d2f-9D53-3C5009A8F337%7D.png" alt="{C3E82722-4B79-4d2f-9D53-3C5009A8F337}"></p><p>把在本地生成的秘钥内容粘贴至此秘钥处，标题可以随便取。</p><p>测试ssh是否绑定成功（在git里操作）</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">ssh -T git@gitee.com</span></span></code></pre></div><p><img src="/posts/0/ssh-6.png" alt="ssh-6"></p><p>如果问你（yes or no），直接yes就可以得到上面这段话</p><h2 id="6-搭建本地博客"><a href="#6-搭建本地博客" class="headerlink" title="6.搭建本地博客"></a>6.搭建本地博客</h2><p>创建一个放置博客文件夹的文件，在里面启用<strong>Git Bash Here</strong></p><p><img src="/posts/0/hexo-1.png" alt="hexo-1"></p><p><strong>初始化hexo</strong></p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">hexo init</span></span></code></pre></div><p><img src="/posts/0/hexo-2.png" alt="hexo-2"></p><ul><li><strong>生成hexo本地页面</strong></li></ul><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">hexo s</span></span></code></pre></div><p><img src="/posts/0/hexo-3.png" alt="hexo-3"></p><ul><li><strong>复制粘贴该地址到浏览器中，即可访问本地搭建的博客</strong> <a href="http://localhost:4000/">http://localhost:4000</a></li></ul><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">hexo cl #clean #清理编译文件</span></span><span class="line"><span style="color: #babed8">hexo g #generate #编译项目</span></span><span class="line"><span style="color: #babed8">hexo s #server #本地预览运行项目</span></span></code></pre></div><h2 id="7-上传本地博客至gitee"><a href="#7-上传本地博客至gitee" class="headerlink" title="7.上传本地博客至gitee"></a>7.上传本地博客至gitee</h2><h3 id="7-1-修改配置文件"><a href="#7-1-修改配置文件" class="headerlink" title="7.1 修改配置文件"></a>7.1 修改配置文件</h3><p>在创建博客文件夹的根目录下修改-config.yml文件</p><p><img src="/posts/0/yml-1.png" alt="yml-1"></p><p><img src="/posts/0/yml-2.png" alt="yml-2"></p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">deploy:  </span></span><span class="line"><span style="color: #babed8">   type: git  </span></span><span class="line"><span style="color: #babed8">   repository: 你的gitee地址  </span></span><span class="line"><span style="color: #babed8">   branch: main</span></span></code></pre></div><h3 id="7-2-安装hexo-deployer-git-自动部署发布工具"><a href="#7-2-安装hexo-deployer-git-自动部署发布工具" class="headerlink" title="7.2 安装hexo-deployer-git 自动部署发布工具"></a>7.2 安装hexo-deployer-git 自动部署发布工具</h3><p><img src="/posts/0/hexo-d-1.png" alt="hexo-d-1"></p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">npm install hexo-deployer-git --save</span></span></code></pre></div><h3 id="7-3-编译文件生成界面"><a href="#7-3-编译文件生成界面" class="headerlink" title="7.3  编译文件生成界面"></a>7.3  编译文件生成界面</h3><p><img src="/posts/0/%7B6A46E6F6-29CC-40da-99D8-8196376EA195%7D.png" alt="{6A46E6F6-29CC-40da-99D8-8196376EA195}"></p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">hexo g</span></span></code></pre></div><h3 id="7-4-本地文件上传到Gitee"><a href="#7-4-本地文件上传到Gitee" class="headerlink" title="7.4  本地文件上传到Gitee"></a>7.4  本地文件上传到Gitee</h3><p><img src="/posts/0/hexo-d-2.png" alt="hexo-d-2"></p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">hexo d</span></span></code></pre></div><p>成功后</p><p><img src="/posts/0/ok-1.bmp" alt="ok-1"></p><p>可以直接访问仓库名如:</p><p> <a href="https://xxx.gitee.io/">https://xxx.gitee.io</a></p><p><img src="/posts/0/ok-2.png" alt="ok-2"></p><p>出现如图画面，恭喜你完成了hexo的博客搭建。</p><h2 id="8-安装Aurora主题"><a href="#8-安装Aurora主题" class="headerlink" title="8.安装Aurora主题"></a>8.安装Aurora主题</h2><p><strong>本步骤非必须，可以在<a href="https://hexo.io/">hexo的官方网站</a>寻找自己喜欢的主题进行安装，安装流程大致相似，每个主题也可能有自己独特的地方需要设置，具体参照对应主题自己的官方文档进行参考</strong></p><p>Aurora官方文档参考：<a href="https://aurora.tridiamond.tech/zh/guide">https://aurora.tridiamond.tech/zh/guide</a></p><p>建议直接参照官方文档进行设置，官方文档更加详细。</p><h3 id="8-1-配置"><a href="#8-1-配置" class="headerlink" title="8.1  配置"></a>8.1  配置</h3><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">npm install hexo-theme-aurora --save #进入hexo初始化目录用git执行</span></span></code></pre></div><p><img src="/posts/0/aurora-1.png" alt="aurora-1"></p><p>安装好之后，我们需要自己创建一个配置文件。</p><p>我们可以到 node_modules文件夹 下找到 hexo-theme-aurora文件夹。</p><p>里面将_config.yml 复制一份 F2 重命名为_config.aurora.yml</p><p><img src="/posts/0/aurora-01.png" alt="aurora-01"></p><p>然后将 _config.aurora.yml 移动到你的博客根目录下</p><p><img src="/posts/0/%7B206D60BF-F48A-4004-B24E-34464E0254DE%7D.png" alt="{206D60BF-F48A-4004-B24E-34464E0254DE}"></p><h3 id="8-2-修改配置"><a href="#8-2-修改配置" class="headerlink" title="8.2 修改配置"></a>8.2 修改配置</h3><p>打开_comfig.yml</p><p>由默认主题改为<strong>Aurora</strong></p><p><img src="/posts/0/aurora-4.png" alt="aurora-4"></p><p>由于Aurora是vue3项目</p><p>打开根目录下的_config.yml</p><p>修改路由方式</p><p><img src="/posts/0/aurora-5.png" alt="aurora-5"></p><p>运行</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">hexo clean &amp; hexo g &amp; hexo server</span></span></code></pre></div><p>我的习惯是分开来：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">hexo cl</span></span><span class="line"><span style="color: #babed8">hexo g</span></span><span class="line"><span style="color: #babed8">hexo s</span></span></code></pre></div><p><img src="/posts/0/aurora-6.png" alt="aurora-6"></p><h3 id="8-3-上传并覆盖gitee仓库"><a href="#8-3-上传并覆盖gitee仓库" class="headerlink" title="8.3 上传并覆盖gitee仓库"></a>8.3 上传并覆盖gitee仓库</h3><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">hexo d</span></span></code></pre></div><p>可以使用</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">hexo s</span></span></code></pre></div><p>进行本地预览</p><p>打开你的Gitee网页地址，比如<a href="https://orangefish-cyc.gitee.io/">本博客</a>主题配置成功</p><h2 id="9-博客参考"><a href="#9-博客参考" class="headerlink" title="9.博客参考"></a>9.博客参考</h2><p>[搭建博客-图文教程-Luiyang](<a href="https://luiyang08.github.io/post/Build">https://luiyang08.github.io/post/Build</a> Blog)</p><p><a href="https://blog.sxlz.org/post/hexo-aurora-github%E6%90%AD%E5%BB%BA">hexo+aurora+github搭建-叁鄉浪子</a></p><p><a href="https://hexo.io/zh-cn/docs/">hexo官方文档</a></p><p><a href="https://aurora.tridiamond.tech/cn/guide/getting-started.html">Aurora官方文档</a></p><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>搭建完成后的文章编写也会有许多的问题，后续有空再写一下关于文章编写的问题吧，以及一些aurora主题的各种自定义样式修改例如网站图标，个人头像，文章头图等，各类组件的开关安装，编写博客实在需要很多时间，可以网上搜索参考官方文档和他人的教程，这些问题都能得到解决，最重要的是有坚持不懈的心。</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCAU2023CSAPP期末知识点总结</title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<h2 id="CSAPP知识点"><a href="#CSAPP知识点" class="headerlink" title="CSAPP知识点"></a>CSAPP知识点</h2><ol><li><p>进制数转换：十进制转二进制、二进制转十进制、十进制转十六进制、十六进制转十进制、二进制转十六进制、十六进制转二进制。</p></li><li><p>布尔运算：&amp;与（0&amp;0&#x3D;0 0&amp;1&#x3D;0 1&amp;1&#x3D;1） |或（0|0&#x3D;0 0|1&#x3D;1 1|1&#x3D;1）~非（取反）^异或（0^0&#x3D;0 0^1&#x3D;1 1^1&#x3D;0）</p></li><li><p>位及运算：获取最低有效字节的值（&amp;0xFF）</p></li><li><p>逻辑运算（&amp;&amp; || ！）：非0参数都位true（0x01）、参数0表示false(0x00)<img src="/posts/0/image-20231231142847904.png" alt="image-20231231142847904"></p></li><li><p>移位运算：左移（丢弃左位在最右端补0）逻辑右移（丢弃右位在最左端补0）算数右移（最高位等于0时候与逻辑右移一样、最高位等于1时则是在最高位补1）有符号数为算数右移、无符号数为逻辑右移。</p></li><li><p>映射(B2U)有符号数无符号数的编码方式：<img src="/posts/0/image-20231229224849495.png" alt="image-20231229224849495"><img src="/posts/0/image-20231229224936181.png" alt="image-20231229224936181"></p></li><li><p>补码编码映射(B2T)：<img src="/posts/0/image-20231229225343729.png" alt="image-20231229225343729"></p></li><li><p>有符号数和无符号数的转换：位模式不变、解释位的方式变化。<img src="/posts/0/image-20231229230022395.png" alt="image-20231229230022395"></p></li><li><p>强制类型转换、影响关系运算的结果：程序运行有符号数会强转成无符号数运算。较大数据类型转较小会损失。</p></li><li><p>无符号数的转换更大数据类型-扩展：无符号数末尾带有U<img src="/posts/0/image-20231229230424810.png" alt="image-20231229230424810"></p></li><li><p>有符号数的转换更大数据类型-扩展：<img src="/posts/0/image-20231229230510034.png" alt="image-20231229230510034"><img src="/posts/0/image-20231229230541611.png" alt="image-20231229230541611"></p></li><li><p>截断的基本规则：<img src="/posts/0/image-20231229230703918.png" alt="image-20231229230703918"><img src="/posts/0/image-20231229230959005.png" alt="image-20231229230959005"><img src="/posts/0/image-20231229231009760.png" alt="image-20231229231009760"></p></li><li><p>无符号数加法：<img src="/posts/0/image-20231229231207996.png" alt="image-20231229231207996"></p></li><li><p>有符号数加法：<img src="/posts/0/image-20231229231422676.png" alt="image-20231229231422676"></p></li><li><p>补码的加法：<img src="/posts/0/image-20231229231808426.png"></p></li><li><p>使用移位、加法运算的组合代表乘以常数因子：除法无法除尽时候会向0方向舍入、除法为右移<img src="/posts/0/image-20231229232537896.png" alt="image-20231229232537896"></p></li><li><p>浮点数的权重：<img src="/posts/0/image-20231230181622574.png" alt="image-20231230181622574"></p></li><li><p>浮点数格式（符号、阶码、尾数）：符号位s（为0时为正数、为1时为负数）阶码exp、尾数M与frac相关<img src="/posts/0/image-20231230181842487.png" alt="image-20231230181842487"></p></li><li><p>浮点数规格化的值、非规格化的值、特殊值：阶码exp决定了这个数是哪一类<img src="/posts/0/image-20231230182004657.png" alt="image-20231230182004657"><img src="/posts/0/CSAPP%E7%9F%A5%E8%AF%86%E7%82%B9%5Cimage-20231230182010253.png" alt="image-20231230182010253"><img src="/posts/0/image-20231230182024020.png" alt="image-20231230182024020"><img src="/posts/0/CSAPP%E7%9F%A5%E8%AF%86%E7%82%B9%5Cimage-20231230182030206.png" alt="image-20231230182030206"><img src="/posts/0/image-20231230182051725.png" alt="image-20231230182051725"></p></li><li><p>规格化的值和非规格化的值：阶码域全为0的时候E&#x3D;1-bias。M&#x3D;f。<img src="/posts/0/image-20231230182232580.png" alt="image-20231230182232580"><img src="/posts/0/image-20231230182252618.png" alt="image-20231230182252618"><img src="/posts/0/image-20231230182348270.png" alt="image-20231230182348270"><img src="/posts/0/image-20231231162411155.png" alt="image-20231231162411155"><img src="/posts/0/image-20231231162434945.png" alt="image-20231231162434945"></p></li><li><p>单精度浮点数的二进制表示：<img src="/posts/0/image-20231230182445201.png" alt="image-20231230182445201"></p></li><li><p>向上舍入、向下舍入、向0舍入、向偶数舍入：<img src="/posts/0/image-20231230182529726.png" alt="image-20231230182529726"><img src="/posts/0/image-20231230182559083.png" alt="image-20231230182559083"><img src="/posts/0/image-20231230182631677.png" alt="image-20231230182631677"><img src="/posts/0/CSAPP%E7%9F%A5%E8%AF%86%E7%82%B9%5Cimage-20231230182711496.png" alt="image-20231230182711496"></p></li><li><p>int转化为float不会溢出可能会被舍入、int&#x2F;float转化为double可以保留、double转化为float类型可能会发生溢出转换后可能被舍入、float&#x2F;double转化为int可能向0舍入也可能溢出。</p></li><li><p>操作数的寄存器：<img src="/posts/0/image-20231230183049058.png" alt="image-20231230183049058"><img src="/posts/0/image-20231230183320641.png" alt="image-20231230183320641"><img src="/posts/0/image-20231230183330717.png" alt="image-20231230183330717"></p></li><li><p>操作码和操作数以及内存引用：立即数用$表示、内存引用需要加上括号<img src="/posts/0/image-20231230183421375.png" alt="image-20231230183421375"></p></li><li><p>操作数：<img src="/posts/0/image-20231230183924532.png" alt="image-20231230183924532"><img src="/posts/0/image-20231230183948153.png" alt="image-20231230183948153"></p></li><li><p>汇编后缀表示：<img src="/posts/0/image-20231230183202158.png" alt="image-20231230183202158"></p></li><li><p>数据传送指令mov：后缀不同操作的数大小不同，当movq指令的源操作数为立即数时、该立即数只能是32位的补码表示、然后对该数值进行符号位扩展后、讲得到的64位数传送。<img src="/posts/0/image-20231230184023893.png" alt="image-20231230184023893"><img src="/posts/0/image-20231230184051204.png" alt="image-20231230184051204"><img src="/posts/0/image-20231230184343430.png" alt="image-20231230184343430"><img src="/posts/0/image-20231230184432087.png" alt="image-20231230184432087"></p></li><li><p>压入和弹出栈：<img src="/posts/0/image-20231230184746749.png" alt="image-20231230184746749"></p></li><li><p>算数和逻辑指令leaq：<img src="/posts/0/image-20231230184915042.png" alt="image-20231230184915042"></p></li><li><p>通过leaq指令实现算术运算：<img src="/posts/0/image-20231230184958915.png" alt="image-20231230184958915"><img src="/posts/0/image-20231230185611222.png" alt="image-20231230185611222"></p></li><li><p>一元操作：<img src="/posts/0/image-20231230185026113.png" alt="image-20231230185026113"></p></li><li><p>二元操作：<img src="/posts/0/image-20231230185042859.png" alt="image-20231230185042859"><img src="/posts/0/image-20231230185433997.png" alt="image-20231230185433997"></p></li><li><p>移位运算：<img src="/posts/0/image-20231230185456972.png" alt="image-20231230185456972"></p></li><li><p>其他运算：<img src="/posts/0/image-20231230185640650.png" alt="image-20231230185640650"></p></li><li><p>常用条件码：CF-进位标志，当CPU最近执行的一条指令最高位产生了进位时，CF会被置1，可以用来检查无符号数的溢出。ZF-零标志，当最近操作的结果为0时，零标志会被置1。SF-符号标志，当最近的操作结果小于0的时候，符号标志会被置1。OF-溢出标志，最近的操作导致正溢出或负溢出时候会被置1。</p></li><li><p>cmp指令和test指令：<img src="/posts/0/image-20231230190435637.png" alt="image-20231230190435637"><img src="/posts/0/image-20231230190243370.png" alt="image-20231230190243370"><img src="/posts/0/image-20231230190253321.png" alt="image-20231230190253321"><img src="/posts/0/image-20231230190306501.png" alt="image-20231230190306501"><img src="/posts/0/image-20231230190333468.png" alt="image-20231230190333468"><img src="/posts/0/image-20231230190518671.png" alt="image-20231230190518671"></p></li><li><p>条件控制分支if-else以及条件传送：<img src="/posts/0/image-20231230190616651.png" alt="image-20231230190616651"><img src="/posts/0/image-20231230190631968.png" alt="image-20231230190631968"><img src="/posts/0/image-20231230190657506.png" alt="image-20231230190657506"><img src="/posts/0/image-20231230190709521.png" alt="image-20231230190709521"><img src="/posts/0/image-20231230190741192.png" alt="image-20231230190741192"></p></li><li><p>循环指令：循环语句是通过条件测试与跳转的结合来实现的。<img src="/posts/0/image-20231230190840109.png" alt="image-20231230190840109"><img src="/posts/0/image-20231230190909938.png" alt="image-20231230190909938"><img src="/posts/0/image-20231230190922352.png" alt="image-20231230190922352"></p></li><li><p>switch语句：<img src="/posts/0/image-20231230191117390.png" alt="image-20231230191117390"><img src="/posts/0/image-20231230191126080.png" alt="image-20231230191126080"><img src="/posts/0/image-20231230191145052.png"><img src="/posts/0/image-20231230191223681.png" alt="image-20231230191223681"><img src="/posts/0/image-20231230191228563.png" alt="image-20231230191228563"></p></li><li><p>理解过程，理解“过程 P 调用过程 Q，Q 执行后返回到 P”包含的三个机制（传递控制、</p><p>传递数据、分配和释放内存）：<img src="/posts/0/image-20231230192713527.png" alt="image-20231230192713527"></p><p>栈帧：当函数执行所需要的存储空间超出寄存器能够存放的大小时，会借助栈上的存储空间，这部分存储空间就叫做栈帧。</p><p>对于函数P调用函数Q的例子，包括较早的帧、调用函数P的帧、还要正在执行函数Q的帧。<img src="/posts/0/image-20231230193048269.png" alt="image-20231230193048269"></p><p>当函数P调用函数Q时，会把返回地址压入栈中，该地址殖知名了函数Q执行结束返回时要从函数P的哪个位置继续进行。这个返回地址的压栈操作并不是由指令push来执行的，而是由函数调用指令call实现的。<img src="/posts/0/image-20231230193632124.png" alt="image-20231230193632124"></p></li><li><p>数组的分配与访问： short数组2个字节、int数组4个字节、double数组8个字节、指针数组8个字节<img src="/posts/0/image-20231230202311482.png" alt="image-20231230202311482"><img src="/posts/0/image-20231230202617125.png" alt="image-20231230202617125"></p><p>二维数组（嵌套数组）：Xd表示数组的起始地址、L表示数组T的大小、Cij都是常数。<img src="/posts/0/image-20231230203134301.png" alt="image-20231230203134301"></p></li><li><p>理解内存越界的引用和缓冲区溢出：缓冲区溢出会导致返回时会随机返回到系统的任意位置。对抗缓冲区溢出攻击的方法：栈随机化（ASLR 栈的位置在每次运行时地址都变化）、栈破坏检测（在缓冲区与栈保存的状态值之间存储一个特殊值，这个值被称为金丝雀值、检测金丝雀值是否变化判断是否遭受攻击）、限制可执行代码区域。</p></li><li><p>消除循环的低效率：CPE表示每个元素执行所需要的周期数（度量效率）。比较操作和分支操作不直接影响程序的数据流，将两个操作以及寄存器rax删除，只保留循环寄存器以及关键操作。将这个视作一个模板重复n次。<img src="/posts/0/image-20231230210532940.png" alt="image-20231230210532940"><img src="/posts/0/image-20231230210739863.png" alt="image-20231230210739863"></p></li><li><p>减少过程调用（循环展开）：多路并行，10路时接近吞吐界限。</p></li><li><p>消除不必要的内存引用（加载操作延迟）：加载操作会受存储引用和计算影响。</p></li><li><p>动态RAM（DRAM）： 电容充电维持信息存储、每个bit位的存储对应一个电容和晶体管，对干扰十分敏感，内存采用DRAM，不断刷新才能保持数据，使用超单元一词来表示DRAM的存储单元，可以通过类似坐标的方式寻址，寻址所需位数关系2的n次方等于行数&#x2F;列数，n即为寻址位数。<img src="/posts/0/image-20231230212710024.png" alt="image-20231230212710024"><img src="/posts/0/image-20231230212823195.png" alt="image-20231230212823195"></p></li><li><p>磁盘容量和磁盘访问时间的计算：<img src="/posts/0/image-20231231204301009.png" alt="image-20231231204301009"><img src="/posts/0/image-20231230214234653.png" alt="image-20231230214234653"><img src="/posts/0/image-20231230214350043.png" alt="image-20231230214350043"></p></li><li><p>局部性（时间局部性、空间局部性）：时间局部性（被引用的内存位置在不远的将来还可能被多次引用）、空间局部性（一个内存被引用了一次，程序很可能在不远的将来引用附近的一个内存位置）如两层嵌套的循环遍历二重数组的例子。</p></li><li><p>高速缓存的参数：基于SRAM，有效位（valid 长1bit 表示当前cache line存储的信息是否有效 1表示有效0表示无效）、标记（tag 确定目标数据是否存在于当前的cache line中） 、数据块（cache block一小部分内存数据的副本，大小用B表示）<img src="/posts/0/image-20231230221622544.png" alt="image-20231230221622544"><img src="/posts/0/image-20231231212238903.png" alt="image-20231231212238903"></p></li><li><p>高速缓存的三种地址的映射方式：根据每个set所包含的cache line的行数不同，cache被分为不同的类。</p><p>直接缓存（E&#x3D;1 组选择<img src="/posts/0/image-20231230222138879.png" alt="image-20231230222138879"> 行匹配<img src="/posts/0/image-20231230222217927.png" alt="image-20231230222217927"> 字抽取 根据偏移量来确定目标数据的确切位置，从什么位置开始抽取数据 命中：<img src="/posts/0/image-20231230222309859.png" alt="image-20231230222309859">不命中：cache需要从存储器层次结构的下一层取出被请求的块)</p><p>例子：S表示有几个set、E表示每个set有几行、B表示每个数据块包含几个字节、其中地址m是多少位<img src="/posts/0/image-20231230222441061.png" alt="image-20231230222441061"></p><p>组相联（E&#x3D;2）：字抽取不命中（随机替换、最不常使用、最近最少使用）<img src="/posts/0/image-20231230223300375.png" alt="image-20231230223300375"></p><p>全相联（E&#x3D;C&#x2F;B）：<img src="/posts/0/image-20231230223232884.png" alt="image-20231230223232884"></p></li><li><p>编写高速缓存友好代码：<img src="/posts/0/image-20231230223616995.png" alt="image-20231230223616995"></p></li><li><p>理解符号类型和符号解析：全局符号（由该模块定义、同时能被其他模块引用的全局符号）、外部符号（被其他模块定义、同时被该模块引用的全局符号）、局部符号（只能被该模块定义和引用的局部符号 static）<img src="/posts/0/image-20240102184035977.png" alt="image-20240102184035977"></p><p>COMMON是未初始化的全局变量，注意和.bss区分<img src="/posts/0/image-20240102171724014.png" alt="image-20240102171724014"><img src="/posts/0/image-20240102171716051.png" alt="image-20240102171716051"><img src="/posts/0/image-20240102172429048.png" alt="image-20240102172429048"></p></li><li><p>强符号和弱符号：强符号（函数和已初始化的全局变量  连接器不允许有多个同名的强符号一起出现）、弱符号（未初始化的全局变量）。</p></li><li><p>重定位：重定位条目（告诉链接器在合成可执行文件时候应该如何修改这个引用）链接器合并输入模块，并为每个符号分配运行时地址<img src="/posts/0/image-20231230232108230.png" alt="image-20231230232108230"><img src="/posts/0/image-20231230230935813.png" alt="image-20231230230935813"></p><p>重定位相对引用<img src="/posts/0/image-20231230232653038.png" alt="image-20231230232653038"><img src="/posts/0/image-20231230232425883.png" alt="image-20231230232425883"><img src="/posts/0/image-20231230232521426.png" alt="image-20231230232521426"></p><p>绝对地址引用<img src="/posts/0/image-20231230232601746.png" alt="image-20231230232601746"><img src="/posts/0/image-20231230232608217.png" alt="image-20231230232608217"><img src="/posts/0/image-20231230232628696.png" alt="image-20231230232628696"></p></li><li><p>异常控制流的分类：中断（异步）、陷阱、故障和终止<img src="/posts/0/image-20231231103554346.png" alt="image-20231231103554346"></p></li><li><p>并发流：一个逻辑流的执行在时间上和另一个流重叠的情况成为并发流，两个流的执行被成为并发运行。（并行是两个进程在不同的处理器核上同时运行）并发是交替运行的，并行是同时运行的。</p></li><li><p>进程的状态<img src="/posts/0/image-20231231125806624.png" alt="image-20231231125806624"></p></li><li><p>进程的创建：创建进程时使用的系统函数-fork。父进程调用fork函数创建一个子进程。fork函数一次调用返回两次。父进程和子进程二者并发执行，它们的输出结果都打印出来。<img src="/posts/0/image-20231231125849393.png" alt="image-20231231125849393"><img src="/posts/0/image-20231231130005986.png" alt="image-20231231130005986"><img src="/posts/0/image-20231231130355291.png" alt="image-20231231130355291"></p></li><li><p>函数execve：调用加载器，在执行可执行程序的main函数之前。<img src="/posts/0/image-20231231130510239.png" alt="image-20231231130510239"></p></li><li><p>zombie僵死进程：终止运行但是还未回收的进程称为僵死进程，仍在消耗内存。</p></li><li><p>子进程的回收：父进程通过函数waitpid来等待它的子进程终止或者停止。当第一个参数pid等于0表示等待的进程是一个单独的子进程，pid&#x3D;-1表示等待的进程是由父进程创建的所有子进程组成的集合。statusp是非空，函数waitpid在status上放上导致返回的子进程的状态信息，status就是statusp的值。正常回收返回true，否则未false。</p></li><li><p>信号所引发事件：<img src="/posts/0/image-20231231131827546.png" alt="image-20231231131827546"></p></li><li><p>进程组的概念：每个进程都只属于一个进程组，每个进程组都有自己的ID值来唯一标识，通过函数getpgrp来获取当前进程所属的进程组ID值。setpgrp可以进行更改ID</p></li><li><p>发送信号的方式：<img src="/posts/0/image-20231231131956601.png" alt="image-20231231131956601"></p><p>发送信号的&#x2F;kill方式：通过&#x2F;bin目录中的kill程序可以向其他的进程发送任意的信号。</p><p>从键盘发送信号：当我们在键盘上输入Ctrl+C键会导致内容发送一个中断信号到前台进程组中的所有进程中。</p><p>调用函数kill：调用函数发送信号给其他进程，也包括给自己发送信号。<img src="/posts/0/image-20231231132524879.png" alt="image-20231231132524879"></p><p>使用函数alarm函数：<img src="/posts/0/image-20231231132517316.png" alt="image-20231231132517316"></p></li><li><p>接收信号：一个待处理信号最多只能接收一次，一种类型的信号最多只能有一次待处理信号。如果一个类型为k的信号有待处理信号，那接下来这个进程中类型为k的信号都不用排队等待，会被简单地丢弃。<img src="/posts/0/image-20231231132616297.png" alt="image-20231231132616297"><img src="/posts/0/image-20231231132720760.png" alt="image-20231231132720760"></p></li><li><p>虚拟内存：自动完成内存管理的相关工作，可以创建和释放内存空间，将内存空间映射到磁盘文件的某个部分，共享内存。虚拟内存使用不当会使程序产生错误。</p></li><li><p>物理寻址：<img src="/posts/0/image-20231231133921969.png" alt="image-20231231133921969"></p></li><li><p>虚拟寻址：将一个虚拟地址转换成物理地址的任务叫做地址翻译<img src="/posts/0/image-20231231134038499.png" alt="image-20231231134038499"></p></li><li><p>地址空间：地址空间是一个非负整数的有序集合，如果地址空间中的整数是连续的，那么我们说它是一个线性地址空间，一个地址空间的大小是由标识最大地址所需要的位数来描述的。最大可能的虚拟地址是虚拟地址数-1。<img src="/posts/0/image-20240101102502741.png" alt="image-20240101102502741"><img src="/posts/0/image-20231231134227145.png" alt="image-20231231134227145"></p></li><li><p>虚拟页（存在于磁盘上）和物理页：<img src="/posts/0/image-20231231134359183.png" alt="image-20231231134359183"><img src="/posts/0/image-20231231134930776.png" alt="image-20231231134930776"></p></li><li><p>页表：是一个页表条目PTE的数组存在于物理内存之中，将虚拟页地址映射到物理页地址。页表条目PTE&#x3D;2的n-p次方，n为虚拟地址大小、页大小P&#x3D;2的p次方。</p></li><li><p>页命中：虚拟内存中的一个字存在于物理内存中（即DRAM缓存命中）</p></li><li><p>缺页：引用虚拟内存中的字，不在物理内存中 (DRAM 缓存不命中)<img src="/posts/0/image-20231231135028888.png" alt="image-20231231135028888"></p></li><li><p>分配页面：分配一个新的虚拟内存页 (VP 5).内核在磁盘上分配VP5， 并且将PTE5指向这个新的位置</p></li><li><p>使用SRAM缓存来表示CPU与内存之间的L1L2L3这三级高速缓存。DRAM表示虚拟内存系统的缓存。</p></li><li><p>地址翻译：<img src="/posts/0/image-20231231135237207.png" alt="image-20231231135237207"><img src="/posts/0/image-20231231135250059.png" alt="image-20231231135250059"><img src="/posts/0/image-20240101103951186.png" alt="image-20240101103951186"><img src="/posts/0/image-20240101152349030.png" alt="image-20240101152349030"></p></li><li><p>P&#x3D;1K&#x3D;2的10次方可以得到p&#x3D;10。虚拟页偏移量VPO&#x3D;物理页偏移量PPO&#x3D;p。虚拟页号VPN&#x3D;虚拟地址空间-虚拟页偏移量VPO。物理页号PPN&#x3D;物理地址-物理页偏移量PPO。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> CSAPP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端部分知识点</title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<h2 id="HTML部分"><a href="#HTML部分" class="headerlink" title="HTML部分"></a>HTML部分</h2><h3 id="1-html结构"><a href="#1-html结构" class="headerlink" title="1. html结构"></a>1. html结构</h3><p>1.html：根标签</p><p>2.head： 头部标签</p><p>3.body： 主体标签</p><p>4.title：标题标签</p><p>5.DOCTYPE： 声明文档类型</p><p>6.lang &#x3D; “en”：页面的语言类型</p><p>7.charset&#x3D;“UTF-8”编码格式</p><h3 id="2-html标签"><a href="#2-html标签" class="headerlink" title="2. html标签"></a>2. html标签</h3><ol><li>标题标h： &lt;h1&gt; ~ &lt;h6&gt; 不同字号大小</li><li>段落标签p</li><li>水平线标签  &lt;hr&#x2F;&gt; 单标签</li><li>换行标签  &lt;br&#x2F;&gt;</li><li>span 文字标签：一行上可以放多个 \<span> 小盒子</span></li><li>div标签： 一行上只能放一个&lt;div&gt;大盒子 </li><li>加粗标签：&lt;strong&gt; 和  &lt;b&gt; 前者语义更强烈</li><li>倾斜标签：&lt;em&gt; 和 &lt;i&gt; 前者语义更强烈</li><li>删除线：&lt;del&gt; 和  &lt;s&gt;  前者语义更强烈</li><li>下划线：&lt;ins&gt; 和 &lt;u&gt; 前者语义更强烈</li></ol><h3 id="3-图片标签"><a href="#3-图片标签" class="headerlink" title="3.图片标签&lt;img&gt;"></a>3.图片标签&lt;img&gt;</h3><ol><li>src：当前图片的路径</li><li>alt：当图片错误加载时候显示的文字</li><li>title：当鼠标悬停在图片上显示的文字</li><li>height： 图片的高度</li><li>width： 图片的宽度</li><li>border：图片的边框</li></ol><h3 id="4-连接标签"><a href="#4-连接标签" class="headerlink" title="4.连接标签&lt;a&gt;"></a>4.连接标签&lt;a&gt;</h3><ol><li>外部链接  &lt;a href&#x3D;”<a href="http://www.baidu.com">\">http://www.baidu.com&quot;&gt;\</a>  写完整的 协议  域名   网址</li><li>内部链接 &lt;a href&#x3D;”index.html”&gt;&lt;&#x2F;a&gt;   直接写文件名即可</li><li>href:指定跳转的页面</li><li>title：鼠标悬停显示的文字</li><li>target:  _self(默认会覆盖原来的窗口)   _blank(会以新的窗口打开)    窗口的打开方式</li><li>#：会阻止页面跳转但是会刷新页面</li><li>绝对路径：目录下的绝对位置，通常从盘符开始</li><li>相对路径：在同一个文件夹直接找名字、向上一级  ..&#x2F; 、向下 &#x2F;</li></ol><h3 id="5-表格"><a href="#5-表格" class="headerlink" title="5.表格"></a>5.表格</h3><ol><li>表格：&lt;table&gt;是用于定义表格的标签。</li><li>行：&lt;tr&gt;标签用于定义表格中的行，必须嵌套在 &lt;table&gt; 标签中。</li><li>单元格：&lt;td&gt; 用于定义表格中的单元格，必须嵌套在&lt;tr&gt;标签中。</li><li>表头&lt;th&gt; 加粗加黑自动居中。</li><li>表格的标题：&lt;caption&gt;表格的标题   写在内部  显示外部  居中</li><li>结构头：&lt;thead&gt; 结构头</li><li>结构底：&lt;tfoot&gt;结构底</li><li>结构体：&lt;tbody&gt;结构体</li><li>表格边框border</li><li>宽度 width</li><li>高度 height</li><li>单元格与单元格之间距离 cellspacing</li><li>单元格与内容之间的距离 cellspadding</li><li>居中 align ： left&#x2F; center&#x2F; right </li><li>列合并 colspan</li><li>行合并 rowspan</li></ol><h3 id="6-列表"><a href="#6-列表" class="headerlink" title="6.列表"></a>6.列表</h3><ol><li>无序列表 : &lt;ul&gt; &lt;li&gt;</li><li>有序列表 : &lt;ol&gt;&lt;li&gt;</li><li>自定义列表：&lt;dl&gt; &lt;dt&gt; &lt;dd&gt;</li></ol><h3 id="7-表单"><a href="#7-表单" class="headerlink" title="7. 表单"></a>7. 表单</h3><h4 id="1-input属性"><a href="#1-input属性" class="headerlink" title="1. input属性 &lt;input type &#x3D; “属性值”&gt;"></a>1. input属性 &lt;input type &#x3D; “属性值”&gt;</h4><ol><li>text：文本框</li><li>password：密码框</li><li>radio：单选按钮</li><li>checkbox：复选框</li><li>button：普通按钮</li><li>reset：重置按钮  需要配合form表单才有作用</li><li>submit：提交按钮</li><li>image   属性  src</li><li>file 文件按钮   上传图片</li></ol><h4 id="2-其他属性"><a href="#2-其他属性" class="headerlink" title="2.其他属性"></a>2.其他属性</h4><ol><li>name属性：定义input元素的名称</li><li>value：规定input氧元素的值</li><li>checked：规定input元素首次加载时应当被选中</li><li>maxlength： 输入字段字符的最大长度</li><li>label</li><li>textarea：用户留言 cols&#x3D;“每行中的字符数” ，rows&#x3D;“显示的行数”</li><li>select：下拉菜单</li><li>form表单：收集用户信息，action：  提交后台的地址 method&#x3D;”get&#x2F;post”   提交（传输）后台的方式 name &#x3D;“a” 告诉服务器  由哪个表单提交过来的</li></ol><h2 id="CSS部分"><a href="#CSS部分" class="headerlink" title="CSS部分"></a>CSS部分</h2><h3 id="1-css引入方式"><a href="#1-css引入方式" class="headerlink" title="1.css引入方式"></a>1.css引入方式</h3><ol><li>行内样式：&lt;标签 style&#x3D;”属性:属性值;”&gt;&lt;&#x2F;标签&gt;</li><li>内部样式：选择器{属性:属性值;属性：属性值}</li><li>外部样式：通过link引入外部css文件  &lt;link  rel&#x3D;”stylesheet”   href&#x3D;”外部css文件”  &#x2F;&gt;</li><li>href与src   href 是引用   src下载资源到当前页面</li></ol><h3 id="2-选择器"><a href="#2-选择器" class="headerlink" title="2.选择器"></a>2.选择器</h3><ol><li>标签选择器：标签{属性：属性值}</li><li>class（类选择器）：html：&lt;div class&#x3D;”名字”&gt;  css：  .名字{属性：属性值}  .nav{color: red}</li><li>id选择器：html：&lt;div id&#x3D;”名字”&gt;&lt;&#x2F;div&gt;   css：  #名字{属性：属性值} id与class选择器的区别：  id的名字是唯一的（体现在js里面） class名字可以任意多个  #nav{color： red}</li><li>通配符选择器：选择所有的标签 *{color：red}</li></ol><h3 id="3-字体属性"><a href="#3-字体属性" class="headerlink" title="3.字体属性"></a>3.字体属性</h3><ol><li>字体大小：font-size </li><li>字体类型：font-family</li><li>字体粗度：font-weight   normal默认值400（不加粗）bold粗体700（加粗的）</li><li>文本风格：font-style:字体倾斜：italic（倾斜）&#x2F;normal（正常）</li><li>文字阴影： text-shadow  水平距离   垂直距离  模糊程度   阴影颜色   </li><li>字体连写：  font:font-style font-weight font-size&#x2F;line-height font-family</li><li>字体颜色：color</li><li>水平对齐方式：text-align:left&#x2F;center&#x2F;right（注意：1.div  h。。标题会居中   span   em  i。。。。不会居中）</li><li>行高：line-height</li><li>首行缩进：text-indent:  em   1em&#x3D;16px</li><li>去掉a链接默认的下划线 ：text-decoration： none(去掉下划线)&#x2F; undefined(添加下划线)</li></ol><h3 id="4-快速生成HTML结构语法"><a href="#4-快速生成HTML结构语法" class="headerlink" title="4.快速生成HTML结构语法"></a>4.快速生成HTML结构语法</h3><ul><li>生成标签 直接输入标签名 按tab键即可   比如  div   然后tab 键， 就可以生成 &lt;div&gt;&lt;&#x2F;div&gt;</li><li>如果想要生成多个相同标签  加上 * 就可以了 比如   div*3  就可以快速生成3个div</li><li>如果有父子级关系的标签，可以用 &gt;  比如   ul &gt; li就可以了</li><li>如果有兄弟关系的标签，用  +  就可以了 比如 div+p  </li><li>如果生成带有类名或者id名字的，  直接写  .demo  或者  #two   tab 键就可以了</li><li>如果生成的div 类名是有顺序的， 可以用 自增符号  $ </li><li>如果想要在生成的标签内部写内容可以用  { }  表示</li></ul><h3 id="5-快速生成CSS样式语法"><a href="#5-快速生成CSS样式语法" class="headerlink" title="5.快速生成CSS样式语法"></a>5.快速生成CSS样式语法</h3><p>CSS 基本采取简写形式即可</p><p>​比如 w200   按tab  可以 生成  width: 200px;</p><p>​比如 lh26px   按tab  可以生成  line-height: 26px;‘</p><h3 id="6-复合选择器"><a href="#6-复合选择器" class="headerlink" title="6.复合选择器"></a>6.复合选择器</h3><ol><li>后代选择器：元素1 元素2 {样式}   ul li{color：red} 选择ul里面所有的li标签元素</li><li>子选择器：元素1&gt;元素2 {样式}  div &gt; p {样式声明} 选择div里面所有最近一级的p标签元素</li><li>并集选择器：元素1，元素2 {样式声明}  ul，div{样式}  选择ul和div标签元素</li><li>伪类选择器：     （ :hover）</li><li>链接伪类选择器：给某些选择器增加特殊的效果：a:hover鼠标经过的那个链接</li><li>:focus 伪类选择器：用于选取获得焦点的表单元素</li></ol><h3 id="7-CSS的显示模式"><a href="#7-CSS的显示模式" class="headerlink" title="7.CSS的显示模式"></a>7.CSS的显示模式</h3><ol><li>块元素：&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;  比较霸道，自己独占一行。高度，宽度、外边距以及内边距都可以控制。宽度默认是容器（父级宽度）的100%。是一个容器及盒子，里面可以放行内或者块级元素。</li><li>行内元素：&lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;s&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt; 相邻行内元素在一行上，一行可以显示多个。默认宽度就是它本身内容的宽度。</li><li>行内块元素：&lt;img &#x2F;&gt;、&lt;input &#x2F;&gt;、&lt;td&gt;  同时具有块元素和行内元素的特点。</li><li>元素显示模块转换：转换为块元素：display:block;  转换为行内元素：display:inline;  转换为行内块：display: inline-block;</li><li>让文字的行高等于盒子的高度  就可以让文字在当前盒子内垂直居中</li></ol><h3 id="8-CSS的背景"><a href="#8-CSS的背景" class="headerlink" title="8.CSS的背景"></a>8.CSS的背景</h3><ol><li>背景颜色：background-color：颜色值；元素背景颜色默认值是 transparent（透明）</li><li>背景图片：background-image：none | url ；</li><li>背景平铺：background-repeat： repeat在纵向和横向上平铺 | no-repeat不平铺 | repeat-x横向 | repeat-y纵向</li><li>背景图片位置：background-position 属性可以改变图片在背景中的位置</li><li>背景图片固定：background-attachment    scroll随对象内容滚动  fixed 背景图像固定</li><li>背景样式合写：background: 背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置;</li><li>背景色半透明：background： rgba（0，0，0，0.3） 最后一个参数是 alpha 透明度，取值范围在 0~1之间</li></ol><h3 id="9-优先级"><a href="#9-优先级" class="headerlink" title="9.优先级"></a>9.优先级</h3><ol><li>继承或者* 0，0，0，0</li><li>元素选择器 0，0，0，1</li><li>类选择器，伪类选择器 0，0，1，0</li><li>ID选择器  0，1，0，0</li><li>行内样式 style&#x3D;“” 1，0，0，0</li><li>！important 重要的 无穷大</li></ol><h3 id="10-盒子模型——边框border"><a href="#10-盒子模型——边框border" class="headerlink" title="10.盒子模型——边框border"></a>10.盒子模型——边框border</h3><ol><li>CSS 盒子模型本质上是一个盒子，封装周围的 HTML 元素，它包括：<strong>边框</strong>、<strong>外边距</strong>、<strong>内边距</strong>、和 <strong>实际内容</strong></li><li>定义边框粗细：border-width： 单位是px</li><li>边框的样式：border-style  none：没有边框即忽略所有边框的宽度（默认值）solid：边框为单实线(最为常用的) dashed：边框为虚线   dotted：边框为点线</li><li>表格的细线边框：border-collapse </li><li>border-collapse: collapse; 表示相邻边框合并在一起</li><li>内边距 padding</li><li>外边距 margin</li><li>圆角边框：border-radius 用于设置元素的外边框圆角。</li><li>盒子阴影： box-shadow: h-shadow水平阴影 v-shadow垂直阴影 blur模糊距离 spread阴影的尺寸 color阴影颜色 inset外部阴影改为内部阴影;</li><li>文字阴影：  text-shadow: h-shadow水平阴影 v-shadow垂直阴影 blur模糊距离 color阴影颜色;</li></ol><h3 id="11-浮动"><a href="#11-浮动" class="headerlink" title="11.浮动"></a>11.浮动</h3><ol><li>浮动：float：none不浮动   left向左浮动   right向右浮动</li><li>清除浮动： 选择器{clear:属性值;}   left 不允许左侧有浮动   right 不允许右侧有浮动  both 同时清除左右两侧浮动</li><li>额外标签法清除浮动：例如 &lt;div style&#x3D;”clear:both”&gt;&lt;&#x2F;div&gt;，或者其他标签（如&lt;br &#x2F;&gt;等）。</li><li>父级添加 overflow 属性 （溢出）hidden | auto | scroll</li><li>父级添加after伪元素</li></ol><h3 id="12-定位（position）"><a href="#12-定位（position）" class="headerlink" title="12.定位（position）"></a>12.定位（position）</h3><ol><li><p>边偏移 有 top、bottom、left 和 right  4 个属性。</p></li><li><p><code>position</code> 属性定义元素的<strong>定位模式</strong>  选择器 { position: 属性值; } <code>static</code>  <strong>静态</strong>定位 <code>relative</code>  <strong>相对</strong>定位            <code>absolute</code>  <strong>绝对</strong>定位<code>fixed</code>  <strong>固定</strong>定位</p></li><li><p>静态定位(static) ：无定位</p></li><li><p>相对定位(relative) ：移动位置的时候相对于自己原来的位置来说的，在原来位置继续占有</p></li><li><p>绝对定位(absolute)：绝对定位是元素在移动位置的时候，是相对于它祖先元素来说的，完全不占位置，父元素要有定位</p></li><li><p><strong>子绝父相</strong></p></li><li><p>固定定位(fixed)：固定于浏览器可视区的位置，不随滚动条滚动，不占位置</p></li><li><p>粘性定位(sticky) ：相对定位和固定定位的混合，占位置</p><table><thead><tr><th><strong>定位模式</strong></th><th><strong>是否脱标</strong></th><th><strong>移动位置</strong></th><th><strong>是否常用</strong></th></tr></thead><tbody><tr><td>static   静态定位</td><td>否</td><td>不能使用边偏移</td><td>很少</td></tr><tr><td><strong>relative 相对定位</strong></td><td><strong>否 (占有位置)</strong></td><td><strong>相对于自身位置移动</strong></td><td><strong>基本单独使用</strong></td></tr><tr><td><strong>absolute绝对定位</strong></td><td><strong>是（不占有位置）</strong></td><td><strong>带有定位的父级</strong></td><td><strong>要和定位父级元素搭配使用</strong></td></tr><tr><td><strong>fixed 固定定位</strong></td><td><strong>是（不占有位置）</strong></td><td><strong>浏览器可视区</strong></td><td><strong>单独使用，不需要父级</strong></td></tr><tr><td>sticky 粘性定位</td><td>否   (占有位置)</td><td>浏览器可视区</td><td>当前阶段少</td></tr></tbody></table></li><li><p>堆叠顺序（z-index）：正整数、负整数或 0，默认值是 0，数值越大，盒子越靠上；</p></li><li><p>绝对定位的盒子居中：<code>left: 50%;</code>  <code>margin-left: -100px;</code></p></li><li><p>脱标的盒子不会触发外边距塌陷</p></li><li><p>绝对定位（固定定位）会完全压住盒子</p></li></ol><h3 id="13-元素显示隐藏"><a href="#13-元素显示隐藏" class="headerlink" title="13.元素显示隐藏"></a>13.元素显示隐藏</h3><ol><li><p>显示display：display: none 隐藏对象  display：block 除了转换为块级元素之外，同时还有显示元素的意思。隐藏后不再占有原本位置</p></li><li><p>可见性 visibility：visibility：visible ; 　元素可视   visibility：hidden; 　  元素隐藏</p></li><li><p>overflow 溢出：</p></li><li><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><strong>visible</strong></td><td>不剪切内容也不添加滚动条</td></tr><tr><td><strong>hidden</strong></td><td>不显示超过对象尺寸的内容，超出的部分隐藏掉</td></tr><tr><td><strong>scroll</strong></td><td>不管超出内容否，总是显示滚动条</td></tr><tr><td><strong>auto</strong></td><td>超出自动显示滚动条，不超出不显示滚动条</td></tr></tbody></table></li></ol><h3 id="14-精灵图"><a href="#14-精灵图" class="headerlink" title="14.精灵图"></a>14.精灵图</h3><ol><li>精灵技术主要针对于背景图片使用。就是把多个小背景图片整合到一张大图片中。</li><li>这个大图片也称为 sprites  精灵图  或者 雪碧图</li><li>移动背景图片位置， 此时可以使用 background-position 。</li><li>移动的距离就是这个目标图片的 x 和 y 坐标。注意网页中的坐标有所不同</li><li>因为一般情况下都是往上往左移动，所以数值是负值。</li><li>使用精灵图的时候需要精确测量，每个小背景图片的大小和位置。</li></ol><h3 id="15-字体应用"><a href="#15-字体应用" class="headerlink" title="15.字体应用"></a>15.字体应用</h3><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8"> @font-face &#123;</span></span><span class="line"><span style="color: #babed8">   font-family: &#39;icomoon&#39;;</span></span><span class="line"><span style="color: #babed8">   src:  url(&#39;fonts/icomoon.eot?7kkyc2&#39;);</span></span><span class="line"><span style="color: #babed8">   src:  url(&#39;fonts/icomoon.eot?7kkyc2#iefix&#39;) format(&#39;embedded-opentype&#39;),</span></span><span class="line"><span style="color: #babed8">     url(&#39;fonts/icomoon.ttf?7kkyc2&#39;) format(&#39;truetype&#39;),</span></span><span class="line"><span style="color: #babed8">     url(&#39;fonts/icomoon.woff?7kkyc2&#39;) format(&#39;woff&#39;),</span></span><span class="line"><span style="color: #babed8">     url(&#39;fonts/icomoon.svg?7kkyc2#icomoon&#39;) format(&#39;svg&#39;);</span></span><span class="line"><span style="color: #babed8">   font-weight: normal;</span></span><span class="line"><span style="color: #babed8">   font-style: normal;</span></span><span class="line"><span style="color: #babed8"> &#125;</span></span><span class="line"><span style="color: #babed8"></span></span></code></pre></div><p>定义字体： span {   font-family: “icomoon”;}</p><h3 id="16-CSS界面样式"><a href="#16-CSS界面样式" class="headerlink" title="16.CSS界面样式"></a>16.CSS界面样式</h3><ol><li>鼠标样式 cursor：default 小白默认 pointer小手 move 移动 text文本 not-allowed禁止</li><li>轮廓线 outline：none 去掉默认蓝色边框</li><li>防止拖拽文本域 resize：none</li><li>文字对齐 vertical-align ：baseline默认，放在父元素基线，top 行中最高元素顶端对齐 middle 放在父元素中部 bottom最低元素的顶端对齐</li><li>单行文本溢出显示省略号：先强制一行内显示文本  white-space: nowrap; 超出的部分隐藏  overflow: hidden;  文字用省略号替代超出的部分  text-overflow: ellipsis;</li></ol><h2 id="HTML5"><a href="#HTML5" class="headerlink" title="HTML5"></a>HTML5</h2><h3 id="1-语义化标签"><a href="#1-语义化标签" class="headerlink" title="1.语义化标签"></a>1.语义化标签</h3><ol><li><code>&lt;header&gt;</code> 头部标签</li><li><code>&lt;nav&gt;</code> 导航标签</li><li><code>&lt;article&gt;</code> 内容标签</li><li><code>&lt;section&gt;</code> 定义文档某个区域</li><li><code>&lt;aside&gt;</code> 侧边栏标签</li><li><code>&lt;footer&gt;</code> 尾部标签</li></ol><h3 id="2-多媒体标签"><a href="#2-多媒体标签" class="headerlink" title="2.多媒体标签"></a>2.多媒体标签</h3><ol><li>音频 <strong>audio</strong> 和视频 <strong>video</strong> 两个标签</li><li>autoplay 视频就绪自动播放</li><li>width height</li><li>loop 视频播放完毕是否循环播放</li><li>preload auto预先加载 none不预先</li><li>url地址</li><li>poster 加载等待的画面图片</li><li>muted 静音播放</li><li>controls 显示控件</li></ol><h3 id="3-新增表单元素"><a href="#3-新增表单元素" class="headerlink" title="3.新增表单元素"></a>3.新增表单元素</h3><ol><li>email  </li><li>url</li><li>date</li><li>time</li><li>month</li><li>week</li><li>number</li><li>tel</li><li>search</li><li>color</li></ol><h2 id="CSS3"><a href="#CSS3" class="headerlink" title="CSS3"></a>CSS3</h2><h3 id="1-新增选择器"><a href="#1-新增选择器" class="headerlink" title="1.新增选择器"></a>1.新增选择器</h3><ol><li><img src="/posts/0/image-20231123105019298.png" alt="image-20231123105019298"></li><li><img src="/posts/0/image-20231123105040370.png" alt="image-20231123105040370"></li><li><img src="/posts/0/image-20231123105106444.png" alt="image-20231123105106444"></li></ol><h3 id="2-盒子模型"><a href="#2-盒子模型" class="headerlink" title="2.盒子模型"></a>2.盒子模型</h3><ol><li>box-sizing: content-box  盒子大小为 width + padding + border  （以前默认的）</li><li>box-sizing: border-box  盒子大小为 width</li><li>如果盒子模型我们改为了box-sizing: border-box  ， 那padding和border就不会撑大盒子了（前提padding和border不会超过width宽度）</li></ol><h3 id="3-其他特性"><a href="#3-其他特性" class="headerlink" title="3.其他特性"></a>3.其他特性</h3><ol><li>模糊滤镜filter ：filter:   函数(); –&gt;  例如： filter: blur(5px);  –&gt;  blur模糊处理  数值越大越模糊</li><li>计算盒子宽度 – calc 函数：width: calc(100% - 80px);</li></ol><h3 id="4-CSS3过渡"><a href="#4-CSS3过渡" class="headerlink" title="4.CSS3过渡"></a>4.CSS3过渡</h3><ol><li><strong>过渡动画：</strong> 是从一个状态 渐渐的过渡到另外一个状态</li><li>transition: 要过渡的属性  花费时间  运动曲线  何时开始;</li></ol><h3 id="5-2D转换"><a href="#5-2D转换" class="headerlink" title="5.2D转换"></a>5.2D转换</h3><ol><li>转换 移动：translate  旋转：rotate  缩放：scale</li><li>旋转 translate：transform：translate（x,y）</li><li>缩放 retate：transform：retate（度数）</li><li>2D转换中心点：transform-origin： x， y；</li><li>缩放 transform：scale（x,y）</li></ol><h3 id="6-动画"><a href="#6-动画" class="headerlink" title="6.动画"></a>6.动画</h3><ol><li>keyframes定义动画  @keyframes动画名称</li></ol>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>校园课表微信小程序接口文档示例</title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<h1 id="基于uni-app框架开发的微信小程序接口文档"><a href="#基于uni-app框架开发的微信小程序接口文档" class="headerlink" title="基于uni-app框架开发的微信小程序接口文档"></a>基于uni-app框架开发的微信小程序接口文档</h1><h2 id="一-关系型数据库设计"><a href="#一-关系型数据库设计" class="headerlink" title="一. 关系型数据库设计"></a>一. 关系型数据库设计</h2><h3 id="1-数据列表"><a href="#1-数据列表" class="headerlink" title="1.数据列表"></a>1.数据列表</h3><h6 id="1-student-表"><a href="#1-student-表" class="headerlink" title="1.student 表"></a>1.student 表</h6><table><thead><tr><th>student_id</th><th>real_student_id</th><th>name</th><th>college</th><th>major</th><th>classNum</th><th>grade</th></tr></thead><tbody><tr><td>1</td><td>202225220801</td><td>张三</td><td>数信</td><td>软件工程</td><td>5班</td><td>2022</td></tr><tr><td>2</td><td>202325310802</td><td>李四</td><td>材能</td><td>材料</td><td>1班</td><td>2023</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table><h6 id="2-courses表"><a href="#2-courses表" class="headerlink" title="2. courses表"></a>2. courses表</h6><table><thead><tr><th>course_id</th><th>name</th><th>teacher</th><th>time</th><th>location</th><th>day_of_week</th></tr></thead><tbody><tr><td>101</td><td>数据库原理</td><td>王老师</td><td>周一1-2节</td><td>4210</td><td>1</td></tr><tr><td>102</td><td>数据结构</td><td>张老师</td><td>周三1-2节</td><td>3302</td><td>3</td></tr><tr><td>103</td><td>面向对象程序设计</td><td>宋老师</td><td>周四3-4节</td><td>4502</td><td>4</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td></td></tr></tbody></table><h6 id="3-enrollments表"><a href="#3-enrollments表" class="headerlink" title="3.enrollments表"></a>3.enrollments表</h6><table><thead><tr><th>enrollment_id</th><th>student_id</th><th>course_id</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>101</td></tr><tr><td>2</td><td>1</td><td>102</td></tr><tr><td>3</td><td>2</td><td>101</td></tr><tr><td>4</td><td>2</td><td>103</td></tr><tr><td>…</td><td>…</td><td>…</td></tr></tbody></table><h6 id="4-tasks表"><a href="#4-tasks表" class="headerlink" title="4.tasks表"></a>4.tasks表</h6><table><thead><tr><th>task_id</th><th>real_student_id</th><th>description</th><th>status</th><th>create_time</th><th>update_time</th></tr></thead><tbody><tr><td>1</td><td>202225220501</td><td>完成作业</td><td>未完成(0)</td><td>…</td><td>…</td></tr><tr><td>2</td><td>202325310502</td><td>准备考试</td><td>完成(1)</td><td>…</td><td>…</td></tr><tr><td>3</td><td>202225310702</td><td>提交报告</td><td>未完成(0)</td><td>…</td><td>…</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td></td><td></td></tr></tbody></table><h6 id="生成语句"><a href="#生成语句" class="headerlink" title="生成语句"></a>生成语句</h6><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">-- 学生表格</span></span><span class="line"><span style="color: #babed8">create table students (</span></span><span class="line"><span style="color: #babed8">    student_id int unsigned primary key auto_increment comment &#39;主键学生id&#39;,</span></span><span class="line"><span style="color: #babed8">    real_student_id varchar(20) not null comment &#39;学号&#39;,</span></span><span class="line"><span style="color: #babed8">    name varchar(10) not null comment &#39;名字&#39;,</span></span><span class="line"><span style="color: #babed8">    college varchar(20) not null comment &#39;学院&#39;,</span></span><span class="line"><span style="color: #babed8">    major varchar(20) not null comment &#39;专业&#39;,</span></span><span class="line"><span style="color: #babed8">    class int not null comment &#39;班级&#39;,</span></span><span class="line"><span style="color: #babed8">    grade int not null comment &#39;年级&#39;</span></span><span class="line"><span style="color: #babed8">)comment &#39;学生表格&#39;;</span></span><span class="line"><span style="color: #babed8">CREATE INDEX idx_real_student_id ON students(real_student_id);</span></span><span class="line"><span style="color: #babed8">-- 学生表测试数据</span></span><span class="line"><span style="color: #babed8">insert into students(student_id, real_student_id, name, college, major, class, grade) values(1, &#39;202225220503&#39;, &#39;冯焯炫&#39;, &#39;软件学院&#39;, &#39;软件工程&#39;, 5, 2022),</span></span><span class="line"><span style="color: #babed8">                                                                                            (2, &#39;202225220504&#39;, &#39;郭文杰&#39;, &#39;软件学院&#39;, &#39;软件工程&#39;, 5, 2022),</span></span><span class="line"><span style="color: #babed8">                                                                                            (3, &#39;202225220901&#39;, &#39;张三&#39;, &#39;软件学院&#39;, &#39;软件工程&#39;, 9, 2022),</span></span><span class="line"><span style="color: #babed8">                                                                                            (4, &#39;202325220904&#39;, &#39;李四&#39;, &#39;软件学院&#39;, &#39;软件工程&#39;, 9, 2023),</span></span><span class="line"><span style="color: #babed8">                                                                                            (5, &#39;202225310902&#39;, &#39;王五&#39;, &#39;数学与信息学院&#39;, &#39;计算机科学与技术&#39;, 9, 2022);</span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8">-- 课程表格</span></span><span class="line"><span style="color: #babed8">create table courses(</span></span><span class="line"><span style="color: #babed8">    course_id int unsigned primary key auto_increment comment &#39;主键课程id&#39;,</span></span><span class="line"><span style="color: #babed8">    name varchar(20) not null comment &#39;课程名字&#39;,</span></span><span class="line"><span style="color: #babed8">    teacher varchar(10) not null comment &#39;教师名字&#39;,</span></span><span class="line"><span style="color: #babed8">    time varchar(20) not null comment &#39;上课时间&#39;,</span></span><span class="line"><span style="color: #babed8">    location varchar(20) not null comment &#39;上课地点&#39;,</span></span><span class="line"><span style="color: #babed8">    day_of_week int not null comment &#39;星期几上课&#39;</span></span><span class="line"><span style="color: #babed8">)comment &#39;课程表格&#39;;</span></span><span class="line"><span style="color: #babed8">-- 课程表测试数据</span></span><span class="line"><span style="color: #babed8">insert into courses(course_id, name, teacher, time, location, day_of_week) values(101, &#39;数据结构&#39;, &#39;张老师&#39;, &#39;周一第1-2节&#39;, &#39;4201&#39;, 1),</span></span><span class="line"><span style="color: #babed8">                                                                                 (102, &#39;数据库&#39;, &#39;陈老师&#39;, &#39;周三第1-2节&#39;, &#39;4311&#39;, 3),</span></span><span class="line"><span style="color: #babed8">                                                                                 (103, &#39;面向对象程序设计&#39;, &#39;王老师&#39;, &#39;周四第3-4节&#39;, &#39;4403&#39;, 4),</span></span><span class="line"><span style="color: #babed8">                                                                                 (104, &#39;C语言程序设计&#39;, &#39;周老师&#39;, &#39;周二第7-8节&#39;, &#39;4402&#39;, 2),</span></span><span class="line"><span style="color: #babed8">                                                                                 (105, &#39;高等数学&#39;, &#39;王老师&#39;, &#39;周四第3-4节&#39;, &#39;3201&#39;, 4),</span></span><span class="line"><span style="color: #babed8">                                                                                 (106, &#39;大学英语&#39;, &#39;冯老师&#39;, &#39;周一第7-8节&#39;, &#39;3311&#39;, 1),</span></span><span class="line"><span style="color: #babed8">                                                                                 (107, &#39;数据结构&#39;, &#39;张老师&#39;, &#39;周三第1-2节&#39;, &#39;4301&#39;, 3),</span></span><span class="line"><span style="color: #babed8">                                                                                 (108, &#39;计算机组成原理&#39;, &#39;黄老师&#39;, &#39;周五第5-6节&#39;, &#39;1502&#39;, 5),</span></span><span class="line"><span style="color: #babed8">                                                                                 (109, &#39;数字电路&#39;, &#39;王老师&#39;, &#39;周二第1-2节&#39;, &#39;3301&#39;, 2),</span></span><span class="line"><span style="color: #babed8">                                                                                 (110, &#39;近代史纲要&#39;, &#39;陈老师&#39;, &#39;周五第5-6节&#39;, &#39;5c501&#39;, 5),</span></span><span class="line"><span style="color: #babed8">                                                                                 (111, &#39;离散结构&#39;, &#39;李老师&#39;, &#39;周四第1-2节&#39;, &#39;5a601&#39;, 4);</span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8">-- 选课表格</span></span><span class="line"><span style="color: #babed8">create table enrollments(</span></span><span class="line"><span style="color: #babed8">    enrollment_id int unsigned primary key auto_increment comment &#39;主键选课id&#39;,</span></span><span class="line"><span style="color: #babed8">    student_id int unsigned not null comment &#39;学生id&#39;,</span></span><span class="line"><span style="color: #babed8">    course_id int unsigned not null comment &#39;课程id&#39;,</span></span><span class="line"><span style="color: #babed8">    FOREIGN KEY (student_id) REFERENCES students(student_id),</span></span><span class="line"><span style="color: #babed8">    FOREIGN KEY (course_id) REFERENCES courses(course_id)</span></span><span class="line"><span style="color: #babed8">)comment &#39;选课表格&#39;;</span></span><span class="line"><span style="color: #babed8">-- 选课表测试数据</span></span><span class="line"><span style="color: #babed8">insert into enrollments(enrollment_id, student_id, course_id) values(1, 1, 101),</span></span><span class="line"><span style="color: #babed8">                                                                    (2, 1, 102),</span></span><span class="line"><span style="color: #babed8">                                                                    (3, 1, 103),</span></span><span class="line"><span style="color: #babed8">                                                                    (4, 1, 106),</span></span><span class="line"><span style="color: #babed8">                                                                    (5, 1, 107),</span></span><span class="line"><span style="color: #babed8">                                                                    (6, 1, 109),</span></span><span class="line"><span style="color: #babed8">                                                                    (7, 2, 101),</span></span><span class="line"><span style="color: #babed8">                                                                    (8, 2, 102),</span></span><span class="line"><span style="color: #babed8">                                                                    (9, 2, 103),</span></span><span class="line"><span style="color: #babed8">                                                                    (10, 2, 106),</span></span><span class="line"><span style="color: #babed8">                                                                    (11, 2, 107),</span></span><span class="line"><span style="color: #babed8">                                                                    (12, 2, 109),</span></span><span class="line"><span style="color: #babed8">                                                                    (13, 3, 103),</span></span><span class="line"><span style="color: #babed8">                                                                    (14, 3, 111),</span></span><span class="line"><span style="color: #babed8">                                                                    (15, 3, 101),</span></span><span class="line"><span style="color: #babed8">                                                                    (16, 3, 107),</span></span><span class="line"><span style="color: #babed8">                                                                    (17, 3, 106),</span></span><span class="line"><span style="color: #babed8">                                                                    (18, 3, 102),</span></span><span class="line"><span style="color: #babed8">                                                                    (19, 4, 104),</span></span><span class="line"><span style="color: #babed8">                                                                    (20, 4, 110),</span></span><span class="line"><span style="color: #babed8">                                                                    (21, 4, 109),</span></span><span class="line"><span style="color: #babed8">                                                                    (22, 4, 108),</span></span><span class="line"><span style="color: #babed8">                                                                    (23, 5, 103),</span></span><span class="line"><span style="color: #babed8">                                                                    (24, 5, 108),</span></span><span class="line"><span style="color: #babed8">                                                                    (25, 5, 109),</span></span><span class="line"><span style="color: #babed8">                                                                    (26, 5, 111),</span></span><span class="line"><span style="color: #babed8">                                                                    (27, 5, 106);</span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8">-- 待办表格</span></span><span class="line"><span style="color: #babed8">create table tasks(</span></span><span class="line"><span style="color: #babed8">    task_id int unsigned primary key auto_increment comment &#39;主键任务id&#39;,</span></span><span class="line"><span style="color: #babed8">    real_student_id varchar(20) not null comment &#39;学号&#39;,</span></span><span class="line"><span style="color: #babed8">    description varchar(100) not null comment &#39;任务描述&#39;,</span></span><span class="line"><span style="color: #babed8">    status tinyint(1) not null comment &#39;任务状态&#39;,</span></span><span class="line"><span style="color: #babed8">    create_time datetime not null comment &#39;创建时间&#39;,</span></span><span class="line"><span style="color: #babed8">    update_time datetime not null comment &#39;更新时间&#39;,</span></span><span class="line"><span style="color: #babed8">    FOREIGN KEY (real_student_id) REFERENCES students(real_student_id)</span></span><span class="line"><span style="color: #babed8">)comment &#39;待办表格&#39;;</span></span><span class="line"><span style="color: #babed8">-- 待办表测试数据</span></span><span class="line"><span style="color: #babed8">insert into tasks(task_id, real_student_id, description, status, create_time, update_time) values (1, &#39;202225220503&#39;, &#39;完成Java实验任务&#39;, 0, now(), now()),</span></span><span class="line"><span style="color: #babed8">                                                                                                  (2, &#39;202225220503&#39;, &#39;完成C语言实验任务&#39;, 1, now(), now()),</span></span><span class="line"><span style="color: #babed8">                                                                                                  (3, &#39;202225220504&#39;, &#39;完成数据结构课程设计&#39;, 0, now(), now()),</span></span><span class="line"><span style="color: #babed8">                                                                                                  (4, &#39;202225220504&#39;, &#39;完成Java实验任务&#39;, 1, now(), now()),</span></span><span class="line"><span style="color: #babed8">                                                                                                  (5, &#39;202225220901&#39;, &#39;完成高等数学周末作业&#39;, 0, now(), now()),</span></span><span class="line"><span style="color: #babed8">                                                                                                  (6, &#39;202325220904&#39;, &#39;完成大学英语周末作业&#39;, 0, now(), now()),</span></span><span class="line"><span style="color: #babed8">                                                                                                  (7, &#39;202225310902&#39;, &#39;完成数据库实验任务&#39;, 1, now(), now()),</span></span><span class="line"><span style="color: #babed8">                                                                                                  (8, &#39;202225310902&#39;, &#39;完成Java实验任务&#39;, 0, now(), now());</span></span></code></pre></div><h2 id="二-接口文档"><a href="#二-接口文档" class="headerlink" title="二.接口文档"></a>二.接口文档</h2><h3 id="1-课程管理"><a href="#1-课程管理" class="headerlink" title="1.课程管理"></a>1.课程管理</h3><h4 id="1-1-课程列表查询"><a href="#1-1-课程列表查询" class="headerlink" title="1.1 课程列表查询"></a>1.1 课程列表查询</h4><h5 id="1-1-1-基本信息"><a href="#1-1-1-基本信息" class="headerlink" title="1.1.1 基本信息"></a>1.1.1 基本信息</h5><p>​| 请求路径：&#x2F;courses&#x2F;{realStudentId}</p><p>​        | 请求方式：GET</p><p>​        | 接口描述：该接口用于根据学号进行学生课表数据查询</p><h5 id="1-1-2-请求参数"><a href="#1-1-2-请求参数" class="headerlink" title="1.1.2 请求参数"></a>1.1.2 请求参数</h5><p>参数格式：路径参数</p><p>参数说明：</p><table><thead><tr><th>参数名</th><th>类型</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>realStudentId</td><td>string</td><td>必须</td><td>学号</td></tr></tbody></table><p>请求参数样例：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">/courses/202225220503</span></span></code></pre></div><h5 id="1-1-3响应数据"><a href="#1-1-3响应数据" class="headerlink" title="1.1.3响应数据"></a>1.1.3响应数据</h5><p>参数格式： application&#x2F;json</p><p>参数说明：</p><table><thead><tr><th>参数名</th><th>类型</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>code</td><td>number</td><td>必须</td><td>响应码，1代表成功，0代表失败</td></tr><tr><td>msg</td><td>string</td><td>非必须</td><td>提示信息</td></tr><tr><td>data</td><td>object</td><td>非必须</td><td>返回的数据</td></tr><tr><td>|- courseId</td><td>number</td><td>非必须</td><td>课程id</td></tr><tr><td>|- name</td><td>string</td><td>非必须</td><td>课程名称</td></tr><tr><td>|- teacher</td><td>string</td><td>非必须</td><td>老师名称</td></tr><tr><td>|- time</td><td>string</td><td>非必须</td><td>上课时间</td></tr><tr><td>|- location</td><td>string</td><td>非必须</td><td>上课地点</td></tr><tr><td>|- dayOfWeek</td><td>number</td><td>非必须</td><td>上课时间是星期几</td></tr></tbody></table><p>响应数据样例：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">&#123;</span></span><span class="line"><span style="color: #babed8">    &quot;code&quot;: 1,</span></span><span class="line"><span style="color: #babed8">    &quot;msg&quot;: &quot;success&quot;,</span></span><span class="line"><span style="color: #babed8">    &quot;data&quot;: [</span></span><span class="line"><span style="color: #babed8">        &#123;</span></span><span class="line"><span style="color: #babed8">            &quot;courseId&quot;: 101,</span></span><span class="line"><span style="color: #babed8">            &quot;name&quot;: &quot;数据结构&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;teacher&quot;: &quot;张老师&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;time&quot;: &quot;周一第1-2节&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;location&quot;: &quot;4201&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;dayOfWeek&quot;: 1</span></span><span class="line"><span style="color: #babed8">        &#125;,</span></span><span class="line"><span style="color: #babed8">        &#123;</span></span><span class="line"><span style="color: #babed8">            &quot;courseId&quot;: 102,</span></span><span class="line"><span style="color: #babed8">            &quot;name&quot;: &quot;数据库&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;teacher&quot;: &quot;陈老师&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;time&quot;: &quot;周三第1-2节&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;location&quot;: &quot;4311&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;dayOfWeek&quot;: 3</span></span><span class="line"><span style="color: #babed8">        &#125;,</span></span><span class="line"><span style="color: #babed8">        &#123;</span></span><span class="line"><span style="color: #babed8">            &quot;courseId&quot;: 103,</span></span><span class="line"><span style="color: #babed8">            &quot;name&quot;: &quot;面向对象程序设计&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;teacher&quot;: &quot;王老师&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;time&quot;: &quot;周四第3-4节&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;location&quot;: &quot;4403&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;dayOfWeek&quot;: 4</span></span><span class="line"><span style="color: #babed8">        &#125;,</span></span><span class="line"><span style="color: #babed8">        &#123;</span></span><span class="line"><span style="color: #babed8">            &quot;courseId&quot;: 106,</span></span><span class="line"><span style="color: #babed8">            &quot;name&quot;: &quot;大学英语&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;teacher&quot;: &quot;冯老师&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;time&quot;: &quot;周一第7-8节&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;location&quot;: &quot;3311&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;dayOfWeek&quot;: 1</span></span><span class="line"><span style="color: #babed8">        &#125;,</span></span><span class="line"><span style="color: #babed8">        &#123;</span></span><span class="line"><span style="color: #babed8">            &quot;courseId&quot;: 107,</span></span><span class="line"><span style="color: #babed8">            &quot;name&quot;: &quot;数据结构&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;teacher&quot;: &quot;张老师&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;time&quot;: &quot;周三第1-2节&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;location&quot;: &quot;4301&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;dayOfWeek&quot;: 3</span></span><span class="line"><span style="color: #babed8">        &#125;,</span></span><span class="line"><span style="color: #babed8">        &#123;</span></span><span class="line"><span style="color: #babed8">            &quot;courseId&quot;: 109,</span></span><span class="line"><span style="color: #babed8">            &quot;name&quot;: &quot;数字电路&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;teacher&quot;: &quot;王老师&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;time&quot;: &quot;周二第1-2节&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;location&quot;: &quot;3301&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;dayOfWeek&quot;: 2</span></span><span class="line"><span style="color: #babed8">        &#125;</span></span><span class="line"><span style="color: #babed8">    ]</span></span><span class="line"><span style="color: #babed8">&#125;</span></span></code></pre></div><h3 id="2-待办管理"><a href="#2-待办管理" class="headerlink" title="2.待办管理"></a>2.待办管理</h3><h4 id="1-1查询待办"><a href="#1-1查询待办" class="headerlink" title="1.1查询待办"></a>1.1查询待办</h4><h5 id="1-1-1基本信息"><a href="#1-1-1基本信息" class="headerlink" title="1.1.1基本信息"></a>1.1.1基本信息</h5><p>​        | 请求路径：&#x2F;tasks&#x2F;{realStudentId}</p><p>​        | 请求方式：GET</p><p>​        | 接口描述：该接口用于根据学号进行待办事项数据查询</p><h5 id="1-1-2请求参数"><a href="#1-1-2请求参数" class="headerlink" title="1.1.2请求参数"></a>1.1.2请求参数</h5><p>参数格式：路径参数</p><p>参数说明：</p><table><thead><tr><th>参数名</th><th>类型</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>realStudentId</td><td>string</td><td>必须</td><td>学号</td></tr></tbody></table><p>请求参数样例：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">/tasks/202225220503</span></span></code></pre></div><h5 id="1-1-3响应数据-1"><a href="#1-1-3响应数据-1" class="headerlink" title="1.1.3响应数据"></a>1.1.3响应数据</h5><p>参数格式： application&#x2F;json</p><p>参数说明：</p><table><thead><tr><th>参数名</th><th>类型</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>code</td><td>number</td><td>必须</td><td>响应码，1代表成功，0代表失败</td></tr><tr><td>msg</td><td>string</td><td>非必须</td><td>提示信息</td></tr><tr><td>data</td><td>object</td><td>非必须</td><td>返回的数据</td></tr><tr><td>|- taskId</td><td>number</td><td>非必须</td><td>待办id</td></tr><tr><td>|- description</td><td>string</td><td>非必须</td><td>待办内容</td></tr><tr><td>|- status</td><td>number</td><td>非必须</td><td>完成状态，0代表未完成，1代表完成</td></tr><tr><td>|- createTime</td><td>string</td><td>非必须</td><td>创建时间</td></tr><tr><td>|- updateTime</td><td>string</td><td>非必须</td><td>更新时间</td></tr></tbody></table><p>响应数据样例：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">&#123;</span></span><span class="line"><span style="color: #babed8">    &quot;code&quot;: 1,</span></span><span class="line"><span style="color: #babed8">    &quot;msg&quot;: &quot;success&quot;,</span></span><span class="line"><span style="color: #babed8">    &quot;data&quot;: [</span></span><span class="line"><span style="color: #babed8">        &#123;</span></span><span class="line"><span style="color: #babed8">            &quot;taskId&quot;: 1,</span></span><span class="line"><span style="color: #babed8">            &quot;description&quot;: &quot;完成Java实验任务&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;status&quot;: 0,</span></span><span class="line"><span style="color: #babed8">            &quot;createTime&quot;: &quot;2023-11-05T21:36:43&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;updateTime&quot;: &quot;2023-11-05T21:36:43&quot;</span></span><span class="line"><span style="color: #babed8">        &#125;,</span></span><span class="line"><span style="color: #babed8">        &#123;</span></span><span class="line"><span style="color: #babed8">            &quot;taskId&quot;: 2,</span></span><span class="line"><span style="color: #babed8">            &quot;description&quot;: &quot;完成C语言实验任务&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;status&quot;: 1,</span></span><span class="line"><span style="color: #babed8">            &quot;createTime&quot;: &quot;2023-11-05T21:36:43&quot;,</span></span><span class="line"><span style="color: #babed8">            &quot;updateTime&quot;: &quot;2023-11-05T21:36:43&quot;</span></span><span class="line"><span style="color: #babed8">        &#125;</span></span><span class="line"><span style="color: #babed8">    ]</span></span><span class="line"><span style="color: #babed8">&#125;</span></span></code></pre></div><h4 id="1-2-删除待办"><a href="#1-2-删除待办" class="headerlink" title="1.2 删除待办"></a>1.2 删除待办</h4><h5 id="1-2-1-基本信息"><a href="#1-2-1-基本信息" class="headerlink" title="1.2.1 基本信息"></a>1.2.1 基本信息</h5><p>​| 请求路径： &#x2F;tasks&#x2F;{taskId}</p><p>​        | 请求方式：DELETE</p><p>​        | 接口描述：该接口用于根据待办事项ID删除待办事项数据</p><h5 id="1-2-2-请求参数"><a href="#1-2-2-请求参数" class="headerlink" title="1.2.2 请求参数"></a>1.2.2 请求参数</h5><p>参数格式：路径参数</p><p>参数说明：</p><table><thead><tr><th>参数名</th><th>类型</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>taskId</td><td>number</td><td>必须</td><td>待办事项ID</td></tr></tbody></table><p>请求参数样例：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">/tasks/9</span></span></code></pre></div><h5 id="1-2-3-响应数据"><a href="#1-2-3-响应数据" class="headerlink" title="1.2.3 响应数据"></a>1.2.3 响应数据</h5><p>参数格式：application&#x2F;json</p><p>参数说明：</p><table><thead><tr><th>参数名</th><th>类型</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>code</td><td>number</td><td>必须</td><td>响应码，1代表成功，0代表失败</td></tr><tr><td>msg</td><td>string</td><td>非必须</td><td>提示信息</td></tr><tr><td>data</td><td>object</td><td>非必须</td><td>返回的数据</td></tr></tbody></table><p>响应数据样例：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">&#123;</span></span><span class="line"><span style="color: #babed8">    &quot;code&quot;: 1,</span></span><span class="line"><span style="color: #babed8">    &quot;msg&quot;: &quot;success&quot;,</span></span><span class="line"><span style="color: #babed8">    &quot;data&quot;: null</span></span><span class="line"><span style="color: #babed8">&#125;</span></span></code></pre></div><h4 id="1-3-添加待办"><a href="#1-3-添加待办" class="headerlink" title="1.3 添加待办"></a>1.3 添加待办</h4><h5 id="1-3-1-基本信息"><a href="#1-3-1-基本信息" class="headerlink" title="1.3.1 基本信息"></a>1.3.1 基本信息</h5><p>​| 请求路径： &#x2F;tasks</p><p>​        | 请求方式：POST</p><p>​        | 接口描述：该接口用于添加待办事项数据</p><h5 id="1-3-2-请求参数"><a href="#1-3-2-请求参数" class="headerlink" title="1.3.2 请求参数"></a>1.3.2 请求参数</h5><p>参数格式：application&#x2F;json</p><p>参数说明：</p><table><thead><tr><th>参数名</th><th>类型</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>realStudentId</td><td>string</td><td>必须</td><td>学号，必须是student表里有的学号</td></tr><tr><td>description</td><td>string</td><td>必须</td><td>待办事项</td></tr><tr><td>status</td><td>number</td><td>必须</td><td>完成状态，0代表未完成，1代表完成</td></tr></tbody></table><p>请求参数样例：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">&#123;</span></span><span class="line"><span style="color: #babed8">   &quot;realStudentId&quot;: &quot;202225220503&quot;,</span></span><span class="line"><span style="color: #babed8">   &quot;description&quot;: &quot;完成Java实验任务&quot;,</span></span><span class="line"><span style="color: #babed8">   &quot;status&quot;: 0</span></span><span class="line"><span style="color: #babed8">&#125;</span></span></code></pre></div><h5 id="1-3-3-响应数据"><a href="#1-3-3-响应数据" class="headerlink" title="1.3.3 响应数据"></a>1.3.3 响应数据</h5><p>参数格式：application&#x2F;json</p><p>参数说明：</p><table><thead><tr><th>参数名</th><th>类型</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>code</td><td>number</td><td>必须</td><td>响应码，1代表成功，0代表失败</td></tr><tr><td>msg</td><td>string</td><td>非必须</td><td>提示信息</td></tr><tr><td>data</td><td>object</td><td>非必须</td><td>返回的数据</td></tr></tbody></table><p>响应数据样例：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">&#123;</span></span><span class="line"><span style="color: #babed8">    &quot;code&quot;: 1,</span></span><span class="line"><span style="color: #babed8">    &quot;msg&quot;: &quot;success&quot;,</span></span><span class="line"><span style="color: #babed8">    &quot;data&quot;: null</span></span><span class="line"><span style="color: #babed8">&#125;</span></span></code></pre></div><h4 id="1-4-修改待办"><a href="#1-4-修改待办" class="headerlink" title="1.4 修改待办"></a>1.4 修改待办</h4><h5 id="1-4-1-基本信息"><a href="#1-4-1-基本信息" class="headerlink" title="1.4.1 基本信息"></a>1.4.1 基本信息</h5><p>​| 请求路径： &#x2F;tasks&#x2F;{taskId}</p><p>​        | 请求方式：PUT</p><p>​        | 接口描述：该接口用于修改待办事项数据</p><h5 id="1-4-2-请求参数"><a href="#1-4-2-请求参数" class="headerlink" title="1.4.2 请求参数"></a>1.4.2 请求参数</h5><p>参数格式：application&#x2F;json</p><p>参数说明：</p><table><thead><tr><th>参数名</th><th>类型</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>realStudentId</td><td>string</td><td>必须</td><td>学号，必须是student表里有的学号</td></tr><tr><td>description</td><td>string</td><td>必须</td><td>待办事项</td></tr><tr><td>status</td><td>number</td><td>必须</td><td>完成状态，0代表未完成，1代表完成</td></tr></tbody></table><p>请求参数样例：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">&#123;</span></span><span class="line"><span style="color: #babed8">   &quot;realStudentId&quot;: &quot;202225220503&quot;,</span></span><span class="line"><span style="color: #babed8">   &quot;description&quot;: &quot;完成Java实验任务&quot;,</span></span><span class="line"><span style="color: #babed8">   &quot;status&quot;: 0</span></span><span class="line"><span style="color: #babed8">&#125;,</span></span></code></pre></div><h5 id="1-4-3-响应数据"><a href="#1-4-3-响应数据" class="headerlink" title="1.4.3 响应数据"></a>1.4.3 响应数据</h5><p>参数格式：application&#x2F;json</p><p>参数说明：</p><table><thead><tr><th>参数名</th><th>类型</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>code</td><td>number</td><td>必须</td><td>响应码，1代表成功，0代表失败</td></tr><tr><td>msg</td><td>string</td><td>非必须</td><td>提示信息</td></tr><tr><td>data</td><td>object</td><td>非必须</td><td>返回的数据</td></tr></tbody></table><p>响应数据样例：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">&#123;</span></span><span class="line"><span style="color: #babed8">    &quot;code&quot;: 1,</span></span><span class="line"><span style="color: #babed8">    &quot;msg&quot;: &quot;success&quot;,</span></span><span class="line"><span style="color: #babed8">    &quot;data&quot;: null</span></span><span class="line"><span style="color: #babed8">&#125;</span></span></code></pre></div><h3 id="3-学生管理"><a href="#3-学生管理" class="headerlink" title="3.学生管理"></a>3.学生管理</h3><h4 id="3-1-添加学生"><a href="#3-1-添加学生" class="headerlink" title="3.1 添加学生"></a>3.1 添加学生</h4><h6 id="3-1-1-基本信息"><a href="#3-1-1-基本信息" class="headerlink" title="3.1.1 基本信息"></a>3.1.1 基本信息</h6><p>​| 请求路径： &#x2F;students</p><p>​        | 请求方式：POST</p><p>​        | 接口描述：该接口用于添加待办事项数据</p><h6 id="3-1-2-请求参数"><a href="#3-1-2-请求参数" class="headerlink" title="3.1.2 请求参数"></a>3.1.2 请求参数</h6><p>参数格式：application&#x2F;json</p><p>参数说明：</p><table><thead><tr><th>参数名</th><th>类型</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>realStudentId</td><td>string</td><td>必须</td><td>学号</td></tr><tr><td>name</td><td>string</td><td>必须</td><td>学生姓名</td></tr><tr><td>college</td><td>string</td><td>必须</td><td>学院</td></tr><tr><td>major</td><td>string</td><td>必须</td><td>专业</td></tr><tr><td>classNum</td><td>number</td><td>必须</td><td>班级</td></tr><tr><td>grade</td><td>number</td><td>必须</td><td>年级</td></tr></tbody></table><p>请求参数样例：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">&#123;</span></span><span class="line"><span style="color: #babed8">   &quot;realStudentId&quot;: &quot;202225220505&quot;,</span></span><span class="line"><span style="color: #babed8">   &quot;name&quot;: &quot;何泳泳&quot;,</span></span><span class="line"><span style="color: #babed8">   &quot;college&quot;: &quot;软件学院&quot;,</span></span><span class="line"><span style="color: #babed8">   &quot;major&quot;: &quot;软件工程&quot;,</span></span><span class="line"><span style="color: #babed8">   &quot;classNum&quot;: 5,</span></span><span class="line"><span style="color: #babed8">   &quot;grade&quot;: 2022</span></span><span class="line"><span style="color: #babed8">&#125;</span></span></code></pre></div><h6 id="3-1-3响应数据"><a href="#3-1-3响应数据" class="headerlink" title="3.1.3响应数据"></a>3.1.3响应数据</h6><p>参数格式：application&#x2F;json</p><p>参数说明：</p><table><thead><tr><th>参数名</th><th>类型</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>code</td><td>number</td><td>必须</td><td>响应码，1代表成功，0代表失败</td></tr><tr><td>msg</td><td>string</td><td>非必须</td><td>提示信息</td></tr><tr><td>data</td><td>object</td><td>非必须</td><td>返回的数据</td></tr></tbody></table><p>响应数据样例：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">&#123;</span></span><span class="line"><span style="color: #babed8">    &quot;code&quot;: 1,</span></span><span class="line"><span style="color: #babed8">    &quot;msg&quot;: &quot;success&quot;,</span></span><span class="line"><span style="color: #babed8">    &quot;data&quot;: null</span></span><span class="line"><span style="color: #babed8">&#125;</span></span></code></pre></div>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6神，启动！</title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<p>本文旨在测试博客图片上传功能，为了解决博客上传图片失败问题努力了几个小时后终于发现了问题所在，在hexo中的 hexo-asset-image 图片模块和 hexo-abbrlink 不兼容导致。</p><p>解决方法：在node_modules&#x2F;hexo-asset-image&#x2F;index.js中将代码中的”var endPos &#x3D; link.length - 1”改为”-5”即可解决。</p><hr><h2 id="6神，启动！"><a href="#6神，启动！" class="headerlink" title="6神，启动！"></a>6神，启动！</h2><p><img src="/posts/0/IMG_20231003_103115.jpg" alt="IMG_20231003_103115"></p><p><img src="/posts/0/IMG_20231005_001738.jpg" alt="IMG_20231005_001738"></p><p><img src="/posts/0/IMG_20231110_200055.jpg" alt="IMG_20231110_200055"></p><p><img src="/posts/0/IMG_20231211_223334.jpg" alt="IMG_20231211_223334"></p><p><img src="/posts/0/img-1696674810542b938000ebdd92c29bc9e4cedc912280a4d52fec133f96ba929d38287bbb777cd.jpg" alt="img-1696674810542b938000ebdd92c29bc9e4cedc912280a4d52fec133f96ba929d38287bbb777cd"></p><p><img src="/posts/0/img-1696674816616e87dd3b0b5538d91c1cf4afb60d539ac656c741f0ef77f0c68fa8c9ae3293041.jpg" alt="img-1696674816616e87dd3b0b5538d91c1cf4afb60d539ac656c741f0ef77f0c68fa8c9ae3293041"></p><p><img src="/posts/0/img-1699261717243a2e3ed9ecf2e4f1423b4c77d6f0eefcc366984d4e928975fa61708a114115039.jpg" alt="img-1699261717243a2e3ed9ecf2e4f1423b4c77d6f0eefcc366984d4e928975fa61708a114115039"></p><p><img src="/posts/0/img-1698500159523b964171cff67018b21a47ae2ee01f51b987e325471de82188a390de7788f9b07.jpg" alt="img-1698500159523b964171cff67018b21a47ae2ee01f51b987e325471de82188a390de7788f9b07"></p><p><img src="/posts/0/SNH48_130d3086-9069-47f5-8ef2-c163935f7fc8.png" alt="SNH48_130d3086-9069-47f5-8ef2-c163935f7fc8"></p><p><img src="/posts/0/SNH48_97455466-f732-43a4-9be0-8698cd0eb906.png" alt="SNH48_97455466-f732-43a4-9be0-8698cd0eb906"></p><p><img src="/posts/0/SNH48_ac919d55-0076-4063-a9a8-dc1cc425d855.png" alt="SNH48_ac919d55-0076-4063-a9a8-dc1cc425d855"></p><p><img src="/posts/0/SNH48_59c354e4-a671-4b33-bacf-8cad13ee5e46.png" alt="SNH48_59c354e4-a671-4b33-bacf-8cad13ee5e46"></p><p><img src="/posts/0/SNH48_45b87273-fd90-42f3-8cf5-8336799ca355.png" alt="SNH48_45b87273-fd90-42f3-8cf5-8336799ca355"></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黄怡慈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCAU软件工程经济学知识点</title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<h2 id="SCAU软件工程经济学知识点"><a href="#SCAU软件工程经济学知识点" class="headerlink" title="SCAU软件工程经济学知识点"></a>SCAU软件工程经济学知识点</h2><p>*<strong>有哪些分类，有哪些方法，有哪些特点*</strong></p><p><strong>第一章</strong></p><p>1.<strong>软件的定义</strong>：它是包括程序、数据及其相关文档的完整集合。</p><p>2.按软件功能分类：系统、支撑、应用。</p><p>3.按规模分类：微型、小型、中型、大型、超大型、极大型。</p><p>4.按标准化程度分类：标准化、半定制、软件服务（定制软件）。</p><p>5.按硬件或软件关联分类：嵌入型、组织型、半独立型。</p><p>6.按工作方式：实时处理、多用户分时处理、交互式、批处理。</p><p>7.软件特点：信息产品、从头开始生产、知识结晶、手工方式生产、无需库存成本、壁垒低、对用户有粘性。</p><p>8.<strong>软件产业</strong>是指软件产品和软件服务相关的一切经济活动和关系的总称。</p><p>9.软件产业特点：高技术高附加值高效益、高度关联性、国际化、专业化分工、规模化经济效益。</p><p>10.发展模式：“全面领先”技术与服务领导型——美国，“整机带动”嵌入式系统开发型——日韩，“软件集散”生产本地化型——爱尔兰，“外包服务”国际加工服务型——印度。</p><p>11.产业不足：关键核心缺乏、自主创新能力弱、企业规模小、产权保护力度弱。</p><p>12.软件企业：分为软件产品企业和软件服务企业。</p><p>13.软件工程生产过程方法论：技术学、经济学、管理学。 </p><p>14.软件生产周期：从概念形成开始，经过开发、使用和维护，直到最后退役的全过程。</p><p>15.<strong>计算题：功能点计算方法</strong></p><p><img src="/posts/0/clip_image002.gif" alt="截图.png"></p><p>W为加权系数，d为基本信息量。</p><p>wd为题目表格中数据相乘后相加。</p><p>Fi环境复杂度参数（题目给出）</p><p>16.衡量产品质量高低的指标：技术性能指标（处理能力）和可靠性指标（持久能力）。</p><p>17.软件的可靠性是关系到系统成败的重要因素。</p><p>18.<strong>软件工程经济学四个部分：</strong></p><p><img src="/posts/0/clip_image004.gif" alt="截图.png"></p><p><strong>第二章</strong></p><p>1.沉没成本：已经发生的不可收回的支出。</p><p>2.任何对软件项目的工程经济分析与研究都必须从实体维、时间维和要素维等三个维度展开。</p><p>3.经济活动分析与评价特征：系统分析的目的是为了提高工程经济活动的经济效果，经济效果大多与“未来”有关，系统分析强调的是在技术可行性基础上的经济分析，系统评价是通过“比较”来完成的，统评价应是各利益主体目标的相互协调与均衡。</p><p>4.投资：实现目标而进行资金投放或运行的经济活动。</p><p>5.投资活动包括：生产性投资（保证生产运行）和非生产性投资（证券投资）。</p><p>6.建设项目投资包括：固定资产投资（设备）、流动资金投资（工资原材料）、无形资产投资（使用权）。</p><p>7.筹资和资金运用、项目可行性、市场调查。</p><p>8.项目的可行性分析：必要性、可实现性、效果性与风险性。</p><p>9.总成本费用：生产成本、管理费用、财务费用和销售费用。</p><p>10.收入：销售收入、劳务收入、使用费收入、股利收入及利息收入。</p><p>11.税金：增值税（增值额）、营业税、企业所得税（生产经营）、城乡维护建设税（维护公共设施）、教育费附加。</p><p>12.所得税：企业所得税与个人所得税。</p><p>13.利润：</p><p><img src="/posts/0/clip_image006.gif" alt="截图.png"></p><p>14.资金的时间价值：绝对金额随时间转移后其增加或减少的金额部分。</p><p>15.<strong>计算题：年利率（本利和）的计算</strong>。</p><p><img src="/posts/0/clip_image008.gif" alt="截图.png"></p><p>16.<strong>现金流量图</strong>：箭头向上者表示现金流入(或正现金流)，箭头向下者表示现金流出(或负现金流)。<strong>注意现金流量图对象！</strong></p><p>17.<strong>计算题：初值和本利的计算</strong>。</p><p><img src="/posts/0/clip_image010.gif" alt="截图.png"></p><p>例题：</p><p><img src="/posts/0/clip_image012.gif" alt="截图.png"></p><p><img src="/posts/0/clip_image014.gif" alt="截图.png"></p><p><img src="/posts/0/clip_image016.gif" alt="截图.png"></p><p><img src="/posts/0/clip_image018.gif" alt="截图.png"></p><p>18.***<strong>计算题：等额系列现金流</strong>。</p><p><img src="/posts/0/clip_image020.jpg" alt="IMG_20230629_201331.jpg"></p><p><img src="/posts/0/clip_image022.gif" alt="截图.png"></p><p>A为每年等额偿还&#x2F;存储的金额。Sn为最后一年金额。P0为首年金额。</p><p>A&#x3D;P0 × CRF（偿还）</p><p>A&#x3D;Sn × SFF （存储）</p><p>例题：</p><p><img src="/posts/0/clip_image024.gif" alt="截图.png"></p><p><img src="/posts/0/clip_image026.gif" alt="截图.png"></p><p>19.招标与投标的特征：组织性（招标特有）、公开性、一次性决定、公平性。</p><p>20.招标类型：按公开程度和参加人数的限制条件分类，可划分为竞争性招标（公开招标）和有限招标（邀请招标），按合同的条件分类，可分为自动条件招标、随机条件招标、谈判招标。</p><p> <strong>第三章</strong></p><p>1.成本的经济内容：劳动资料方面的消耗、劳动对象方面的消耗、人工方面的消费的消耗。</p><p>2.成本的特点：消耗性、补偿性、目的性、综合性、代偿性。</p><p>3.成本的分类：按企业主要经营活动——研究与开发成本、采购成本、生产成本、经营成本、管理费用。按成本与产量的对应关系——变动成本与固定成本。按成本的确定时间——预测成本、定额成本、计划成本、实际成本。</p><p>4.软件成本构成：硬件购置费用、网络通信费用、软件购置费用、基建费用、人力资源费用、硬件生产测试费、软件开发&#x2F;测试费用、水、电、运输费用、消耗材料及废品损失费用、培训费用、系统营销费用、管理费用、其他费用。</p><p>5.减少成本测算误差的策略。</p><p>6.<strong>计算题：功能分解法（不考大题）</strong></p><p>最小可能值ai、最大可能值bi、最可能值mi、平均规模Ej</p><p><img src="/posts/0/clip_image028.gif" alt="截图.png"></p><p>成本费用Coi、劳动生产率Eoi、各子系统模块成本Ci、各子系统工作量Mi</p><p>软件总成本Cs、总工作量Es（Ms）</p><p><img src="/posts/0/clip_image030.gif" alt="截图.png"></p><p><img src="/posts/0/clip_image032.jpg" alt="IMG_20230629_185330.jpg"></p><p>例题：习题三第3题</p><p>7.<strong>计算题：影响因子法与COCOMO模型</strong></p><p>U为综合影响要素</p><p><img src="/posts/0/clip_image034.gif" alt="截图.png"></p><p><img src="/posts/0/clip_image036.gif" alt="截图.png"></p><p>Cs软件开发成本、a工时费用率、Ms修正工作量、Mo基本工作量</p><p>L软件开发规模、Td工期、rkhd形式参数（根据类型判断）。</p><p>组织性：程序规模较小；嵌入型：硬件软件限制条件下运行；半独立型：规模较大。</p><p>例题：</p><p><img src="/posts/0/clip_image038.gif" alt="截图.png"></p><p><img src="/posts/0/clip_image040.gif" alt="截图.png"></p><p>8.<strong>计算题：类比法估计目标软件成本</strong></p><p>改变调整系数AAF、原软件开发规模La、新软件开发规模Lb</p><p>DM设计修改百分比、CM代码修改百分比、IM集成修改百分比</p><p><img src="/posts/0/clip_image042.gif" alt="截图.png"></p><p>W1 &#x3D; 0.4、 W2 &#x3D; W3 &#x3D; 0.3</p><p><img src="/posts/0/clip_image044.gif" alt="截图.png"></p><p>9.ABC分类法</p><p><img src="/posts/0/clip_image046.gif" alt="截图.png"></p><p><img src="/posts/0/clip_image048.gif" alt="截图.png"></p><p>成本控制的重点研究对象：ABC分类（从大到小排序）</p><p>10.<strong>计算题：挣值管理法</strong></p><p>四个关键指标：总预算成本TBC、累计预算成本CBC、累计实现成本CAC、累计实现价值CEV。</p><p>四个绩效评价参数：成本偏差CV：CV&#x3D;CEV-CAC、成本绩效CPI：CPI&#x3D;CEV&#x2F;CAC、进度偏差SV：SV&#x3D;CEV-CBC、进度绩效SPI：SPI&#x3D;CEV&#x2F;CBC。</p><p>完工预测成本FCAC：FCAC&#x3D;TBC&#x2F;CPI、FCAC&#x3D;CAC+(TBC-CEV)、FCAC&#x3D;CAC+重估剩余工程预算。</p><p>11.软件产品的定价和营销是软件生存周期中的两项重要工程经济活动。</p><p>12.产品价格是由其价值所决定的。</p><p>13.软件价格的影响因素：用户需求、产品成本、市场竞争和垄断及环境因素。</p><p>14.软件的定价目标：利润导向、收益导向、销售导向、竞争导向、品牌导向、维持生存导向。</p><p>15.<strong>软件的定价方法</strong>：成本导向定价法、需求导向定价法、竞争导向定价法。</p><p>16.软件的定价策略：撇脂和渗透定价策略，捆绑定价策略，免费使用策略，歧视定价策略。</p><p>17.软件的市场营销过程一般包括： ① 目标市场定位 ② 确定产品策略③ 确定定价策略④ 确定(销售)渠道策略 ⑤ 确定促销策略⑥ 确定服务策略。</p><p><strong>第四章</strong></p><p>1.项目评价：净现值法、内部收益率法和投资回收期法。</p><p>2.<strong>计算题：净现值法NPV</strong></p><p><img src="/posts/0/clip_image050.gif" alt="截图.png"></p><p>Bt寿命期内收益、Ct支出（成本）、Dt残值、Kt投资额、i基准贴现率、N使用年限</p><p>NPV&gt;0 投资可行 NPV&lt;&#x3D;0投资不可行</p><p>3.<strong>计算题：内部收益法（不要求计算）了解原理</strong>：求NPV(IRR)（对分法）。</p><p>4.<strong>计算题：投资回收期法</strong></p><p><img src="/posts/0/clip_image052.gif" alt="截图.png"></p><p>5.<strong>计算题：净现值法进行多方案比较</strong></p><p><img src="/posts/0/clip_image054.gif" alt="截图.png"></p><p>6.<strong>计算题：净年值法进行多方案比较</strong></p><p>CRF资金回收系数</p><p><img src="/posts/0/clip_image056.gif" alt="截图.png"></p><p>7.<strong>计算题：研究期法（是否承认未使用价值）</strong></p><p><img src="/posts/0/clip_image058.jpg" alt="IMG_20230629_201257.jpg"></p><p>8.计算题：费用现值法</p><p><img src="/posts/0/clip_image060.jpg" alt="IMG_20230629_201309.jpg"></p><p>9.计算题：年费用现值法</p><p><img src="/posts/0/clip_image062.jpg" alt="IMG_20230629_201318.jpg"></p><p>10.效益的分类：成本与支出费用的节省、社会财富的增加、服务水平的提高、管理水平的提高。</p><p>11.对软件项目实际效益与预测效益评价常采用系统运行前后对比法和参数估计法。</p><p>12.软件的社会效益评价：系统评价以定性分析为主、社会评价无通用方法、对社会的贡献以间接效益、无形效果和外部效果为主。</p><p>13.软件项目的风险：</p><p><img src="/posts/0/clip_image064.gif" alt="截图.png"></p><p><strong>第五章（略）</strong></p><p><strong>第六章</strong></p><p>1.软件的开发的产品目标：质量、成本、进度和团队。</p><p>2.<strong>计划网络图与关键路径！！！</strong></p><p>特征：有向性和不可逆转性、连通性、封闭性。</p><p>当计划网络出现多个起始结点或多个终止结点时，应引入虚活动。</p><p><img src="/posts/0/clip_image066.gif" alt="截图.png"></p><p><img src="/posts/0/clip_image068.gif" alt="截图.png"></p><p><img src="/posts/0/clip_image070.gif" alt="截图.png"></p><p><img src="/posts/0/clip_image072.gif" alt="截图.png"></p><p>3.<strong>软件开发团队的组织建设</strong></p><p><img src="/posts/0/clip_image074.gif" alt="截图.png"></p><p><img src="/posts/0/clip_image076.gif" alt="截图.png"></p><p><img src="/posts/0/clip_image078.gif" alt="截图.png"></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>响应状态码</title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、状态码大类"><a href="#一、状态码大类" class="headerlink" title="一、状态码大类"></a>一、状态码大类</h2><table><thead><tr><th>状态码分类</th><th>说明</th></tr></thead><tbody><tr><td>1xx</td><td><strong>响应中</strong>——临时状态码，表示请求已经接受，告诉客户端应该继续请求或者如果它已经完成则忽略它</td></tr><tr><td>2xx</td><td><strong>成功</strong>——表示请求已经被成功接收，处理已完成</td></tr><tr><td>3xx</td><td><strong>重定向</strong>——重定向到其它地方：它让客户端再发起一个请求以完成整个处理。</td></tr><tr><td>4xx</td><td><strong>客户端错误</strong>——处理发生错误，责任在客户端，如：客户端的请求一个不存在的资源，客户端未被授权，禁止访问等</td></tr><tr><td>5xx</td><td><strong>服务器端错误</strong>——处理发生错误，责任在服务端，如：服务端抛出异常，路由出错，HTTP版本不支持等</td></tr></tbody></table><h2 id="二、常见的响应状态码"><a href="#二、常见的响应状态码" class="headerlink" title="二、常见的响应状态码"></a>二、常见的响应状态码</h2><table><thead><tr><th>状态码</th><th>英文描述</th><th>解释</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;200&#x3D;&#x3D;</td><td><strong><code>OK</code></strong></td><td>客户端请求成功，即<strong>处理成功</strong>，这是我们最想看到的状态码</td></tr><tr><td>302</td><td><strong><code>Found</code></strong></td><td>指示所请求的资源已移动到由<code>Location</code>响应头给定的 URL，浏览器会自动重新访问到这个页面</td></tr><tr><td>304</td><td><strong><code>Not Modified</code></strong></td><td>告诉客户端，你请求的资源至上次取得后，服务端并未更改，你直接用你本地缓存吧。隐式重定向</td></tr><tr><td>400</td><td><strong><code>Bad Request</code></strong></td><td>客户端请求有<strong>语法错误</strong>，不能被服务器所理解</td></tr><tr><td>403</td><td><strong><code>Forbidden</code></strong></td><td>服务器收到请求，但是<strong>拒绝提供服务</strong>，比如：没有权限访问相关资源</td></tr><tr><td>&#x3D;&#x3D;404&#x3D;&#x3D;</td><td><strong><code>Not Found</code></strong></td><td><strong>请求资源不存在</strong>，一般是URL输入有误，或者网站资源被删除了</td></tr><tr><td>405</td><td><strong><code>Method Not Allowed</code></strong></td><td>请求方式有误，比如应该用GET请求方式的资源，用了POST</td></tr><tr><td>428</td><td><strong><code>Precondition Required</code></strong></td><td><strong>服务器要求有条件的请求</strong>，告诉客户端要想访问该资源，必须携带特定的请求头</td></tr><tr><td>429</td><td><strong><code>Too Many Requests</code></strong></td><td>指示用户在给定时间内发送了<strong>太多请求</strong>（“限速”），配合 Retry-After(多长时间后可以请求)响应头一起使用</td></tr><tr><td>431</td><td><strong><code> Request Header Fields Too Large</code></strong></td><td><strong>请求头太大</strong>，服务器不愿意处理请求，因为它的头部字段太大。请求可以在减少请求头域的大小后重新提交。</td></tr><tr><td>&#x3D;&#x3D;500&#x3D;&#x3D;</td><td><strong><code>Internal Server Error</code></strong></td><td><strong>服务器发生不可预期的错误</strong>。服务器出异常了，赶紧看日志去吧</td></tr><tr><td>503</td><td><strong><code>Service Unavailable</code></strong></td><td><strong>服务器尚未准备好处理请求</strong>，服务器刚刚启动，还未初始化好</td></tr></tbody></table><p>状态码大全：<a href="https://cloud.tencent.com/developer/chapter/13553">https://cloud.tencent.com/developer/chapter/13553</a> </p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h3 id="博客简介"><a href="#博客简介" class="headerlink" title="博客简介"></a>博客简介</h3><p>个人文章存档，生活记录，主打一个玩。</p><h3 id="个人介绍"><a href="#个人介绍" class="headerlink" title="个人介绍"></a>个人介绍</h3><p>学Java死路一条。</p>]]></content>
      
    </entry>
    
    
  
</search>
